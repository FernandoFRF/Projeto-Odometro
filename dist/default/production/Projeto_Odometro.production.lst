

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Tue Nov 12 18:55:36 2019

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           ; Version 1.40
    34                           ; Generated 01/12/2016 GMT
    35                           ; 
    36                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4550 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataCOMRAM
    69  000E32                     __pidataCOMRAM:
    70                           	opt stack 0
    71                           
    72                           ;initializer for EscreveInteiroLCD@F3948
    73  000E32  30                 	db	48
    74  000E33  30                 	db	48
    75  000E34  30                 	db	48
    76  000E35  30                 	db	48
    77  000E36  30                 	db	48
    78  000E37  30                 	db	48
    79  000E38  00                 	db	0
    80                           
    81                           ;initializer for _odoParcial
    82  000E39  30                 	db	48
    83  000E3A  30                 	db	48
    84  000E3B  30                 	db	48
    85  000E3C  30                 	db	48
    86  000E3D  2C                 	db	44
    87  000E3E  30                 	db	48
    88  000E3F  00                 	db	0
    89                           
    90                           ;initializer for _odoTotal
    91  000E40  30                 	db	48
    92  000E41  30                 	db	48
    93  000E42  30                 	db	48
    94  000E43  30                 	db	48
    95  000E44  30                 	db	48
    96  000E45  30                 	db	48
    97  000E46  00                 	db	0
    98  0000                     _ADCON0	set	4034
    99  0000                     _ADCON1	set	4033
   100  0000                     _ADCON2	set	4032
   101  0000                     _CCP1CON	set	4029
   102  0000                     _EEADR	set	4009
   103  0000                     _EECON1	set	4006
   104  0000                     _EECON1bits	set	4006
   105  0000                     _EECON2	set	4007
   106  0000                     _EEDATA	set	4008
   107  0000                     _INTCON	set	4082
   108  0000                     _INTCON2	set	4081
   109  0000                     _INTCON3	set	4080
   110  0000                     _INTCONbits	set	4082
   111  0000                     _IPR1	set	3999
   112  0000                     _IPR2	set	4002
   113  0000                     _LATA	set	3977
   114  0000                     _LATB	set	3978
   115  0000                     _LATD	set	3980
   116  0000                     _PIE1	set	3997
   117  0000                     _PIE1bits	set	3997
   118  0000                     _PIE2	set	4000
   119  0000                     _PIR1	set	3998
   120  0000                     _PIR1bits	set	3998
   121  0000                     _PIR2	set	4001
   122  0000                     _PORTDbits	set	3971
   123  0000                     _PORTEbits	set	3972
   124  0000                     _RCON	set	4048
   125  0000                     _T0CON	set	4053
   126  0000                     _T1CON	set	4045
   127  0000                     _T3CONbits	set	4017
   128  0000                     _TRISA	set	3986
   129  0000                     _TRISB	set	3987
   130  0000                     _TRISC	set	3988
   131  0000                     _TRISCbits	set	3988
   132  0000                     _TRISD	set	3989
   133  0000                     _TRISDbits	set	3989
   134  0000                     _TRISE	set	3990
   135                           
   136                           	psect	smallconst
   137  000800                     __psmallconst:
   138                           	opt stack 0
   139  000800  00                 	db	0
   140  000801                     STR_1:
   141  000801  4B                 	db	75	;'K'
   142  000802  6D                 	db	109	;'m'
   143  000803  00                 	db	0
   144  000804  00                 	db	0	; dummy byte at the end
   145  0000                     
   146                           ; #config settings
   147                           
   148                           	psect	cinit
   149  000D62                     __pcinit:
   150                           	opt stack 0
   151  000D62                     start_initialization:
   152                           	opt stack 0
   153  000D62                     __initialization:
   154                           	opt stack 0
   155                           
   156                           ; Initialize objects allocated to COMRAM (21 bytes)
   157                           ; load TBLPTR registers with __pidataCOMRAM
   158  000D62  0E32               	movlw	low __pidataCOMRAM
   159  000D64  6EF6               	movwf	tblptrl,c
   160  000D66  0E0E               	movlw	high __pidataCOMRAM
   161  000D68  6EF7               	movwf	tblptrh,c
   162  000D6A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   163  000D6C  6EF8               	movwf	tblptru,c
   164  000D6E  EE00  F018         	lfsr	0,__pdataCOMRAM
   165  000D72  EE10 F015          	lfsr	1,21
   166  000D76                     copy_data0:
   167  000D76  0009               	tblrd		*+
   168  000D78  CFF5 FFEE          	movff	tablat,postinc0
   169  000D7C  50E5               	movf	postdec1,w,c
   170  000D7E  50E1               	movf	fsr1l,w,c
   171  000D80  E1FA               	bnz	copy_data0
   172                           
   173                           ; Clear objects allocated to COMRAM (9 bytes)
   174  000D82  EE00  F02D         	lfsr	0,__pbssCOMRAM
   175  000D86  0E09               	movlw	9
   176  000D88                     clear_0:
   177  000D88  6AEE               	clrf	postinc0,c
   178  000D8A  06E8               	decf	wreg,f,c
   179  000D8C  E1FD               	bnz	clear_0
   180  000D8E                     end_of_initialization:
   181                           	opt stack 0
   182  000D8E                     __end_of__initialization:
   183                           	opt stack 0
   184  000D8E  9036               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   185  000D90  9236               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   186  000D92  0E00               	movlw	low (__Lmediumconst shr (0+16))
   187  000D94  6EF8               	movwf	tblptru,c
   188  000D96  0100               	movlb	0
   189  000D98  EF0A  F007         	goto	_main	;jump to C main() function
   190                           tblptru	equ	0xFF8
   191                           tblptrh	equ	0xFF7
   192                           tblptrl	equ	0xFF6
   193                           tablat	equ	0xFF5
   194                           postinc0	equ	0xFEE
   195                           wreg	equ	0xFE8
   196                           postdec1	equ	0xFE5
   197                           fsr1l	equ	0xFE1
   198                           
   199                           	psect	bssCOMRAM
   200  00002D                     __pbssCOMRAM:
   201                           	opt stack 0
   202  00002D                     _atualizaOdoParcial:
   203                           	opt stack 0
   204  00002D                     	ds	2
   205  00002F                     _atualizaOdoTotal:
   206                           	opt stack 0
   207  00002F                     	ds	2
   208  000031                     _bordaParcial:
   209                           	opt stack 0
   210  000031                     	ds	2
   211  000033                     _bordaTotal:
   212                           	opt stack 0
   213  000033                     	ds	2
   214  000035                     odometroParcial@i:
   215                           	opt stack 0
   216  000035                     	ds	1
   217                           tblptru	equ	0xFF8
   218                           tblptrh	equ	0xFF7
   219                           tblptrl	equ	0xFF6
   220                           tablat	equ	0xFF5
   221                           postinc0	equ	0xFEE
   222                           wreg	equ	0xFE8
   223                           postdec1	equ	0xFE5
   224                           fsr1l	equ	0xFE1
   225                           
   226                           	psect	dataCOMRAM
   227  000018                     __pdataCOMRAM:
   228                           	opt stack 0
   229  000018                     EscreveInteiroLCD@F3948:
   230                           	opt stack 0
   231  000018                     	ds	7
   232  00001F                     _odoParcial:
   233                           	opt stack 0
   234  00001F                     	ds	7
   235  000026                     _odoTotal:
   236                           	opt stack 0
   237  000026                     	ds	7
   238                           tblptru	equ	0xFF8
   239                           tblptrh	equ	0xFF7
   240                           tblptrl	equ	0xFF6
   241                           tablat	equ	0xFF5
   242                           postinc0	equ	0xFEE
   243                           wreg	equ	0xFE8
   244                           postdec1	equ	0xFE5
   245                           fsr1l	equ	0xFE1
   246                           
   247                           	psect	cstackCOMRAM
   248  000001                     __pcstackCOMRAM:
   249                           	opt stack 0
   250  000001                     ??_isr:
   251  000001                     
   252                           ; 1 bytes @ 0x0
   253  000001                     	ds	14
   254  00000F                     Delay@Cnt1:
   255                           	opt stack 0
   256  00000F                     EEPROM_ReadByte@MemoryAddress:
   257                           	opt stack 0
   258  00000F                     EEPROM_WriteByte@WriteData:
   259                           	opt stack 0
   260                           
   261                           ; 1 bytes @ 0xE
   262  00000F                     	ds	1
   263  000010                     Delay@Cnt2:
   264                           	opt stack 0
   265  000010                     EEPROM_WriteByte@WriteMemoryAddress:
   266                           	opt stack 0
   267                           
   268                           ; 1 bytes @ 0xF
   269  000010                     	ds	1
   270  000011                     EscreveComandoLCD@cmd:
   271                           	opt stack 0
   272  000011                     EnderecoCursor@endereco:
   273                           	opt stack 0
   274  000011                     EscreveCaractereLCD@data:
   275                           	opt stack 0
   276                           
   277                           ; 1 bytes @ 0x10
   278  000011                     	ds	1
   279  000012                     ??_ConfiguraLCD:
   280  000012                     PosicaoCursorLCD@coluna:
   281                           	opt stack 0
   282  000012                     EscreveFraseRamLCD@buffer:
   283                           	opt stack 0
   284                           
   285                           ; 2 bytes @ 0x11
   286  000012                     	ds	1
   287  000013                     PosicaoCursorLCD@linha:
   288                           	opt stack 0
   289                           
   290                           ; 1 bytes @ 0x12
   291  000013                     	ds	1
   292  000014                     PosicaoCursorLCD@EnderecoLCD:
   293                           	opt stack 0
   294                           
   295                           ; 1 bytes @ 0x13
   296  000014                     	ds	1
   297  000015                     odometroTotal@j:
   298                           	opt stack 0
   299                           
   300                           ; 1 bytes @ 0x14
   301  000015                     	ds	1
   302  000016                     odometroTotal@i:
   303                           	opt stack 0
   304                           
   305                           ; 1 bytes @ 0x15
   306  000016                     	ds	1
   307  000017                     odometroTotal@i_310:
   308                           	opt stack 0
   309                           
   310                           ; 1 bytes @ 0x16
   311  000017                     	ds	1
   312  000018                     tblptru	equ	0xFF8
   313                           tblptrh	equ	0xFF7
   314                           tblptrl	equ	0xFF6
   315                           tablat	equ	0xFF5
   316                           postinc0	equ	0xFEE
   317                           wreg	equ	0xFE8
   318                           postdec1	equ	0xFE5
   319                           fsr1l	equ	0xFE1
   320                           
   321                           ; 1 bytes @ 0x17
   322 ;;
   323 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   324 ;;
   325 ;; *************** function _main *****************
   326 ;; Defined at:
   327 ;;		line 36 in file "main.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;		None
   332 ;; Return value:  Size  Location     Type
   333 ;;                  1    wreg      void 
   334 ;; Registers used:
   335 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   341 ;;      Params:         0       0       0       0       0       0       0       0       0
   342 ;;      Locals:         0       0       0       0       0       0       0       0       0
   343 ;;      Temps:          0       0       0       0       0       0       0       0       0
   344 ;;      Totals:         0       0       0       0       0       0       0       0       0
   345 ;;Total ram usage:        0 bytes
   346 ;; Hardware stack levels required when called:    5
   347 ;; This function calls:
   348 ;;		_ConfiguraLCD
   349 ;;		_Init_EEPROM
   350 ;;		_display
   351 ;;		_initHw
   352 ;;		_initInterrupt
   353 ;;		_odometroParcial
   354 ;;		_odometroTotal
   355 ;; This function is called by:
   356 ;;		Startup code after reset
   357 ;; This function uses a non-reentrant model
   358 ;;
   359                           
   360                           	psect	text0
   361  000E14                     __ptext0:
   362                           	opt stack 0
   363  000E14                     _main:
   364                           	opt stack 26
   365                           
   366                           ;main.c: 37: ConfiguraLCD();
   367                           
   368                           ;incstack = 0
   369  000E14  ECBA  F004         	call	_ConfiguraLCD	;wreg free
   370                           
   371                           ;main.c: 38: initInterrupt();
   372  000E18  ECCE  F006         	call	_initInterrupt	;wreg free
   373                           
   374                           ;main.c: 39: initHw();
   375  000E1C  EC8F  F006         	call	_initHw	;wreg free
   376                           
   377                           ;main.c: 40: Init_EEPROM();
   378  000E20  EC2B  F007         	call	_Init_EEPROM	;wreg free
   379                           
   380                           ;main.c: 41: display();
   381  000E24  EC39  F006         	call	_display	;wreg free
   382  000E28                     l1692:
   383                           
   384                           ;main.c: 48: {
   385                           ;main.c: 50: odometroTotal();
   386  000E28  EC63  F004         	call	_odometroTotal	;wreg free
   387                           
   388                           ;main.c: 51: odometroParcial();
   389  000E2C  EC4F  F005         	call	_odometroParcial	;wreg free
   390  000E30  D7FB               	goto	l1692
   391  000E32                     __end_of_main:
   392                           	opt stack 0
   393                           tblptru	equ	0xFF8
   394                           tblptrh	equ	0xFF7
   395                           tblptrl	equ	0xFF6
   396                           tablat	equ	0xFF5
   397                           postinc0	equ	0xFEE
   398                           wreg	equ	0xFE8
   399                           postdec1	equ	0xFE5
   400                           fsr1l	equ	0xFE1
   401                           
   402 ;; *************** function _odometroTotal *****************
   403 ;; Defined at:
   404 ;;		line 15 in file "Odometro_Total_Parcial.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;  i               1   21[COMRAM] unsigned char 
   409 ;;  i               1   22[COMRAM] unsigned char 
   410 ;;  j               1   20[COMRAM] unsigned char 
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   415 ;; Tracked objects:
   416 ;;		On entry : 0/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   420 ;;      Params:         0       0       0       0       0       0       0       0       0
   421 ;;      Locals:         3       0       0       0       0       0       0       0       0
   422 ;;      Temps:          0       0       0       0       0       0       0       0       0
   423 ;;      Totals:         3       0       0       0       0       0       0       0       0
   424 ;;Total ram usage:        3 bytes
   425 ;; Hardware stack levels used:    1
   426 ;; Hardware stack levels required when called:    4
   427 ;; This function calls:
   428 ;;		_EEPROM_ReadByte
   429 ;;		_EEPROM_WriteByte
   430 ;;		_EscreveFraseRamLCD
   431 ;;		_PosicaoCursorLCD
   432 ;; This function is called by:
   433 ;;		_main
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437                           	psect	text1
   438  0008C6                     __ptext1:
   439                           	opt stack 0
   440  0008C6                     _odometroTotal:
   441                           	opt stack 26
   442                           
   443                           ;Odometro_Total_Parcial.c: 16: if (atualizaOdoTotal)
   444                           
   445                           ;incstack = 0
   446  0008C6  502F               	movf	_atualizaOdoTotal,w,c
   447  0008C8  1030               	iorwf	_atualizaOdoTotal+1,w,c
   448  0008CA  B4D8               	btfsc	status,2,c
   449  0008CC  D03A               	goto	l1578
   450                           
   451                           ;Odometro_Total_Parcial.c: 17: {
   452                           ;Odometro_Total_Parcial.c: 18: for(unsigned char i=0; i<5; i++)
   453  0008CE  0E00               	movlw	0
   454  0008D0  6E16               	movwf	odometroTotal@i,c
   455  0008D2                     l1528:
   456  0008D2  0E04               	movlw	4
   457  0008D4  6416               	cpfsgt	odometroTotal@i,c
   458  0008D6  D001               	goto	l1532
   459  0008D8  D006               	goto	l1538
   460  0008DA                     l1532:
   461                           
   462                           ;Odometro_Total_Parcial.c: 19: {
   463                           ;Odometro_Total_Parcial.c: 20: EEPROM_ReadByte(0x10+i);
   464  0008DA  5016               	movf	odometroTotal@i,w,c
   465  0008DC  0F10               	addlw	16
   466  0008DE  EC24  F007         	call	_EEPROM_ReadByte
   467  0008E2  2A16               	incf	odometroTotal@i,f,c
   468  0008E4  D7F6               	goto	l1528
   469  0008E6                     l1538:
   470                           
   471                           ;Odometro_Total_Parcial.c: 21: }
   472                           ;Odometro_Total_Parcial.c: 22: odoTotal[5]++;
   473  0008E6  2A2B               	incf	_odoTotal+5,f,c
   474                           
   475                           ;Odometro_Total_Parcial.c: 23: if (odoTotal[5] > 0x39)
   476  0008E8  0E39               	movlw	57
   477  0008EA  642B               	cpfsgt	_odoTotal+5,c
   478  0008EC  D01B               	goto	l1572
   479                           
   480                           ;Odometro_Total_Parcial.c: 24: {
   481                           ;Odometro_Total_Parcial.c: 25: odoTotal[5] = 0x30;
   482  0008EE  0E30               	movlw	48
   483  0008F0  6E2B               	movwf	_odoTotal+5,c
   484                           
   485                           ;Odometro_Total_Parcial.c: 26: odoTotal[4]++;
   486  0008F2  2A2A               	incf	_odoTotal+4,f,c
   487                           
   488                           ;Odometro_Total_Parcial.c: 27: if (odoTotal[4] > 0x39)
   489  0008F4  0E39               	movlw	57
   490  0008F6  642A               	cpfsgt	_odoTotal+4,c
   491  0008F8  D015               	goto	l1572
   492                           
   493                           ;Odometro_Total_Parcial.c: 28: {
   494                           ;Odometro_Total_Parcial.c: 29: odoTotal[4] = 0x30;
   495  0008FA  0E30               	movlw	48
   496  0008FC  6E2A               	movwf	_odoTotal+4,c
   497                           
   498                           ;Odometro_Total_Parcial.c: 30: odoTotal[3]++;
   499  0008FE  2A29               	incf	_odoTotal+3,f,c
   500                           
   501                           ;Odometro_Total_Parcial.c: 31: if (odoTotal[3] > 0x39)
   502  000900  0E39               	movlw	57
   503  000902  6429               	cpfsgt	_odoTotal+3,c
   504  000904  D00F               	goto	l1572
   505                           
   506                           ;Odometro_Total_Parcial.c: 32: {
   507                           ;Odometro_Total_Parcial.c: 33: odoTotal[3] = 0x30;
   508  000906  0E30               	movlw	48
   509  000908  6E29               	movwf	_odoTotal+3,c
   510                           
   511                           ;Odometro_Total_Parcial.c: 34: odoTotal[2]++;
   512  00090A  2A28               	incf	_odoTotal+2,f,c
   513                           
   514                           ;Odometro_Total_Parcial.c: 35: if (odoTotal[2] > 0x39)
   515  00090C  0E39               	movlw	57
   516  00090E  6428               	cpfsgt	_odoTotal+2,c
   517  000910  D009               	goto	l1572
   518                           
   519                           ;Odometro_Total_Parcial.c: 36: {
   520                           ;Odometro_Total_Parcial.c: 37: odoTotal[2] = 0x30;
   521  000912  0E30               	movlw	48
   522  000914  6E28               	movwf	_odoTotal+2,c
   523                           
   524                           ;Odometro_Total_Parcial.c: 38: odoTotal[1]++;
   525  000916  2A27               	incf	_odoTotal+1,f,c
   526                           
   527                           ;Odometro_Total_Parcial.c: 39: if (odoTotal[1] > 0x39)
   528  000918  0E39               	movlw	57
   529  00091A  6427               	cpfsgt	_odoTotal+1,c
   530  00091C  D003               	goto	l1572
   531                           
   532                           ;Odometro_Total_Parcial.c: 40: {
   533                           ;Odometro_Total_Parcial.c: 41: odoTotal[1] = 0x30;
   534  00091E  0E30               	movlw	48
   535  000920  6E27               	movwf	_odoTotal+1,c
   536                           
   537                           ;Odometro_Total_Parcial.c: 42: odoTotal[0]++;
   538  000922  2A26               	incf	_odoTotal,f,c
   539  000924                     l1572:
   540                           
   541                           ;Odometro_Total_Parcial.c: 46: }
   542                           ;Odometro_Total_Parcial.c: 47: }
   543                           ;Odometro_Total_Parcial.c: 48: }
   544                           ;Odometro_Total_Parcial.c: 49: }
   545                           ;Odometro_Total_Parcial.c: 50: }
   546                           ;Odometro_Total_Parcial.c: 51: }
   547                           ;Odometro_Total_Parcial.c: 53: PosicaoCursorLCD(1, 7);
   548  000924  0E07               	movlw	7
   549  000926  6E12               	movwf	PosicaoCursorLCD@coluna,c
   550  000928  0E01               	movlw	1
   551  00092A  ECCC  F005         	call	_PosicaoCursorLCD
   552                           
   553                           ;Odometro_Total_Parcial.c: 54: EscreveFraseRamLCD(odoTotal);
   554  00092E  0E26               	movlw	low _odoTotal
   555  000930  6E12               	movwf	EscreveFraseRamLCD@buffer,c
   556  000932  0E00               	movlw	high _odoTotal
   557  000934  6E13               	movwf	EscreveFraseRamLCD@buffer+1,c
   558  000936  EC66  F006         	call	_EscreveFraseRamLCD	;wreg free
   559                           
   560                           ;Odometro_Total_Parcial.c: 55: atualizaOdoTotal = 0;
   561  00093A  0E00               	movlw	0
   562  00093C  6E30               	movwf	_atualizaOdoTotal+1,c
   563  00093E  0E00               	movlw	0
   564  000940  6E2F               	movwf	_atualizaOdoTotal,c
   565  000942                     l1578:
   566                           
   567                           ;Odometro_Total_Parcial.c: 57: }
   568                           ;Odometro_Total_Parcial.c: 58: for(unsigned char i=0, j=4; i<5; i++, j--)
   569  000942  0E00               	movlw	0
   570  000944  6E17               	movwf	odometroTotal@i_310,c
   571  000946  0E04               	movlw	4
   572  000948  6E15               	movwf	odometroTotal@j,c
   573  00094A                     l1582:
   574  00094A  0E04               	movlw	4
   575  00094C  6417               	cpfsgt	odometroTotal@i_310,c
   576  00094E  D001               	goto	l1586
   577  000950  0012               	return	
   578  000952                     l1586:
   579                           
   580                           ;Odometro_Total_Parcial.c: 59: {
   581                           ;Odometro_Total_Parcial.c: 60: EEPROM_WriteByte(0x10+i , odoTotal[j]);
   582  000952  5015               	movf	odometroTotal@j,w,c
   583  000954  0D01               	mullw	1
   584  000956  0E26               	movlw	low _odoTotal
   585  000958  24F3               	addwf	prodl,w,c
   586  00095A  6ED9               	movwf	fsr2l,c
   587  00095C  0E00               	movlw	high _odoTotal
   588  00095E  20F4               	addwfc	prodh,w,c
   589  000960  6EDA               	movwf	fsr2h,c
   590  000962  50DF               	movf	indf2,w,c
   591  000964  6E0F               	movwf	EEPROM_WriteByte@WriteData,c
   592  000966  5017               	movf	odometroTotal@i_310,w,c
   593  000968  0F10               	addlw	16
   594  00096A  ECE5  F006         	call	_EEPROM_WriteByte
   595  00096E  2A17               	incf	odometroTotal@i_310,f,c
   596  000970  0615               	decf	odometroTotal@j,f,c
   597  000972  D7EB               	goto	l1582
   598  000974                     __end_of_odometroTotal:
   599                           	opt stack 0
   600                           tblptru	equ	0xFF8
   601                           tblptrh	equ	0xFF7
   602                           tblptrl	equ	0xFF6
   603                           tablat	equ	0xFF5
   604                           prodh	equ	0xFF4
   605                           prodl	equ	0xFF3
   606                           postinc0	equ	0xFEE
   607                           wreg	equ	0xFE8
   608                           postdec1	equ	0xFE5
   609                           fsr1l	equ	0xFE1
   610                           indf2	equ	0xFDF
   611                           fsr2h	equ	0xFDA
   612                           fsr2l	equ	0xFD9
   613                           status	equ	0xFD8
   614                           
   615 ;; *************** function _EEPROM_WriteByte *****************
   616 ;; Defined at:
   617 ;;		line 17 in file "EEPROM.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;  WriteMemoryA    1    wreg     unsigned char 
   620 ;;  WriteData       1   14[COMRAM] unsigned char 
   621 ;; Auto vars:     Size  Location     Type
   622 ;;  WriteMemoryA    1   15[COMRAM] unsigned char 
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		wreg, status,2
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   632 ;;      Params:         1       0       0       0       0       0       0       0       0
   633 ;;      Locals:         1       0       0       0       0       0       0       0       0
   634 ;;      Temps:          0       0       0       0       0       0       0       0       0
   635 ;;      Totals:         2       0       0       0       0       0       0       0       0
   636 ;;Total ram usage:        2 bytes
   637 ;; Hardware stack levels used:    1
   638 ;; Hardware stack levels required when called:    1
   639 ;; This function calls:
   640 ;;		Nothing
   641 ;; This function is called by:
   642 ;;		_odometroTotal
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           	psect	text2
   647  000DCA                     __ptext2:
   648                           	opt stack 0
   649  000DCA                     _EEPROM_WriteByte:
   650                           	opt stack 28
   651                           
   652                           ;incstack = 0
   653                           ;EEPROM_WriteByte@WriteMemoryAddress stored from wreg
   654  000DCA  6E10               	movwf	EEPROM_WriteByte@WriteMemoryAddress,c
   655                           
   656                           ;EEPROM.c: 19: EEADR = WriteMemoryAddress;
   657  000DCC  C010  FFA9         	movff	EEPROM_WriteByte@WriteMemoryAddress,4009	;volatile
   658                           
   659                           ;EEPROM.c: 20: EEDATA = WriteData;
   660  000DD0  C00F  FFA8         	movff	EEPROM_WriteByte@WriteData,4008	;volatile
   661                           
   662                           ;EEPROM.c: 21: EECON1bits.EEPGD = 0;
   663  000DD4  9EA6               	bcf	4006,7,c	;volatile
   664                           
   665                           ;EEPROM.c: 22: EECON1bits.CFGS = 0;
   666  000DD6  9CA6               	bcf	4006,6,c	;volatile
   667                           
   668                           ;EEPROM.c: 23: EECON1bits.WREN = 1;
   669  000DD8  84A6               	bsf	4006,2,c	;volatile
   670                           
   671                           ;EEPROM.c: 24: INTCONbits.GIE = 0;
   672  000DDA  9EF2               	bcf	intcon,7,c	;volatile
   673                           
   674                           ;EEPROM.c: 25: EECON2 = 0x55;
   675  000DDC  0E55               	movlw	85
   676  000DDE  6EA7               	movwf	4007,c	;volatile
   677                           
   678                           ;EEPROM.c: 26: EECON2 = 0x0AA;
   679  000DE0  0EAA               	movlw	170
   680  000DE2  6EA7               	movwf	4007,c	;volatile
   681                           
   682                           ;EEPROM.c: 27: EECON1bits.WR= 1;
   683  000DE4  82A6               	bsf	4006,1,c	;volatile
   684  000DE6                     l159:
   685  000DE6  B2A6               	btfsc	4006,1,c	;volatile
   686  000DE8  D7FE               	goto	l159
   687                           
   688                           ;EEPROM.c: 29: INTCONbits.GIE = 1;
   689  000DEA  8EF2               	bsf	intcon,7,c	;volatile
   690                           
   691                           ;EEPROM.c: 30: EECON1bits.WREN = 0;
   692  000DEC  94A6               	bcf	4006,2,c	;volatile
   693  000DEE  0012               	return		;funcret
   694  000DF0                     __end_of_EEPROM_WriteByte:
   695                           	opt stack 0
   696                           tblptru	equ	0xFF8
   697                           tblptrh	equ	0xFF7
   698                           tblptrl	equ	0xFF6
   699                           tablat	equ	0xFF5
   700                           prodh	equ	0xFF4
   701                           prodl	equ	0xFF3
   702                           intcon	equ	0xFF2
   703                           postinc0	equ	0xFEE
   704                           wreg	equ	0xFE8
   705                           postdec1	equ	0xFE5
   706                           fsr1l	equ	0xFE1
   707                           indf2	equ	0xFDF
   708                           fsr2h	equ	0xFDA
   709                           fsr2l	equ	0xFD9
   710                           status	equ	0xFD8
   711                           
   712 ;; *************** function _EEPROM_ReadByte *****************
   713 ;; Defined at:
   714 ;;		line 10 in file "EEPROM.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;  MemoryAddres    1    wreg     unsigned char 
   717 ;; Auto vars:     Size  Location     Type
   718 ;;  MemoryAddres    1   14[COMRAM] unsigned char 
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      unsigned char 
   721 ;; Registers used:
   722 ;;		wreg, status,2
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   728 ;;      Params:         0       0       0       0       0       0       0       0       0
   729 ;;      Locals:         1       0       0       0       0       0       0       0       0
   730 ;;      Temps:          0       0       0       0       0       0       0       0       0
   731 ;;      Totals:         1       0       0       0       0       0       0       0       0
   732 ;;Total ram usage:        1 bytes
   733 ;; Hardware stack levels used:    1
   734 ;; Hardware stack levels required when called:    1
   735 ;; This function calls:
   736 ;;		Nothing
   737 ;; This function is called by:
   738 ;;		_odometroTotal
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text3
   743  000E48                     __ptext3:
   744                           	opt stack 0
   745  000E48                     _EEPROM_ReadByte:
   746                           	opt stack 28
   747                           
   748                           ;incstack = 0
   749                           ;EEPROM_ReadByte@MemoryAddress stored from wreg
   750  000E48  6E0F               	movwf	EEPROM_ReadByte@MemoryAddress,c
   751                           
   752                           ;EEPROM.c: 12: EEADR = MemoryAddress;
   753  000E4A  C00F  FFA9         	movff	EEPROM_ReadByte@MemoryAddress,4009	;volatile
   754                           
   755                           ;EEPROM.c: 13: EECON1 = 0x01;
   756  000E4E  0E01               	movlw	1
   757  000E50  6EA6               	movwf	4006,c	;volatile
   758                           
   759                           ;EEPROM.c: 14: return(EEDATA);
   760                           ;	Return value of _EEPROM_ReadByte is never used
   761  000E52  50A8               	movf	4008,w,c	;volatile
   762  000E54  0012               	return	
   763  000E56                     __end_of_EEPROM_ReadByte:
   764                           	opt stack 0
   765                           tblptru	equ	0xFF8
   766                           tblptrh	equ	0xFF7
   767                           tblptrl	equ	0xFF6
   768                           tablat	equ	0xFF5
   769                           prodh	equ	0xFF4
   770                           prodl	equ	0xFF3
   771                           intcon	equ	0xFF2
   772                           postinc0	equ	0xFEE
   773                           wreg	equ	0xFE8
   774                           postdec1	equ	0xFE5
   775                           fsr1l	equ	0xFE1
   776                           indf2	equ	0xFDF
   777                           fsr2h	equ	0xFDA
   778                           fsr2l	equ	0xFD9
   779                           status	equ	0xFD8
   780                           
   781 ;; *************** function _odometroParcial *****************
   782 ;; Defined at:
   783 ;;		line 64 in file "Odometro_Total_Parcial.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;		None
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   797 ;;      Params:         0       0       0       0       0       0       0       0       0
   798 ;;      Locals:         0       0       0       0       0       0       0       0       0
   799 ;;      Temps:          0       0       0       0       0       0       0       0       0
   800 ;;      Totals:         0       0       0       0       0       0       0       0       0
   801 ;;Total ram usage:        0 bytes
   802 ;; Hardware stack levels used:    1
   803 ;; Hardware stack levels required when called:    4
   804 ;; This function calls:
   805 ;;		_EscreveFraseRamLCD
   806 ;;		_PosicaoCursorLCD
   807 ;; This function is called by:
   808 ;;		_main
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text4
   813  000A9E                     __ptext4:
   814                           	opt stack 0
   815  000A9E                     _odometroParcial:
   816                           	opt stack 26
   817                           
   818                           ;Odometro_Total_Parcial.c: 65: static unsigned char i;
   819                           ;Odometro_Total_Parcial.c: 66: if (atualizaOdoParcial){
   820                           
   821                           ;incstack = 0
   822  000A9E  502D               	movf	_atualizaOdoParcial,w,c
   823  000AA0  102E               	iorwf	_atualizaOdoParcial+1,w,c
   824  000AA2  B4D8               	btfsc	status,2,c
   825  000AA4  0012               	return	
   826                           
   827                           ;Odometro_Total_Parcial.c: 67: odoParcial[5]++;
   828  000AA6  2A24               	incf	_odoParcial+5,f,c
   829                           
   830                           ;Odometro_Total_Parcial.c: 69: if (odoParcial[5] > 0x39){
   831  000AA8  0E39               	movlw	57
   832  000AAA  6424               	cpfsgt	_odoParcial+5,c
   833  000AAC  0012               	return	
   834                           
   835                           ;Odometro_Total_Parcial.c: 70: odoParcial[5] = 0x30;
   836  000AAE  0E30               	movlw	48
   837  000AB0  6E24               	movwf	_odoParcial+5,c
   838                           
   839                           ;Odometro_Total_Parcial.c: 71: odoParcial[3]++;
   840  000AB2  2A22               	incf	_odoParcial+3,f,c
   841                           
   842                           ;Odometro_Total_Parcial.c: 73: if (odoParcial[3] > 0x39){
   843  000AB4  0E39               	movlw	57
   844  000AB6  6422               	cpfsgt	_odoParcial+3,c
   845  000AB8  D026               	goto	l1638
   846                           
   847                           ;Odometro_Total_Parcial.c: 74: odoParcial[3] = 0x30;
   848  000ABA  0E30               	movlw	48
   849  000ABC  6E22               	movwf	_odoParcial+3,c
   850                           
   851                           ;Odometro_Total_Parcial.c: 75: odoParcial[2]++;
   852  000ABE  2A21               	incf	_odoParcial+2,f,c
   853                           
   854                           ;Odometro_Total_Parcial.c: 77: if (odoParcial[2] > 0x39){
   855  000AC0  0E39               	movlw	57
   856  000AC2  6421               	cpfsgt	_odoParcial+2,c
   857  000AC4  D020               	goto	l1638
   858                           
   859                           ;Odometro_Total_Parcial.c: 78: odoParcial[2] = 0x30;
   860  000AC6  0E30               	movlw	48
   861  000AC8  6E21               	movwf	_odoParcial+2,c
   862                           
   863                           ;Odometro_Total_Parcial.c: 79: odoParcial[1]++;
   864  000ACA  2A20               	incf	_odoParcial+1,f,c
   865                           
   866                           ;Odometro_Total_Parcial.c: 81: if (odoParcial[1] > 0x39){
   867  000ACC  0E39               	movlw	57
   868  000ACE  6420               	cpfsgt	_odoParcial+1,c
   869  000AD0  D01A               	goto	l1638
   870                           
   871                           ;Odometro_Total_Parcial.c: 82: odoParcial[1] = 0x30;
   872  000AD2  0E30               	movlw	48
   873  000AD4  6E20               	movwf	_odoParcial+1,c
   874                           
   875                           ;Odometro_Total_Parcial.c: 83: odoParcial[0]++;
   876  000AD6  2A1F               	incf	_odoParcial,f,c
   877                           
   878                           ;Odometro_Total_Parcial.c: 85: if (odoParcial[0] > 0x39){
   879  000AD8  0E39               	movlw	57
   880  000ADA  641F               	cpfsgt	_odoParcial,c
   881  000ADC  D014               	goto	l1638
   882                           
   883                           ;Odometro_Total_Parcial.c: 86: for (i = 0; i <= 3; i++){
   884  000ADE  0E00               	movlw	0
   885  000AE0  6E35               	movwf	odometroParcial@i,c
   886  000AE2                     l1626:
   887  000AE2  0E03               	movlw	3
   888  000AE4  6435               	cpfsgt	odometroParcial@i,c
   889  000AE6  D001               	goto	l1630
   890  000AE8  D00E               	goto	l1638
   891  000AEA                     l1630:
   892                           
   893                           ;Odometro_Total_Parcial.c: 87: odoParcial[i] = '0';
   894  000AEA  5035               	movf	odometroParcial@i,w,c
   895  000AEC  0D01               	mullw	1
   896  000AEE  0E1F               	movlw	low _odoParcial
   897  000AF0  24F3               	addwf	prodl,w,c
   898  000AF2  6ED9               	movwf	fsr2l,c
   899  000AF4  0E00               	movlw	high _odoParcial
   900  000AF6  20F4               	addwfc	prodh,w,c
   901  000AF8  6EDA               	movwf	fsr2h,c
   902  000AFA  0E30               	movlw	48
   903  000AFC  6EDF               	movwf	indf2,c
   904                           
   905                           ;Odometro_Total_Parcial.c: 88: odoParcial[5] = '0';
   906  000AFE  0E30               	movlw	48
   907  000B00  6E24               	movwf	_odoParcial+5,c
   908  000B02  2A35               	incf	odometroParcial@i,f,c
   909  000B04  D7EE               	goto	l1626
   910  000B06                     l1638:
   911                           
   912                           ;Odometro_Total_Parcial.c: 89: }
   913                           ;Odometro_Total_Parcial.c: 90: }
   914                           ;Odometro_Total_Parcial.c: 91: }
   915                           ;Odometro_Total_Parcial.c: 92: }
   916                           ;Odometro_Total_Parcial.c: 93: }
   917                           ;Odometro_Total_Parcial.c: 94: PosicaoCursorLCD(2, 7);
   918  000B06  0E07               	movlw	7
   919  000B08  6E12               	movwf	PosicaoCursorLCD@coluna,c
   920  000B0A  0E02               	movlw	2
   921  000B0C  ECCC  F005         	call	_PosicaoCursorLCD
   922                           
   923                           ;Odometro_Total_Parcial.c: 95: EscreveFraseRamLCD(odoParcial);
   924  000B10  0E1F               	movlw	low _odoParcial
   925  000B12  6E12               	movwf	EscreveFraseRamLCD@buffer,c
   926  000B14  0E00               	movlw	high _odoParcial
   927  000B16  6E13               	movwf	EscreveFraseRamLCD@buffer+1,c
   928  000B18  EC66  F006         	call	_EscreveFraseRamLCD	;wreg free
   929                           
   930                           ;Odometro_Total_Parcial.c: 96: atualizaOdoParcial = 0;
   931  000B1C  0E00               	movlw	0
   932  000B1E  6E2E               	movwf	_atualizaOdoParcial+1,c
   933  000B20  0E00               	movlw	0
   934  000B22  6E2D               	movwf	_atualizaOdoParcial,c
   935  000B24  0012               	return	
   936  000B26                     __end_of_odometroParcial:
   937                           	opt stack 0
   938                           tblptru	equ	0xFF8
   939                           tblptrh	equ	0xFF7
   940                           tblptrl	equ	0xFF6
   941                           tablat	equ	0xFF5
   942                           prodh	equ	0xFF4
   943                           prodl	equ	0xFF3
   944                           intcon	equ	0xFF2
   945                           postinc0	equ	0xFEE
   946                           wreg	equ	0xFE8
   947                           postdec1	equ	0xFE5
   948                           fsr1l	equ	0xFE1
   949                           indf2	equ	0xFDF
   950                           fsr2h	equ	0xFDA
   951                           fsr2l	equ	0xFD9
   952                           status	equ	0xFD8
   953                           
   954 ;; *************** function _initInterrupt *****************
   955 ;; Defined at:
   956 ;;		line 57 in file "main.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, status,2
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   970 ;;      Params:         0       0       0       0       0       0       0       0       0
   971 ;;      Locals:         0       0       0       0       0       0       0       0       0
   972 ;;      Temps:          0       0       0       0       0       0       0       0       0
   973 ;;      Totals:         0       0       0       0       0       0       0       0       0
   974 ;;Total ram usage:        0 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; Hardware stack levels required when called:    1
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_main
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text5
   985  000D9C                     __ptext5:
   986                           	opt stack 0
   987  000D9C                     _initInterrupt:
   988                           	opt stack 29
   989                           
   990                           ;main.c: 58: INTCON = 0b11100000;
   991                           
   992                           ;incstack = 0
   993  000D9C  0EE0               	movlw	224
   994  000D9E  6EF2               	movwf	intcon,c	;volatile
   995                           
   996                           ;main.c: 59: INTCON2 = 0b10000000;
   997  000DA0  0E80               	movlw	128
   998  000DA2  6EF1               	movwf	intcon2,c	;volatile
   999                           
  1000                           ;main.c: 60: INTCON3 = 0b00000000;
  1001  000DA4  0E00               	movlw	0
  1002  000DA6  6EF0               	movwf	intcon3,c	;volatile
  1003                           
  1004                           ;main.c: 61: CCP1CON = 0b00000101;
  1005  000DA8  0E05               	movlw	5
  1006  000DAA  6EBD               	movwf	4029,c	;volatile
  1007                           
  1008                           ;main.c: 62: PIR1 = 0b00000000;
  1009  000DAC  0E00               	movlw	0
  1010  000DAE  6E9E               	movwf	3998,c	;volatile
  1011                           
  1012                           ;main.c: 63: PIR2 = 0b00000000;
  1013  000DB0  0E00               	movlw	0
  1014  000DB2  6EA1               	movwf	4001,c	;volatile
  1015                           
  1016                           ;main.c: 64: PIE1 = 0b00000100;
  1017  000DB4  0E04               	movlw	4
  1018  000DB6  6E9D               	movwf	3997,c	;volatile
  1019                           
  1020                           ;main.c: 65: PIE2 = 0b00000000;
  1021  000DB8  0E00               	movlw	0
  1022  000DBA  6EA0               	movwf	4000,c	;volatile
  1023                           
  1024                           ;main.c: 66: IPR1 = 0b00000000;
  1025  000DBC  0E00               	movlw	0
  1026  000DBE  6E9F               	movwf	3999,c	;volatile
  1027                           
  1028                           ;main.c: 67: IPR2 = 0b00000000;
  1029  000DC0  0E00               	movlw	0
  1030  000DC2  6EA2               	movwf	4002,c	;volatile
  1031                           
  1032                           ;main.c: 68: RCON = 0b00000000;
  1033  000DC4  0E00               	movlw	0
  1034  000DC6  6ED0               	movwf	4048,c	;volatile
  1035  000DC8  0012               	return		;funcret
  1036  000DCA                     __end_of_initInterrupt:
  1037                           	opt stack 0
  1038                           tblptru	equ	0xFF8
  1039                           tblptrh	equ	0xFF7
  1040                           tblptrl	equ	0xFF6
  1041                           tablat	equ	0xFF5
  1042                           prodh	equ	0xFF4
  1043                           prodl	equ	0xFF3
  1044                           intcon	equ	0xFF2
  1045                           intcon2	equ	0xFF1
  1046                           intcon3	equ	0xFF0
  1047                           postinc0	equ	0xFEE
  1048                           wreg	equ	0xFE8
  1049                           postdec1	equ	0xFE5
  1050                           fsr1l	equ	0xFE1
  1051                           indf2	equ	0xFDF
  1052                           fsr2h	equ	0xFDA
  1053                           fsr2l	equ	0xFD9
  1054                           status	equ	0xFD8
  1055                           
  1056 ;; *************** function _initHw *****************
  1057 ;; Defined at:
  1058 ;;		line 70 in file "main.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;		None
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, status,2
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1072 ;;      Params:         0       0       0       0       0       0       0       0       0
  1073 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1074 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1075 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1076 ;;Total ram usage:        0 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; Hardware stack levels required when called:    1
  1079 ;; This function calls:
  1080 ;;		Nothing
  1081 ;; This function is called by:
  1082 ;;		_main
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           	psect	text6
  1087  000D1E                     __ptext6:
  1088                           	opt stack 0
  1089  000D1E                     _initHw:
  1090                           	opt stack 29
  1091                           
  1092                           ;main.c: 72: TRISA = 0x00;
  1093                           
  1094                           ;incstack = 0
  1095  000D1E  0E00               	movlw	0
  1096  000D20  6E92               	movwf	3986,c	;volatile
  1097                           
  1098                           ;main.c: 73: TRISB = 0x00;
  1099  000D22  0E00               	movlw	0
  1100  000D24  6E93               	movwf	3987,c	;volatile
  1101                           
  1102                           ;main.c: 74: TRISC = 0x00;
  1103  000D26  0E00               	movlw	0
  1104  000D28  6E94               	movwf	3988,c	;volatile
  1105                           
  1106                           ;main.c: 75: TRISCbits.RC2 = 1;
  1107  000D2A  8494               	bsf	3988,2,c	;volatile
  1108                           
  1109                           ;main.c: 76: TRISD = 0x00;
  1110  000D2C  0E00               	movlw	0
  1111  000D2E  6E95               	movwf	3989,c	;volatile
  1112                           
  1113                           ;main.c: 77: TRISE = 0x0F;
  1114  000D30  0E0F               	movlw	15
  1115  000D32  6E96               	movwf	3990,c	;volatile
  1116                           
  1117                           ;main.c: 79: ADCON0 = 0b00000001;
  1118  000D34  0E01               	movlw	1
  1119  000D36  6EC2               	movwf	4034,c	;volatile
  1120                           
  1121                           ;main.c: 80: ADCON1 = 0b00001101;
  1122  000D38  0E0D               	movlw	13
  1123  000D3A  6EC1               	movwf	4033,c	;volatile
  1124                           
  1125                           ;main.c: 81: ADCON2 = 0b10000100;
  1126  000D3C  0E84               	movlw	132
  1127  000D3E  6EC0               	movwf	4032,c	;volatile
  1128                           
  1129                           ;main.c: 83: PORTEbits.RE0 = 0;
  1130  000D40  9084               	bcf	3972,0,c	;volatile
  1131                           
  1132                           ;main.c: 86: LATA = 0x00;
  1133  000D42  0E00               	movlw	0
  1134  000D44  6E89               	movwf	3977,c	;volatile
  1135                           
  1136                           ;main.c: 87: LATB = 0x00;
  1137  000D46  0E00               	movlw	0
  1138  000D48  6E8A               	movwf	3978,c	;volatile
  1139                           
  1140                           ;main.c: 88: LATD = 0x00;
  1141  000D4A  0E00               	movlw	0
  1142  000D4C  6E8C               	movwf	3980,c	;volatile
  1143                           
  1144                           ;main.c: 90: T0CON = 0b01000101;
  1145  000D4E  0E45               	movlw	69
  1146  000D50  6ED5               	movwf	4053,c	;volatile
  1147                           
  1148                           ;main.c: 91: CCP1CON = 0b00000101;
  1149  000D52  0E05               	movlw	5
  1150  000D54  6EBD               	movwf	4029,c	;volatile
  1151                           
  1152                           ;main.c: 92: T1CON = 0b01000100;
  1153  000D56  0E44               	movlw	68
  1154  000D58  6ECD               	movwf	4045,c	;volatile
  1155                           
  1156                           ;main.c: 93: T3CONbits.T3CCP1 = 0;
  1157  000D5A  96B1               	bcf	4017,3,c	;volatile
  1158                           
  1159                           ;main.c: 94: INTCONbits.GIE = 1;
  1160  000D5C  8EF2               	bsf	intcon,7,c	;volatile
  1161                           
  1162                           ;main.c: 95: INTCONbits.PEIE = 1;
  1163  000D5E  8CF2               	bsf	intcon,6,c	;volatile
  1164  000D60  0012               	return		;funcret
  1165  000D62                     __end_of_initHw:
  1166                           	opt stack 0
  1167                           tblptru	equ	0xFF8
  1168                           tblptrh	equ	0xFF7
  1169                           tblptrl	equ	0xFF6
  1170                           tablat	equ	0xFF5
  1171                           prodh	equ	0xFF4
  1172                           prodl	equ	0xFF3
  1173                           intcon	equ	0xFF2
  1174                           intcon2	equ	0xFF1
  1175                           intcon3	equ	0xFF0
  1176                           postinc0	equ	0xFEE
  1177                           wreg	equ	0xFE8
  1178                           postdec1	equ	0xFE5
  1179                           fsr1l	equ	0xFE1
  1180                           indf2	equ	0xFDF
  1181                           fsr2h	equ	0xFDA
  1182                           fsr2l	equ	0xFD9
  1183                           status	equ	0xFD8
  1184                           
  1185 ;; *************** function _display *****************
  1186 ;; Defined at:
  1187 ;;		line 98 in file "main.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;		None
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;		None
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  1    wreg      void 
  1194 ;; Registers used:
  1195 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1201 ;;      Params:         0       0       0       0       0       0       0       0       0
  1202 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1203 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1204 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1205 ;;Total ram usage:        0 bytes
  1206 ;; Hardware stack levels used:    1
  1207 ;; Hardware stack levels required when called:    4
  1208 ;; This function calls:
  1209 ;;		_EscreveFraseRamLCD
  1210 ;;		_PosicaoCursorLCD
  1211 ;; This function is called by:
  1212 ;;		_main
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text7
  1217  000C72                     __ptext7:
  1218                           	opt stack 0
  1219  000C72                     _display:
  1220                           	opt stack 26
  1221                           
  1222                           ;main.c: 99: PosicaoCursorLCD(1, 7);
  1223                           
  1224                           ;incstack = 0
  1225  000C72  0E07               	movlw	7
  1226  000C74  6E12               	movwf	PosicaoCursorLCD@coluna,c
  1227  000C76  0E01               	movlw	1
  1228  000C78  ECCC  F005         	call	_PosicaoCursorLCD
  1229                           
  1230                           ;main.c: 100: EscreveFraseRamLCD(odoTotal);
  1231  000C7C  0E26               	movlw	low _odoTotal
  1232  000C7E  6E12               	movwf	EscreveFraseRamLCD@buffer,c
  1233  000C80  0E00               	movlw	high _odoTotal
  1234  000C82  6E13               	movwf	EscreveFraseRamLCD@buffer+1,c
  1235  000C84  EC66  F006         	call	_EscreveFraseRamLCD	;wreg free
  1236                           
  1237                           ;main.c: 101: PosicaoCursorLCD(2, 7);
  1238  000C88  0E07               	movlw	7
  1239  000C8A  6E12               	movwf	PosicaoCursorLCD@coluna,c
  1240  000C8C  0E02               	movlw	2
  1241  000C8E  ECCC  F005         	call	_PosicaoCursorLCD
  1242                           
  1243                           ;main.c: 102: EscreveFraseRamLCD(odoParcial);
  1244  000C92  0E1F               	movlw	low _odoParcial
  1245  000C94  6E12               	movwf	EscreveFraseRamLCD@buffer,c
  1246  000C96  0E00               	movlw	high _odoParcial
  1247  000C98  6E13               	movwf	EscreveFraseRamLCD@buffer+1,c
  1248  000C9A  EC66  F006         	call	_EscreveFraseRamLCD	;wreg free
  1249                           
  1250                           ;main.c: 103: PosicaoCursorLCD(1, 14);
  1251  000C9E  0E0E               	movlw	14
  1252  000CA0  6E12               	movwf	PosicaoCursorLCD@coluna,c
  1253  000CA2  0E01               	movlw	1
  1254  000CA4  ECCC  F005         	call	_PosicaoCursorLCD
  1255                           
  1256                           ;main.c: 104: EscreveFraseRamLCD("Km");
  1257  000CA8  0E01               	movlw	low STR_1
  1258  000CAA  6E12               	movwf	EscreveFraseRamLCD@buffer,c
  1259  000CAC  0E08               	movlw	high STR_1
  1260  000CAE  6E13               	movwf	EscreveFraseRamLCD@buffer+1,c
  1261  000CB0  EC66  F006         	call	_EscreveFraseRamLCD	;wreg free
  1262                           
  1263                           ;main.c: 105: PosicaoCursorLCD(2, 14);
  1264  000CB4  0E0E               	movlw	14
  1265  000CB6  6E12               	movwf	PosicaoCursorLCD@coluna,c
  1266  000CB8  0E02               	movlw	2
  1267  000CBA  ECCC  F005         	call	_PosicaoCursorLCD
  1268                           
  1269                           ;main.c: 106: EscreveFraseRamLCD("Km");
  1270  000CBE  0E01               	movlw	low STR_1
  1271  000CC0  6E12               	movwf	EscreveFraseRamLCD@buffer,c
  1272  000CC2  0E08               	movlw	high STR_1
  1273  000CC4  6E13               	movwf	EscreveFraseRamLCD@buffer+1,c
  1274  000CC6  EC66  F006         	call	_EscreveFraseRamLCD	;wreg free
  1275  000CCA  0012               	return		;funcret
  1276  000CCC                     __end_of_display:
  1277                           	opt stack 0
  1278                           tblptru	equ	0xFF8
  1279                           tblptrh	equ	0xFF7
  1280                           tblptrl	equ	0xFF6
  1281                           tablat	equ	0xFF5
  1282                           prodh	equ	0xFF4
  1283                           prodl	equ	0xFF3
  1284                           intcon	equ	0xFF2
  1285                           intcon2	equ	0xFF1
  1286                           intcon3	equ	0xFF0
  1287                           postinc0	equ	0xFEE
  1288                           wreg	equ	0xFE8
  1289                           postdec1	equ	0xFE5
  1290                           fsr1l	equ	0xFE1
  1291                           indf2	equ	0xFDF
  1292                           fsr2h	equ	0xFDA
  1293                           fsr2l	equ	0xFD9
  1294                           status	equ	0xFD8
  1295                           
  1296 ;; *************** function _PosicaoCursorLCD *****************
  1297 ;; Defined at:
  1298 ;;		line 287 in file "displayLCD.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;  linha           1    wreg     unsigned char 
  1301 ;;  coluna          1   17[COMRAM] unsigned char 
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;  linha           1   18[COMRAM] unsigned char 
  1304 ;;  EnderecoLCD     1   19[COMRAM] unsigned char 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      void 
  1307 ;; Registers used:
  1308 ;;		wreg, status,2, status,0, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1314 ;;      Params:         1       0       0       0       0       0       0       0       0
  1315 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1316 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1317 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1318 ;;Total ram usage:        3 bytes
  1319 ;; Hardware stack levels used:    1
  1320 ;; Hardware stack levels required when called:    3
  1321 ;; This function calls:
  1322 ;;		_EnderecoCursor
  1323 ;; This function is called by:
  1324 ;;		_odometroTotal
  1325 ;;		_odometroParcial
  1326 ;;		_display
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text8
  1331  000B98                     __ptext8:
  1332                           	opt stack 0
  1333  000B98                     _PosicaoCursorLCD:
  1334                           	opt stack 26
  1335                           
  1336                           ;incstack = 0
  1337                           ;PosicaoCursorLCD@linha stored from wreg
  1338  000B98  6E13               	movwf	PosicaoCursorLCD@linha,c
  1339                           
  1340                           ;displayLCD.c: 295: unsigned char EnderecoLCD = 0x00;
  1341  000B9A  0E00               	movlw	0
  1342  000B9C  6E14               	movwf	PosicaoCursorLCD@EnderecoLCD,c
  1343                           
  1344                           ;displayLCD.c: 299: if(coluna <= 16)
  1345  000B9E  0E11               	movlw	17
  1346  000BA0  6012               	cpfslt	PosicaoCursorLCD@coluna,c
  1347  000BA2  D02F               	goto	l1490
  1348  000BA4  D01E               	goto	l1486
  1349  000BA6                     l70:
  1350                           
  1351                           ;displayLCD.c: 306: EnderecoLCD = 0x00 + coluna;
  1352  000BA6  C012  F014         	movff	PosicaoCursorLCD@coluna,PosicaoCursorLCD@EnderecoLCD
  1353                           
  1354                           ;displayLCD.c: 307: EnderecoCursor(EnderecoLCD);
  1355  000BAA  5014               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
  1356  000BAC  EC04  F006         	call	_EnderecoCursor
  1357                           
  1358                           ;displayLCD.c: 308: break;
  1359  000BB0  D026               	goto	l1488
  1360  000BB2                     l1470:
  1361                           
  1362                           ;displayLCD.c: 311: EnderecoLCD = 0x40 + coluna;
  1363  000BB2  5012               	movf	PosicaoCursorLCD@coluna,w,c
  1364  000BB4  0F40               	addlw	64
  1365  000BB6  6E14               	movwf	PosicaoCursorLCD@EnderecoLCD,c
  1366                           
  1367                           ;displayLCD.c: 312: EnderecoCursor(EnderecoLCD);
  1368  000BB8  5014               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
  1369  000BBA  EC04  F006         	call	_EnderecoCursor
  1370                           
  1371                           ;displayLCD.c: 313: break;
  1372  000BBE  D01F               	goto	l1488
  1373  000BC0                     l1474:
  1374                           
  1375                           ;displayLCD.c: 316: EnderecoLCD = 0x14 + coluna;
  1376  000BC0  5012               	movf	PosicaoCursorLCD@coluna,w,c
  1377  000BC2  0F14               	addlw	20
  1378  000BC4  6E14               	movwf	PosicaoCursorLCD@EnderecoLCD,c
  1379                           
  1380                           ;displayLCD.c: 317: EnderecoCursor(EnderecoLCD);
  1381  000BC6  5014               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
  1382  000BC8  EC04  F006         	call	_EnderecoCursor
  1383                           
  1384                           ;displayLCD.c: 318: break;
  1385  000BCC  D018               	goto	l1488
  1386  000BCE                     l1478:
  1387                           
  1388                           ;displayLCD.c: 321: EnderecoLCD = 0x54 + coluna;
  1389  000BCE  5012               	movf	PosicaoCursorLCD@coluna,w,c
  1390  000BD0  0F54               	addlw	84
  1391  000BD2  6E14               	movwf	PosicaoCursorLCD@EnderecoLCD,c
  1392                           
  1393                           ;displayLCD.c: 322: EnderecoCursor(EnderecoLCD);
  1394  000BD4  5014               	movf	PosicaoCursorLCD@EnderecoLCD,w,c
  1395  000BD6  EC04  F006         	call	_EnderecoCursor
  1396                           
  1397                           ;displayLCD.c: 323: break;
  1398  000BDA  D011               	goto	l1488
  1399  000BDC                     l1482:
  1400                           
  1401                           ;displayLCD.c: 326: EnderecoLCD = 0x00;
  1402  000BDC  0E00               	movlw	0
  1403  000BDE  6E14               	movwf	PosicaoCursorLCD@EnderecoLCD,c
  1404                           
  1405                           ;displayLCD.c: 328: }
  1406                           
  1407                           ;displayLCD.c: 327: break;
  1408  000BE0  D00E               	goto	l1488
  1409  000BE2                     l1486:
  1410  000BE2  5013               	movf	PosicaoCursorLCD@linha,w,c
  1411                           
  1412                           ; Switch size 1, requested type "space"
  1413                           ; Number of cases is 4, Range of values is 1 to 4
  1414                           ; switch strategies available:
  1415                           ; Name         Instructions Cycles
  1416                           ; simple_byte           13     7 (average)
  1417                           ;	Chosen strategy is simple_byte
  1418  000BE4  0A01               	xorlw	1	; case 1
  1419  000BE6  B4D8               	btfsc	status,2,c
  1420  000BE8  D7DE               	goto	l70
  1421  000BEA  0A03               	xorlw	3	; case 2
  1422  000BEC  B4D8               	btfsc	status,2,c
  1423  000BEE  D7E1               	goto	l1470
  1424  000BF0  0A01               	xorlw	1	; case 3
  1425  000BF2  B4D8               	btfsc	status,2,c
  1426  000BF4  D7E5               	goto	l1474
  1427  000BF6  0A07               	xorlw	7	; case 4
  1428  000BF8  B4D8               	btfsc	status,2,c
  1429  000BFA  D7E9               	goto	l1478
  1430  000BFC  D7EF               	goto	l1482
  1431  000BFE                     l1488:
  1432                           
  1433                           ;displayLCD.c: 330: coluna++;
  1434  000BFE  2A12               	incf	PosicaoCursorLCD@coluna,f,c
  1435                           
  1436                           ;displayLCD.c: 331: }
  1437  000C00  0012               	return	
  1438  000C02                     l1490:
  1439                           
  1440                           ;displayLCD.c: 332: else
  1441                           ;displayLCD.c: 333: {
  1442                           ;displayLCD.c: 334: EnderecoLCD = 0x00;
  1443  000C02  0E00               	movlw	0
  1444  000C04  6E14               	movwf	PosicaoCursorLCD@EnderecoLCD,c
  1445  000C06  0012               	return	
  1446  000C08                     __end_of_PosicaoCursorLCD:
  1447                           	opt stack 0
  1448                           tblptru	equ	0xFF8
  1449                           tblptrh	equ	0xFF7
  1450                           tblptrl	equ	0xFF6
  1451                           tablat	equ	0xFF5
  1452                           prodh	equ	0xFF4
  1453                           prodl	equ	0xFF3
  1454                           intcon	equ	0xFF2
  1455                           intcon2	equ	0xFF1
  1456                           intcon3	equ	0xFF0
  1457                           postinc0	equ	0xFEE
  1458                           wreg	equ	0xFE8
  1459                           postdec1	equ	0xFE5
  1460                           fsr1l	equ	0xFE1
  1461                           indf2	equ	0xFDF
  1462                           fsr2h	equ	0xFDA
  1463                           fsr2l	equ	0xFD9
  1464                           status	equ	0xFD8
  1465                           
  1466 ;; *************** function _EnderecoCursor *****************
  1467 ;; Defined at:
  1468 ;;		line 236 in file "displayLCD.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;  endereco        1    wreg     unsigned char 
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;  endereco        1   16[COMRAM] unsigned char 
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  1    wreg      void 
  1475 ;; Registers used:
  1476 ;;		wreg, status,2, status,0, cstack
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1482 ;;      Params:         0       0       0       0       0       0       0       0       0
  1483 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1484 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1485 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1486 ;;Total ram usage:        1 bytes
  1487 ;; Hardware stack levels used:    1
  1488 ;; Hardware stack levels required when called:    2
  1489 ;; This function calls:
  1490 ;;		_Delay
  1491 ;; This function is called by:
  1492 ;;		_PosicaoCursorLCD
  1493 ;;		_CriaCaractereLCD
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           	psect	text9
  1498  000C08                     __ptext9:
  1499                           	opt stack 0
  1500  000C08                     _EnderecoCursor:
  1501                           	opt stack 26
  1502                           
  1503                           ;incstack = 0
  1504                           ;EnderecoCursor@endereco stored from wreg
  1505  000C08  6E11               	movwf	EnderecoCursor@endereco,c
  1506                           
  1507                           ;displayLCD.c: 239: PORTDbits.RD2 = 0;
  1508  000C0A  9483               	bcf	3971,2,c	;volatile
  1509                           
  1510                           ;displayLCD.c: 240: PORTDbits.RD1 = 0;
  1511  000C0C  9283               	bcf	3971,1,c	;volatile
  1512                           
  1513                           ;displayLCD.c: 241: PORTDbits.RD0 = 0;
  1514  000C0E  9083               	bcf	3971,0,c	;volatile
  1515                           
  1516                           ;displayLCD.c: 244: PORTDbits.RD7 = 1;
  1517  000C10  8E83               	bsf	3971,7,c	;volatile
  1518                           
  1519                           ;displayLCD.c: 245: if(endereco&0b00010000){PORTDbits.RD4=1;}
  1520  000C12  A811               	btfss	EnderecoCursor@endereco,4,c
  1521  000C14  D002               	goto	l51
  1522  000C16  8883               	bsf	3971,4,c	;volatile
  1523  000C18  D001               	goto	l978
  1524  000C1A                     l51:
  1525                           
  1526                           ;displayLCD.c: 246: else {PORTDbits.RD4=0;}
  1527  000C1A  9883               	bcf	3971,4,c	;volatile
  1528  000C1C                     l978:
  1529                           
  1530                           ;displayLCD.c: 247: if(endereco&0b00100000){PORTDbits.RD5=1;}
  1531  000C1C  AA11               	btfss	EnderecoCursor@endereco,5,c
  1532  000C1E  D002               	goto	l53
  1533  000C20  8A83               	bsf	3971,5,c	;volatile
  1534  000C22  D001               	goto	l982
  1535  000C24                     l53:
  1536                           
  1537                           ;displayLCD.c: 248: else {PORTDbits.RD5=0;}
  1538  000C24  9A83               	bcf	3971,5,c	;volatile
  1539  000C26                     l982:
  1540                           
  1541                           ;displayLCD.c: 249: if(endereco&0b01000000){PORTDbits.RD6=1;}
  1542  000C26  AC11               	btfss	EnderecoCursor@endereco,6,c
  1543  000C28  D002               	goto	l55
  1544  000C2A  8C83               	bsf	3971,6,c	;volatile
  1545  000C2C  D001               	goto	l56
  1546  000C2E                     l55:
  1547                           
  1548                           ;displayLCD.c: 250: else {PORTDbits.RD6=0;}
  1549  000C2E  9C83               	bcf	3971,6,c	;volatile
  1550  000C30                     l56:
  1551                           
  1552                           ;displayLCD.c: 253: PORTDbits.RD0 = 1;
  1553  000C30  8083               	bsf	3971,0,c	;volatile
  1554                           
  1555                           ;displayLCD.c: 254: Delay();
  1556  000C32  ECF8  F006         	call	_Delay	;wreg free
  1557                           
  1558                           ;displayLCD.c: 255: PORTDbits.RD0 = 0;
  1559  000C36  9083               	bcf	3971,0,c	;volatile
  1560                           
  1561                           ;displayLCD.c: 256: Delay();
  1562  000C38  ECF8  F006         	call	_Delay	;wreg free
  1563                           
  1564                           ;displayLCD.c: 259: if(endereco&0b00000001){PORTDbits.RD4=1;}
  1565  000C3C  A011               	btfss	EnderecoCursor@endereco,0,c
  1566  000C3E  D002               	goto	l57
  1567  000C40  8883               	bsf	3971,4,c	;volatile
  1568  000C42  D001               	goto	l58
  1569  000C44                     l57:
  1570                           
  1571                           ;displayLCD.c: 260: else {PORTDbits.RD4=0;}
  1572  000C44  9883               	bcf	3971,4,c	;volatile
  1573  000C46                     l58:
  1574                           
  1575                           ;displayLCD.c: 261: if(endereco&0b00000010){PORTDbits.RD5=1;}
  1576  000C46  A211               	btfss	EnderecoCursor@endereco,1,c
  1577  000C48  D002               	goto	l59
  1578  000C4A  8A83               	bsf	3971,5,c	;volatile
  1579  000C4C  D001               	goto	l60
  1580  000C4E                     l59:
  1581                           
  1582                           ;displayLCD.c: 262: else {PORTDbits.RD5=0;}
  1583  000C4E  9A83               	bcf	3971,5,c	;volatile
  1584  000C50                     l60:
  1585                           
  1586                           ;displayLCD.c: 263: if(endereco&0b00000100){PORTDbits.RD6=1;}
  1587  000C50  A411               	btfss	EnderecoCursor@endereco,2,c
  1588  000C52  D002               	goto	l61
  1589  000C54  8C83               	bsf	3971,6,c	;volatile
  1590  000C56  D001               	goto	l62
  1591  000C58                     l61:
  1592                           
  1593                           ;displayLCD.c: 264: else {PORTDbits.RD6=0;}
  1594  000C58  9C83               	bcf	3971,6,c	;volatile
  1595  000C5A                     l62:
  1596                           
  1597                           ;displayLCD.c: 265: if(endereco&0b00001000){PORTDbits.RD7=1;}
  1598  000C5A  A611               	btfss	EnderecoCursor@endereco,3,c
  1599  000C5C  D002               	goto	l63
  1600  000C5E  8E83               	bsf	3971,7,c	;volatile
  1601  000C60  D001               	goto	l64
  1602  000C62                     l63:
  1603                           
  1604                           ;displayLCD.c: 266: else {PORTDbits.RD7=0;}
  1605  000C62  9E83               	bcf	3971,7,c	;volatile
  1606  000C64                     l64:
  1607                           
  1608                           ;displayLCD.c: 269: PORTDbits.RD0 = 1;
  1609  000C64  8083               	bsf	3971,0,c	;volatile
  1610                           
  1611                           ;displayLCD.c: 270: Delay();
  1612  000C66  ECF8  F006         	call	_Delay	;wreg free
  1613                           
  1614                           ;displayLCD.c: 271: PORTDbits.RD0 = 0;
  1615  000C6A  9083               	bcf	3971,0,c	;volatile
  1616                           
  1617                           ;displayLCD.c: 272: Delay();
  1618  000C6C  ECF8  F006         	call	_Delay	;wreg free
  1619  000C70  0012               	return		;funcret
  1620  000C72                     __end_of_EnderecoCursor:
  1621                           	opt stack 0
  1622                           tblptru	equ	0xFF8
  1623                           tblptrh	equ	0xFF7
  1624                           tblptrl	equ	0xFF6
  1625                           tablat	equ	0xFF5
  1626                           prodh	equ	0xFF4
  1627                           prodl	equ	0xFF3
  1628                           intcon	equ	0xFF2
  1629                           intcon2	equ	0xFF1
  1630                           intcon3	equ	0xFF0
  1631                           postinc0	equ	0xFEE
  1632                           wreg	equ	0xFE8
  1633                           postdec1	equ	0xFE5
  1634                           fsr1l	equ	0xFE1
  1635                           indf2	equ	0xFDF
  1636                           fsr2h	equ	0xFDA
  1637                           fsr2l	equ	0xFD9
  1638                           status	equ	0xFD8
  1639                           
  1640 ;; *************** function _EscreveFraseRamLCD *****************
  1641 ;; Defined at:
  1642 ;;		line 470 in file "displayLCD.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;  buffer          2   17[COMRAM] PTR unsigned char 
  1645 ;;		 -> STR_2(3), STR_1(3), odoParcial(7), odoTotal(7), 
  1646 ;;		 -> EscreveInteiroLCD@texto(7), 
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;		None
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1658 ;;      Params:         2       0       0       0       0       0       0       0       0
  1659 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1660 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1661 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1662 ;;Total ram usage:        2 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; Hardware stack levels required when called:    3
  1665 ;; This function calls:
  1666 ;;		_EscreveCaractereLCD
  1667 ;; This function is called by:
  1668 ;;		_odometroTotal
  1669 ;;		_odometroParcial
  1670 ;;		_display
  1671 ;;		_EscreveInteiroLCD
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           	psect	text10
  1676  000CCC                     __ptext10:
  1677                           	opt stack 0
  1678  000CCC                     _EscreveFraseRamLCD:
  1679                           	opt stack 26
  1680                           
  1681                           ;displayLCD.c: 472: while(*buffer)
  1682                           
  1683                           ;incstack = 0
  1684  000CCC  D014               	goto	l1498
  1685  000CCE                     l1494:
  1686                           
  1687                           ;displayLCD.c: 473: {
  1688                           ;displayLCD.c: 474: EscreveCaractereLCD(*buffer);
  1689  000CCE  C012  FFF6         	movff	EscreveFraseRamLCD@buffer,tblptrl
  1690  000CD2  C013  FFF7         	movff	EscreveFraseRamLCD@buffer+1,tblptrh
  1691  000CD6  6AF8               	clrf	tblptru,c
  1692  000CD8  0E07               	movlw	(high __ramtop+-1)
  1693  000CDA  64F7               	cpfsgt	tblptrh,c
  1694  000CDC  D003               	bra	u677
  1695  000CDE  0008               	tblrd		*
  1696  000CE0  50F5               	movf	tablat,w,c
  1697  000CE2  D005               	bra	u670
  1698  000CE4                     u677:
  1699  000CE4  CFF6 FFE9          	movff	tblptrl,fsr0l
  1700  000CE8  CFF7 FFEA          	movff	tblptrh,fsr0h
  1701  000CEC  50EF               	movf	indf0,w,c
  1702  000CEE                     u670:
  1703  000CEE  EC93  F005         	call	_EscreveCaractereLCD
  1704                           
  1705                           ;displayLCD.c: 475: buffer++;
  1706  000CF2  4A12               	infsnz	EscreveFraseRamLCD@buffer,f,c
  1707  000CF4  2A13               	incf	EscreveFraseRamLCD@buffer+1,f,c
  1708  000CF6                     l1498:
  1709  000CF6  C012  FFF6         	movff	EscreveFraseRamLCD@buffer,tblptrl
  1710  000CFA  C013  FFF7         	movff	EscreveFraseRamLCD@buffer+1,tblptrh
  1711  000CFE  6AF8               	clrf	tblptru,c
  1712  000D00  0E07               	movlw	(high __ramtop+-1)
  1713  000D02  64F7               	cpfsgt	tblptrh,c
  1714  000D04  D003               	bra	u687
  1715  000D06  0008               	tblrd		*
  1716  000D08  50F5               	movf	tablat,w,c
  1717  000D0A  D005               	bra	u680
  1718  000D0C                     u687:
  1719  000D0C  CFF6 FFE9          	movff	tblptrl,fsr0l
  1720  000D10  CFF7 FFEA          	movff	tblptrh,fsr0h
  1721  000D14  50EF               	movf	indf0,w,c
  1722  000D16                     u680:
  1723  000D16  0900               	iorlw	0
  1724  000D18  B4D8               	btfsc	status,2,c
  1725  000D1A  0012               	return	
  1726  000D1C  D7D8               	goto	l1494
  1727  000D1E                     __end_of_EscreveFraseRamLCD:
  1728                           	opt stack 0
  1729                           tblptru	equ	0xFF8
  1730                           tblptrh	equ	0xFF7
  1731                           tblptrl	equ	0xFF6
  1732                           tablat	equ	0xFF5
  1733                           prodh	equ	0xFF4
  1734                           prodl	equ	0xFF3
  1735                           intcon	equ	0xFF2
  1736                           intcon2	equ	0xFF1
  1737                           intcon3	equ	0xFF0
  1738                           indf0	equ	0xFEF
  1739                           postinc0	equ	0xFEE
  1740                           fsr0h	equ	0xFEA
  1741                           fsr0l	equ	0xFE9
  1742                           wreg	equ	0xFE8
  1743                           postdec1	equ	0xFE5
  1744                           fsr1l	equ	0xFE1
  1745                           indf2	equ	0xFDF
  1746                           fsr2h	equ	0xFDA
  1747                           fsr2l	equ	0xFD9
  1748                           status	equ	0xFD8
  1749                           
  1750 ;; *************** function _EscreveCaractereLCD *****************
  1751 ;; Defined at:
  1752 ;;		line 348 in file "displayLCD.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;  data            1    wreg     unsigned char 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;  data            1   16[COMRAM] unsigned char 
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      void 
  1759 ;; Registers used:
  1760 ;;		wreg, status,2, status,0, cstack
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1766 ;;      Params:         0       0       0       0       0       0       0       0       0
  1767 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1768 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1769 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1770 ;;Total ram usage:        1 bytes
  1771 ;; Hardware stack levels used:    1
  1772 ;; Hardware stack levels required when called:    2
  1773 ;; This function calls:
  1774 ;;		_Delay
  1775 ;; This function is called by:
  1776 ;;		_EscreveFraseRamLCD
  1777 ;;		_EscreveFloatLCD
  1778 ;;		_EscreveFraseLCD
  1779 ;;		_CriaCaractereLCD
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text11
  1784  000B26                     __ptext11:
  1785                           	opt stack 0
  1786  000B26                     _EscreveCaractereLCD:
  1787                           	opt stack 26
  1788                           
  1789                           ;incstack = 0
  1790                           ;EscreveCaractereLCD@data stored from wreg
  1791  000B26  6E11               	movwf	EscreveCaractereLCD@data,c
  1792                           
  1793                           ;displayLCD.c: 351: PORTDbits.RD2 = 0;
  1794  000B28  9483               	bcf	3971,2,c	;volatile
  1795                           
  1796                           ;displayLCD.c: 352: PORTDbits.RD1 = 1;
  1797  000B2A  8283               	bsf	3971,1,c	;volatile
  1798                           
  1799                           ;displayLCD.c: 353: PORTDbits.RD0 = 0;
  1800  000B2C  9083               	bcf	3971,0,c	;volatile
  1801                           
  1802                           ;displayLCD.c: 356: if(data&0b00010000){PORTDbits.RD4=1;}
  1803  000B2E  A811               	btfss	EscreveCaractereLCD@data,4,c
  1804  000B30  D002               	goto	l80
  1805  000B32  8883               	bsf	3971,4,c	;volatile
  1806  000B34  D001               	goto	l1010
  1807  000B36                     l80:
  1808                           
  1809                           ;displayLCD.c: 357: else {PORTDbits.RD4=0;}
  1810  000B36  9883               	bcf	3971,4,c	;volatile
  1811  000B38                     l1010:
  1812                           
  1813                           ;displayLCD.c: 358: if(data&0b00100000){PORTDbits.RD5=1;}
  1814  000B38  AA11               	btfss	EscreveCaractereLCD@data,5,c
  1815  000B3A  D002               	goto	l82
  1816  000B3C  8A83               	bsf	3971,5,c	;volatile
  1817  000B3E  D001               	goto	l1014
  1818  000B40                     l82:
  1819                           
  1820                           ;displayLCD.c: 359: else {PORTDbits.RD5=0;}
  1821  000B40  9A83               	bcf	3971,5,c	;volatile
  1822  000B42                     l1014:
  1823                           
  1824                           ;displayLCD.c: 360: if(data&0b01000000){PORTDbits.RD6=1;}
  1825  000B42  AC11               	btfss	EscreveCaractereLCD@data,6,c
  1826  000B44  D002               	goto	l84
  1827  000B46  8C83               	bsf	3971,6,c	;volatile
  1828  000B48  D001               	goto	l1018
  1829  000B4A                     l84:
  1830                           
  1831                           ;displayLCD.c: 361: else {PORTDbits.RD6=0;}
  1832  000B4A  9C83               	bcf	3971,6,c	;volatile
  1833  000B4C                     l1018:
  1834                           
  1835                           ;displayLCD.c: 362: if(data&0b10000000){PORTDbits.RD7=1;}
  1836  000B4C  AE11               	btfss	EscreveCaractereLCD@data,7,c
  1837  000B4E  D002               	goto	l86
  1838  000B50  8E83               	bsf	3971,7,c	;volatile
  1839  000B52  D001               	goto	l87
  1840  000B54                     l86:
  1841                           
  1842                           ;displayLCD.c: 363: else {PORTDbits.RD7=0;}
  1843  000B54  9E83               	bcf	3971,7,c	;volatile
  1844  000B56                     l87:
  1845                           
  1846                           ;displayLCD.c: 366: PORTDbits.RD0 = 1;
  1847  000B56  8083               	bsf	3971,0,c	;volatile
  1848                           
  1849                           ;displayLCD.c: 367: Delay();
  1850  000B58  ECF8  F006         	call	_Delay	;wreg free
  1851                           
  1852                           ;displayLCD.c: 368: PORTDbits.RD0 = 0;
  1853  000B5C  9083               	bcf	3971,0,c	;volatile
  1854                           
  1855                           ;displayLCD.c: 369: Delay();
  1856  000B5E  ECF8  F006         	call	_Delay	;wreg free
  1857                           
  1858                           ;displayLCD.c: 373: if(data&0b00000001){PORTDbits.RD4=1;}
  1859  000B62  A011               	btfss	EscreveCaractereLCD@data,0,c
  1860  000B64  D002               	goto	l88
  1861  000B66  8883               	bsf	3971,4,c	;volatile
  1862  000B68  D001               	goto	l89
  1863  000B6A                     l88:
  1864                           
  1865                           ;displayLCD.c: 374: else {PORTDbits.RD4=0;}
  1866  000B6A  9883               	bcf	3971,4,c	;volatile
  1867  000B6C                     l89:
  1868                           
  1869                           ;displayLCD.c: 375: if(data&0b00000010){PORTDbits.RD5=1;}
  1870  000B6C  A211               	btfss	EscreveCaractereLCD@data,1,c
  1871  000B6E  D002               	goto	l90
  1872  000B70  8A83               	bsf	3971,5,c	;volatile
  1873  000B72  D001               	goto	l91
  1874  000B74                     l90:
  1875                           
  1876                           ;displayLCD.c: 376: else {PORTDbits.RD5=0;}
  1877  000B74  9A83               	bcf	3971,5,c	;volatile
  1878  000B76                     l91:
  1879                           
  1880                           ;displayLCD.c: 377: if(data&0b00000100){PORTDbits.RD6=1;}
  1881  000B76  A411               	btfss	EscreveCaractereLCD@data,2,c
  1882  000B78  D002               	goto	l92
  1883  000B7A  8C83               	bsf	3971,6,c	;volatile
  1884  000B7C  D001               	goto	l93
  1885  000B7E                     l92:
  1886                           
  1887                           ;displayLCD.c: 378: else {PORTDbits.RD6=0;}
  1888  000B7E  9C83               	bcf	3971,6,c	;volatile
  1889  000B80                     l93:
  1890                           
  1891                           ;displayLCD.c: 379: if(data&0b00001000){PORTDbits.RD7=1;}
  1892  000B80  A611               	btfss	EscreveCaractereLCD@data,3,c
  1893  000B82  D002               	goto	l94
  1894  000B84  8E83               	bsf	3971,7,c	;volatile
  1895  000B86  D001               	goto	l95
  1896  000B88                     l94:
  1897                           
  1898                           ;displayLCD.c: 380: else {PORTDbits.RD7=0;}
  1899  000B88  9E83               	bcf	3971,7,c	;volatile
  1900  000B8A                     l95:
  1901                           
  1902                           ;displayLCD.c: 383: PORTDbits.RD0 = 1;
  1903  000B8A  8083               	bsf	3971,0,c	;volatile
  1904                           
  1905                           ;displayLCD.c: 384: Delay();
  1906  000B8C  ECF8  F006         	call	_Delay	;wreg free
  1907                           
  1908                           ;displayLCD.c: 385: PORTDbits.RD0 = 0;
  1909  000B90  9083               	bcf	3971,0,c	;volatile
  1910                           
  1911                           ;displayLCD.c: 386: Delay();
  1912  000B92  ECF8  F006         	call	_Delay	;wreg free
  1913  000B96  0012               	return		;funcret
  1914  000B98                     __end_of_EscreveCaractereLCD:
  1915                           	opt stack 0
  1916                           tblptru	equ	0xFF8
  1917                           tblptrh	equ	0xFF7
  1918                           tblptrl	equ	0xFF6
  1919                           tablat	equ	0xFF5
  1920                           prodh	equ	0xFF4
  1921                           prodl	equ	0xFF3
  1922                           intcon	equ	0xFF2
  1923                           intcon2	equ	0xFF1
  1924                           intcon3	equ	0xFF0
  1925                           indf0	equ	0xFEF
  1926                           postinc0	equ	0xFEE
  1927                           fsr0h	equ	0xFEA
  1928                           fsr0l	equ	0xFE9
  1929                           wreg	equ	0xFE8
  1930                           postdec1	equ	0xFE5
  1931                           fsr1l	equ	0xFE1
  1932                           indf2	equ	0xFDF
  1933                           fsr2h	equ	0xFDA
  1934                           fsr2l	equ	0xFD9
  1935                           status	equ	0xFD8
  1936                           
  1937 ;; *************** function _Init_EEPROM *****************
  1938 ;; Defined at:
  1939 ;;		line 5 in file "EEPROM.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;		None
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;		None
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      void 
  1946 ;; Registers used:
  1947 ;;		wreg, status,2
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1953 ;;      Params:         0       0       0       0       0       0       0       0       0
  1954 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1955 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1956 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1957 ;;Total ram usage:        0 bytes
  1958 ;; Hardware stack levels used:    1
  1959 ;; Hardware stack levels required when called:    1
  1960 ;; This function calls:
  1961 ;;		Nothing
  1962 ;; This function is called by:
  1963 ;;		_main
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text12
  1968  000E56                     __ptext12:
  1969                           	opt stack 0
  1970  000E56                     _Init_EEPROM:
  1971                           	opt stack 29
  1972                           
  1973                           ;EEPROM.c: 7: EECON1 = 0b00000100;
  1974                           
  1975                           ;incstack = 0
  1976  000E56  0E04               	movlw	4
  1977  000E58  6EA6               	movwf	4006,c	;volatile
  1978  000E5A  0012               	return		;funcret
  1979  000E5C                     __end_of_Init_EEPROM:
  1980                           	opt stack 0
  1981                           tblptru	equ	0xFF8
  1982                           tblptrh	equ	0xFF7
  1983                           tblptrl	equ	0xFF6
  1984                           tablat	equ	0xFF5
  1985                           prodh	equ	0xFF4
  1986                           prodl	equ	0xFF3
  1987                           intcon	equ	0xFF2
  1988                           intcon2	equ	0xFF1
  1989                           intcon3	equ	0xFF0
  1990                           indf0	equ	0xFEF
  1991                           postinc0	equ	0xFEE
  1992                           fsr0h	equ	0xFEA
  1993                           fsr0l	equ	0xFE9
  1994                           wreg	equ	0xFE8
  1995                           postdec1	equ	0xFE5
  1996                           fsr1l	equ	0xFE1
  1997                           indf2	equ	0xFDF
  1998                           fsr2h	equ	0xFDA
  1999                           fsr2l	equ	0xFD9
  2000                           status	equ	0xFD8
  2001                           
  2002 ;; *************** function _ConfiguraLCD *****************
  2003 ;; Defined at:
  2004 ;;		line 87 in file "displayLCD.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;		None
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;		None
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      void 
  2011 ;; Registers used:
  2012 ;;		wreg, status,2, status,0, cstack
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2018 ;;      Params:         0       0       0       0       0       0       0       0       0
  2019 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2020 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2021 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2022 ;;Total ram usage:        1 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; Hardware stack levels required when called:    3
  2025 ;; This function calls:
  2026 ;;		_Delay
  2027 ;;		_EscreveComandoLCD
  2028 ;; This function is called by:
  2029 ;;		_main
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           	psect	text13
  2034  000974                     __ptext13:
  2035                           	opt stack 0
  2036  000974                     _ConfiguraLCD:
  2037                           	opt stack 27
  2038                           
  2039                           ;displayLCD.c: 90: TRISDbits.RD2 = 0;
  2040                           
  2041                           ;incstack = 0
  2042  000974  9495               	bcf	3989,2,c	;volatile
  2043                           
  2044                           ;displayLCD.c: 91: TRISDbits.RD1 = 0;
  2045  000976  9295               	bcf	3989,1,c	;volatile
  2046                           
  2047                           ;displayLCD.c: 92: TRISDbits.RD0 = 0;
  2048  000978  9095               	bcf	3989,0,c	;volatile
  2049                           
  2050                           ;displayLCD.c: 95: TRISDbits.RD4=0;
  2051  00097A  9895               	bcf	3989,4,c	;volatile
  2052                           
  2053                           ;displayLCD.c: 96: TRISDbits.RD5=0;
  2054  00097C  9A95               	bcf	3989,5,c	;volatile
  2055                           
  2056                           ;displayLCD.c: 97: TRISDbits.RD6=0;
  2057  00097E  9C95               	bcf	3989,6,c	;volatile
  2058                           
  2059                           ;displayLCD.c: 98: TRISDbits.RD7=0;
  2060  000980  9E95               	bcf	3989,7,c	;volatile
  2061                           
  2062                           ;displayLCD.c: 105: PORTDbits.RD2 = 0;
  2063  000982  9483               	bcf	3971,2,c	;volatile
  2064                           
  2065                           ;displayLCD.c: 106: PORTDbits.RD1 = 0;
  2066  000984  9283               	bcf	3971,1,c	;volatile
  2067                           
  2068                           ;displayLCD.c: 107: PORTDbits.RD0 = 0;
  2069  000986  9083               	bcf	3971,0,c	;volatile
  2070                           
  2071                           ;displayLCD.c: 111: PORTDbits.RD7=0;
  2072  000988  9E83               	bcf	3971,7,c	;volatile
  2073                           
  2074                           ;displayLCD.c: 112: PORTDbits.RD6=0;
  2075  00098A  9C83               	bcf	3971,6,c	;volatile
  2076                           
  2077                           ;displayLCD.c: 113: PORTDbits.RD5=1;
  2078  00098C  8A83               	bsf	3971,5,c	;volatile
  2079                           
  2080                           ;displayLCD.c: 114: PORTDbits.RD4=1;
  2081  00098E  8883               	bsf	3971,4,c	;volatile
  2082                           
  2083                           ;displayLCD.c: 119: _delay((unsigned long)((15)*(48000000/4000.0)));
  2084  000990  0EEA               	movlw	234
  2085  000992  6E12               	movwf	??_ConfiguraLCD& (0+255),c
  2086  000994  0EC3               	movlw	195
  2087  000996                     u947:
  2088  000996  2EE8               	decfsz	wreg,f,c
  2089  000998  D7FE               	bra	u947
  2090  00099A  2E12               	decfsz	??_ConfiguraLCD& (0+255),f,c
  2091  00099C  D7FC               	bra	u947
  2092  00099E  F000               	nop	
  2093                           
  2094                           ;displayLCD.c: 123: PORTDbits.RD0 = 1;
  2095  0009A0  8083               	bsf	3971,0,c	;volatile
  2096                           
  2097                           ;displayLCD.c: 124: Delay();
  2098  0009A2  ECF8  F006         	call	_Delay	;wreg free
  2099                           
  2100                           ;displayLCD.c: 125: PORTDbits.RD0 = 0;
  2101  0009A6  9083               	bcf	3971,0,c	;volatile
  2102                           
  2103                           ;displayLCD.c: 126: Delay();
  2104  0009A8  ECF8  F006         	call	_Delay	;wreg free
  2105                           
  2106                           ;displayLCD.c: 131: _delay((unsigned long)((5)*(48000000/4000.0)));
  2107  0009AC  0E4E               	movlw	78
  2108  0009AE  6E12               	movwf	??_ConfiguraLCD& (0+255),c
  2109  0009B0  0EEB               	movlw	235
  2110  0009B2                     u957:
  2111  0009B2  2EE8               	decfsz	wreg,f,c
  2112  0009B4  D7FE               	bra	u957
  2113  0009B6  2E12               	decfsz	??_ConfiguraLCD& (0+255),f,c
  2114  0009B8  D7FC               	bra	u957
  2115  0009BA  F000               	nop	
  2116                           
  2117                           ;displayLCD.c: 134: PORTDbits.RD0 = 1;
  2118  0009BC  8083               	bsf	3971,0,c	;volatile
  2119                           
  2120                           ;displayLCD.c: 135: Delay();
  2121  0009BE  ECF8  F006         	call	_Delay	;wreg free
  2122                           
  2123                           ;displayLCD.c: 136: PORTDbits.RD0 = 0;
  2124  0009C2  9083               	bcf	3971,0,c	;volatile
  2125                           
  2126                           ;displayLCD.c: 137: Delay();
  2127  0009C4  ECF8  F006         	call	_Delay	;wreg free
  2128                           
  2129                           ;displayLCD.c: 142: _delay((unsigned long)((5)*(48000000/4000.0)));
  2130  0009C8  0E4E               	movlw	78
  2131  0009CA  6E12               	movwf	??_ConfiguraLCD& (0+255),c
  2132  0009CC  0EEB               	movlw	235
  2133  0009CE                     u967:
  2134  0009CE  2EE8               	decfsz	wreg,f,c
  2135  0009D0  D7FE               	bra	u967
  2136  0009D2  2E12               	decfsz	??_ConfiguraLCD& (0+255),f,c
  2137  0009D4  D7FC               	bra	u967
  2138  0009D6  F000               	nop	
  2139                           
  2140                           ;displayLCD.c: 145: PORTDbits.RD0 = 1;
  2141  0009D8  8083               	bsf	3971,0,c	;volatile
  2142                           
  2143                           ;displayLCD.c: 146: Delay();
  2144  0009DA  ECF8  F006         	call	_Delay	;wreg free
  2145                           
  2146                           ;displayLCD.c: 147: PORTDbits.RD0 = 0;
  2147  0009DE  9083               	bcf	3971,0,c	;volatile
  2148                           
  2149                           ;displayLCD.c: 148: Delay();
  2150  0009E0  ECF8  F006         	call	_Delay	;wreg free
  2151                           
  2152                           ;displayLCD.c: 151: PORTDbits.RD7=0;
  2153  0009E4  9E83               	bcf	3971,7,c	;volatile
  2154                           
  2155                           ;displayLCD.c: 152: PORTDbits.RD6=0;
  2156  0009E6  9C83               	bcf	3971,6,c	;volatile
  2157                           
  2158                           ;displayLCD.c: 153: PORTDbits.RD5=1;
  2159  0009E8  8A83               	bsf	3971,5,c	;volatile
  2160                           
  2161                           ;displayLCD.c: 154: PORTDbits.RD4=0;
  2162  0009EA  9883               	bcf	3971,4,c	;volatile
  2163                           
  2164                           ;displayLCD.c: 158: PORTDbits.RD0 = 1;
  2165  0009EC  8083               	bsf	3971,0,c	;volatile
  2166                           
  2167                           ;displayLCD.c: 159: Delay();
  2168  0009EE  ECF8  F006         	call	_Delay	;wreg free
  2169                           
  2170                           ;displayLCD.c: 160: PORTDbits.RD0 = 0;
  2171  0009F2  9083               	bcf	3971,0,c	;volatile
  2172                           
  2173                           ;displayLCD.c: 161: Delay();
  2174  0009F4  ECF8  F006         	call	_Delay	;wreg free
  2175                           
  2176                           ;displayLCD.c: 165: EscreveComandoLCD(0b00101000);
  2177  0009F8  0E28               	movlw	40
  2178  0009FA  EC09  F005         	call	_EscreveComandoLCD
  2179                           
  2180                           ;displayLCD.c: 166: EscreveComandoLCD(0b00000110);
  2181  0009FE  0E06               	movlw	6
  2182  000A00  EC09  F005         	call	_EscreveComandoLCD
  2183                           
  2184                           ;displayLCD.c: 167: EscreveComandoLCD(0b00001110);
  2185  000A04  0E0E               	movlw	14
  2186  000A06  EC09  F005         	call	_EscreveComandoLCD
  2187                           
  2188                           ;displayLCD.c: 168: EscreveComandoLCD(0b00000001);
  2189  000A0A  0E01               	movlw	1
  2190  000A0C  EC09  F005         	call	_EscreveComandoLCD
  2191  000A10  0012               	return		;funcret
  2192  000A12                     __end_of_ConfiguraLCD:
  2193                           	opt stack 0
  2194                           tblptru	equ	0xFF8
  2195                           tblptrh	equ	0xFF7
  2196                           tblptrl	equ	0xFF6
  2197                           tablat	equ	0xFF5
  2198                           prodh	equ	0xFF4
  2199                           prodl	equ	0xFF3
  2200                           intcon	equ	0xFF2
  2201                           intcon2	equ	0xFF1
  2202                           intcon3	equ	0xFF0
  2203                           indf0	equ	0xFEF
  2204                           postinc0	equ	0xFEE
  2205                           fsr0h	equ	0xFEA
  2206                           fsr0l	equ	0xFE9
  2207                           wreg	equ	0xFE8
  2208                           postdec1	equ	0xFE5
  2209                           fsr1l	equ	0xFE1
  2210                           indf2	equ	0xFDF
  2211                           fsr2h	equ	0xFDA
  2212                           fsr2l	equ	0xFD9
  2213                           status	equ	0xFD8
  2214                           
  2215 ;; *************** function _EscreveComandoLCD *****************
  2216 ;; Defined at:
  2217 ;;		line 179 in file "displayLCD.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;  cmd             1    wreg     unsigned char 
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;  cmd             1   16[COMRAM] unsigned char 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg, status,2, status,0, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2231 ;;      Params:         0       0       0       0       0       0       0       0       0
  2232 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2233 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2234 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2235 ;;Total ram usage:        1 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:    2
  2238 ;; This function calls:
  2239 ;;		_Delay
  2240 ;; This function is called by:
  2241 ;;		_ConfiguraLCD
  2242 ;;		_CriaCaractereLCD
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text14
  2247  000A12                     __ptext14:
  2248                           	opt stack 0
  2249  000A12                     _EscreveComandoLCD:
  2250                           	opt stack 27
  2251                           
  2252                           ;incstack = 0
  2253                           ;EscreveComandoLCD@cmd stored from wreg
  2254  000A12  6E11               	movwf	EscreveComandoLCD@cmd,c
  2255                           
  2256                           ;displayLCD.c: 182: PORTDbits.RD2 = 0;
  2257  000A14  9483               	bcf	3971,2,c	;volatile
  2258                           
  2259                           ;displayLCD.c: 183: PORTDbits.RD1 = 0;
  2260  000A16  9283               	bcf	3971,1,c	;volatile
  2261                           
  2262                           ;displayLCD.c: 184: PORTDbits.RD0 = 0;
  2263  000A18  9083               	bcf	3971,0,c	;volatile
  2264                           
  2265                           ;displayLCD.c: 187: if(cmd&0b00010000){PORTDbits.RD4=1;}
  2266  000A1A  A811               	btfss	EscreveComandoLCD@cmd,4,c
  2267  000A1C  D002               	goto	l29
  2268  000A1E  8883               	bsf	3971,4,c	;volatile
  2269  000A20  D001               	goto	l1046
  2270  000A22                     l29:
  2271                           
  2272                           ;displayLCD.c: 188: else {PORTDbits.RD4=0;}
  2273  000A22  9883               	bcf	3971,4,c	;volatile
  2274  000A24                     l1046:
  2275                           
  2276                           ;displayLCD.c: 189: if(cmd&0b00100000){PORTDbits.RD5=1;}
  2277  000A24  AA11               	btfss	EscreveComandoLCD@cmd,5,c
  2278  000A26  D002               	goto	l31
  2279  000A28  8A83               	bsf	3971,5,c	;volatile
  2280  000A2A  D001               	goto	l1050
  2281  000A2C                     l31:
  2282                           
  2283                           ;displayLCD.c: 190: else {PORTDbits.RD5=0;}
  2284  000A2C  9A83               	bcf	3971,5,c	;volatile
  2285  000A2E                     l1050:
  2286                           
  2287                           ;displayLCD.c: 191: if(cmd&0b01000000){PORTDbits.RD6=1;}
  2288  000A2E  AC11               	btfss	EscreveComandoLCD@cmd,6,c
  2289  000A30  D002               	goto	l33
  2290  000A32  8C83               	bsf	3971,6,c	;volatile
  2291  000A34  D001               	goto	l1054
  2292  000A36                     l33:
  2293                           
  2294                           ;displayLCD.c: 192: else {PORTDbits.RD6=0;}
  2295  000A36  9C83               	bcf	3971,6,c	;volatile
  2296  000A38                     l1054:
  2297                           
  2298                           ;displayLCD.c: 193: if(cmd&0b10000000){PORTDbits.RD7=1;}
  2299  000A38  AE11               	btfss	EscreveComandoLCD@cmd,7,c
  2300  000A3A  D002               	goto	l35
  2301  000A3C  8E83               	bsf	3971,7,c	;volatile
  2302  000A3E  D001               	goto	l36
  2303  000A40                     l35:
  2304                           
  2305                           ;displayLCD.c: 194: else {PORTDbits.RD7=0;}
  2306  000A40  9E83               	bcf	3971,7,c	;volatile
  2307  000A42                     l36:
  2308                           
  2309                           ;displayLCD.c: 197: PORTDbits.RD0 = 1;
  2310  000A42  8083               	bsf	3971,0,c	;volatile
  2311                           
  2312                           ;displayLCD.c: 198: Delay();
  2313  000A44  ECF8  F006         	call	_Delay	;wreg free
  2314                           
  2315                           ;displayLCD.c: 199: PORTDbits.RD0 = 0;
  2316  000A48  9083               	bcf	3971,0,c	;volatile
  2317                           
  2318                           ;displayLCD.c: 200: Delay();
  2319  000A4A  ECF8  F006         	call	_Delay	;wreg free
  2320                           
  2321                           ;displayLCD.c: 203: if(cmd&0b00000001){PORTDbits.RD4=1;}
  2322  000A4E  A011               	btfss	EscreveComandoLCD@cmd,0,c
  2323  000A50  D002               	goto	l37
  2324  000A52  8883               	bsf	3971,4,c	;volatile
  2325  000A54  D001               	goto	l38
  2326  000A56                     l37:
  2327                           
  2328                           ;displayLCD.c: 204: else {PORTDbits.RD4=0;}
  2329  000A56  9883               	bcf	3971,4,c	;volatile
  2330  000A58                     l38:
  2331                           
  2332                           ;displayLCD.c: 205: if(cmd&0b00000010){PORTDbits.RD5=1;}
  2333  000A58  A211               	btfss	EscreveComandoLCD@cmd,1,c
  2334  000A5A  D002               	goto	l39
  2335  000A5C  8A83               	bsf	3971,5,c	;volatile
  2336  000A5E  D001               	goto	l40
  2337  000A60                     l39:
  2338                           
  2339                           ;displayLCD.c: 206: else {PORTDbits.RD5=0;}
  2340  000A60  9A83               	bcf	3971,5,c	;volatile
  2341  000A62                     l40:
  2342                           
  2343                           ;displayLCD.c: 207: if(cmd&0b00000100){PORTDbits.RD6=1;}
  2344  000A62  A411               	btfss	EscreveComandoLCD@cmd,2,c
  2345  000A64  D002               	goto	l41
  2346  000A66  8C83               	bsf	3971,6,c	;volatile
  2347  000A68  D001               	goto	l42
  2348  000A6A                     l41:
  2349                           
  2350                           ;displayLCD.c: 208: else {PORTDbits.RD6=0;}
  2351  000A6A  9C83               	bcf	3971,6,c	;volatile
  2352  000A6C                     l42:
  2353                           
  2354                           ;displayLCD.c: 209: if(cmd&0b00001000){PORTDbits.RD7=1;}
  2355  000A6C  A611               	btfss	EscreveComandoLCD@cmd,3,c
  2356  000A6E  D002               	goto	l43
  2357  000A70  8E83               	bsf	3971,7,c	;volatile
  2358  000A72  D001               	goto	l44
  2359  000A74                     l43:
  2360                           
  2361                           ;displayLCD.c: 210: else {PORTDbits.RD7=0;}
  2362  000A74  9E83               	bcf	3971,7,c	;volatile
  2363  000A76                     l44:
  2364                           
  2365                           ;displayLCD.c: 213: PORTDbits.RD0 = 1;
  2366  000A76  8083               	bsf	3971,0,c	;volatile
  2367                           
  2368                           ;displayLCD.c: 214: Delay();
  2369  000A78  ECF8  F006         	call	_Delay	;wreg free
  2370                           
  2371                           ;displayLCD.c: 215: PORTDbits.RD0 = 0;
  2372  000A7C  9083               	bcf	3971,0,c	;volatile
  2373                           
  2374                           ;displayLCD.c: 216: Delay();
  2375  000A7E  ECF8  F006         	call	_Delay	;wreg free
  2376                           
  2377                           ;displayLCD.c: 221: if (cmd==0x01 || cmd==0x02 || cmd==0x03)
  2378  000A82  0411               	decf	EscreveComandoLCD@cmd,w,c
  2379  000A84  B4D8               	btfsc	status,2,c
  2380  000A86  D008               	goto	l1082
  2381  000A88  0E02               	movlw	2
  2382  000A8A  1811               	xorwf	EscreveComandoLCD@cmd,w,c
  2383  000A8C  B4D8               	btfsc	status,2,c
  2384  000A8E  D004               	goto	l1082
  2385  000A90  0E03               	movlw	3
  2386  000A92  1811               	xorwf	EscreveComandoLCD@cmd,w,c
  2387  000A94  A4D8               	btfss	status,2,c
  2388  000A96  0012               	return	
  2389  000A98                     l1082:
  2390                           
  2391                           ;displayLCD.c: 222: { Delay(); }
  2392  000A98  ECF8  F006         	call	_Delay	;wreg free
  2393  000A9C  0012               	return	
  2394  000A9E                     __end_of_EscreveComandoLCD:
  2395                           	opt stack 0
  2396                           tblptru	equ	0xFF8
  2397                           tblptrh	equ	0xFF7
  2398                           tblptrl	equ	0xFF6
  2399                           tablat	equ	0xFF5
  2400                           prodh	equ	0xFF4
  2401                           prodl	equ	0xFF3
  2402                           intcon	equ	0xFF2
  2403                           intcon2	equ	0xFF1
  2404                           intcon3	equ	0xFF0
  2405                           indf0	equ	0xFEF
  2406                           postinc0	equ	0xFEE
  2407                           fsr0h	equ	0xFEA
  2408                           fsr0l	equ	0xFE9
  2409                           wreg	equ	0xFE8
  2410                           postdec1	equ	0xFE5
  2411                           fsr1l	equ	0xFE1
  2412                           indf2	equ	0xFDF
  2413                           fsr2h	equ	0xFDA
  2414                           fsr2l	equ	0xFD9
  2415                           status	equ	0xFD8
  2416                           
  2417 ;; *************** function _Delay *****************
  2418 ;; Defined at:
  2419 ;;		line 61 in file "displayLCD.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;		None
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;  Cnt2            1   15[COMRAM] unsigned char 
  2424 ;;  Cnt1            1   14[COMRAM] unsigned char 
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg, status,2, status,0
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2434 ;;      Params:         0       0       0       0       0       0       0       0       0
  2435 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2436 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2437 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2438 ;;Total ram usage:        2 bytes
  2439 ;; Hardware stack levels used:    1
  2440 ;; Hardware stack levels required when called:    1
  2441 ;; This function calls:
  2442 ;;		Nothing
  2443 ;; This function is called by:
  2444 ;;		_ConfiguraLCD
  2445 ;;		_EscreveComandoLCD
  2446 ;;		_EnderecoCursor
  2447 ;;		_EscreveCaractereLCD
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text15
  2452  000DF0                     __ptext15:
  2453                           	opt stack 0
  2454  000DF0                     _Delay:
  2455                           	opt stack 26
  2456                           
  2457                           ;displayLCD.c: 63: unsigned char Cnt1, Cnt2;
  2458                           ;displayLCD.c: 65: for(Cnt1 = 0; Cnt1<100; Cnt1++)
  2459                           
  2460                           ;incstack = 0
  2461  000DF0  0E00               	movlw	0
  2462  000DF2  6E0F               	movwf	Delay@Cnt1,c
  2463  000DF4                     l954:
  2464  000DF4  0E63               	movlw	99
  2465  000DF6  640F               	cpfsgt	Delay@Cnt1,c
  2466  000DF8  D001               	goto	l19
  2467  000DFA  0012               	return	
  2468  000DFC                     l19:
  2469                           
  2470                           ;displayLCD.c: 66: {
  2471                           ;displayLCD.c: 67: __nop();
  2472  000DFC  F000               	nop	
  2473                           
  2474                           ;displayLCD.c: 68: for(Cnt2 = 0; Cnt2<50; Cnt2++)
  2475  000DFE  0E00               	movlw	0
  2476  000E00  6E10               	movwf	Delay@Cnt2,c
  2477  000E02                     l960:
  2478  000E02  0E31               	movlw	49
  2479  000E04  6410               	cpfsgt	Delay@Cnt2,c
  2480  000E06  D001               	goto	l21
  2481  000E08  D003               	goto	l968
  2482  000E0A                     l21:
  2483                           
  2484                           ;displayLCD.c: 69: {
  2485                           ;displayLCD.c: 70: __nop();
  2486  000E0A  F000               	nop	
  2487  000E0C  2A10               	incf	Delay@Cnt2,f,c
  2488  000E0E  D7F9               	goto	l960
  2489  000E10                     l968:
  2490  000E10  2A0F               	incf	Delay@Cnt1,f,c
  2491  000E12  D7F0               	goto	l954
  2492  000E14                     __end_of_Delay:
  2493                           	opt stack 0
  2494                           tblptru	equ	0xFF8
  2495                           tblptrh	equ	0xFF7
  2496                           tblptrl	equ	0xFF6
  2497                           tablat	equ	0xFF5
  2498                           prodh	equ	0xFF4
  2499                           prodl	equ	0xFF3
  2500                           intcon	equ	0xFF2
  2501                           intcon2	equ	0xFF1
  2502                           intcon3	equ	0xFF0
  2503                           indf0	equ	0xFEF
  2504                           postinc0	equ	0xFEE
  2505                           fsr0h	equ	0xFEA
  2506                           fsr0l	equ	0xFE9
  2507                           wreg	equ	0xFE8
  2508                           postdec1	equ	0xFE5
  2509                           fsr1l	equ	0xFE1
  2510                           indf2	equ	0xFDF
  2511                           fsr2h	equ	0xFDA
  2512                           fsr2l	equ	0xFD9
  2513                           status	equ	0xFD8
  2514                           
  2515 ;; *************** function _isr *****************
  2516 ;; Defined at:
  2517 ;;		line 19 in file "main.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;		None
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;		None
  2522 ;; Return value:  Size  Location     Type
  2523 ;;                  1    wreg      void 
  2524 ;; Registers used:
  2525 ;;		wreg, status,2, status,0
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2531 ;;      Params:         0       0       0       0       0       0       0       0       0
  2532 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2533 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2534 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2535 ;;Total ram usage:       14 bytes
  2536 ;; Hardware stack levels used:    1
  2537 ;; This function calls:
  2538 ;;		Nothing
  2539 ;; This function is called by:
  2540 ;;		Interrupt level 2
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	intcode
  2545  000008                     __pintcode:
  2546                           	opt stack 0
  2547  000008                     _isr:
  2548                           	opt stack 26
  2549                           
  2550                           ;incstack = 0
  2551  000008  8236               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2552  00000A  ED03  F004         	call	int_func,f	;refresh shadow registers
  2553                           tblptru	equ	0xFF8
  2554                           tblptrh	equ	0xFF7
  2555                           tblptrl	equ	0xFF6
  2556                           tablat	equ	0xFF5
  2557                           prodh	equ	0xFF4
  2558                           prodl	equ	0xFF3
  2559                           intcon	equ	0xFF2
  2560                           intcon2	equ	0xFF1
  2561                           intcon3	equ	0xFF0
  2562                           indf0	equ	0xFEF
  2563                           postinc0	equ	0xFEE
  2564                           fsr0h	equ	0xFEA
  2565                           fsr0l	equ	0xFE9
  2566                           wreg	equ	0xFE8
  2567                           postdec1	equ	0xFE5
  2568                           fsr1l	equ	0xFE1
  2569                           indf2	equ	0xFDF
  2570                           fsr2h	equ	0xFDA
  2571                           fsr2l	equ	0xFD9
  2572                           status	equ	0xFD8
  2573                           
  2574                           	psect	intcode_body
  2575  000806                     __pintcode_body:
  2576                           	opt stack 26
  2577  000806                     int_func:
  2578                           	opt stack 26
  2579  000806  0006               	pop		; remove dummy address from shadow register refresh
  2580  000808  CFFA F001          	movff	pclath,??_isr
  2581  00080C  CFFB F002          	movff	pclatu,??_isr+1
  2582  000810  CFE9 F003          	movff	fsr0l,??_isr+2
  2583  000814  CFEA F004          	movff	fsr0h,??_isr+3
  2584  000818  CFE1 F005          	movff	fsr1l,??_isr+4
  2585  00081C  CFE2 F006          	movff	fsr1h,??_isr+5
  2586  000820  CFD9 F007          	movff	fsr2l,??_isr+6
  2587  000824  CFDA F008          	movff	fsr2h,??_isr+7
  2588  000828  CFF3 F009          	movff	prodl,??_isr+8
  2589  00082C  CFF4 F00A          	movff	prodh,??_isr+9
  2590  000830  CFF6 F00B          	movff	tblptrl,??_isr+10
  2591  000834  CFF7 F00C          	movff	tblptrh,??_isr+11
  2592  000838  CFF8 F00D          	movff	tblptru,??_isr+12
  2593  00083C  CFF5 F00E          	movff	tablat,??_isr+13
  2594                           
  2595                           ;main.c: 20: if ((PIR1bits.CCP1IF) && (PIE1bits.CCP1IE)){
  2596  000840  B49E               	btfsc	3998,2,c	;volatile
  2597  000842  A49D               	btfss	3997,2,c	;volatile
  2598  000844  D022               	goto	i2l305
  2599                           
  2600                           ;main.c: 21: bordaParcial++;
  2601  000846  4A31               	infsnz	_bordaParcial,f,c
  2602  000848  2A32               	incf	_bordaParcial+1,f,c
  2603                           
  2604                           ;main.c: 22: bordaTotal++;
  2605  00084A  4A33               	infsnz	_bordaTotal,f,c
  2606  00084C  2A34               	incf	_bordaTotal+1,f,c
  2607                           
  2608                           ;main.c: 23: if (bordaParcial == 500){
  2609  00084E  0EF4               	movlw	244
  2610  000850  1831               	xorwf	_bordaParcial,w,c
  2611  000852  E10B               	bnz	i2l1442
  2612  000854  0432               	decf	_bordaParcial+1,w,c
  2613  000856  A4D8               	btfss	status,2,c
  2614  000858  D008               	goto	i2l1442
  2615                           
  2616                           ;main.c: 24: atualizaOdoParcial = 1;
  2617  00085A  0E00               	movlw	0
  2618  00085C  6E2E               	movwf	_atualizaOdoParcial+1,c
  2619  00085E  0E01               	movlw	1
  2620  000860  6E2D               	movwf	_atualizaOdoParcial,c
  2621                           
  2622                           ;main.c: 25: bordaParcial = 0;
  2623  000862  0E00               	movlw	0
  2624  000864  6E32               	movwf	_bordaParcial+1,c
  2625  000866  0E00               	movlw	0
  2626  000868  6E31               	movwf	_bordaParcial,c
  2627  00086A                     i2l1442:
  2628                           
  2629                           ;main.c: 26: }
  2630                           ;main.c: 27: if (bordaTotal == 5000){
  2631  00086A  0E88               	movlw	136
  2632  00086C  1833               	xorwf	_bordaTotal,w,c
  2633  00086E  E10C               	bnz	i2l1446
  2634  000870  0E13               	movlw	19
  2635  000872  1834               	xorwf	_bordaTotal+1,w,c
  2636  000874  A4D8               	btfss	status,2,c
  2637  000876  D008               	goto	i2l1446
  2638                           
  2639                           ;main.c: 28: atualizaOdoTotal = 1;
  2640  000878  0E00               	movlw	0
  2641  00087A  6E30               	movwf	_atualizaOdoTotal+1,c
  2642  00087C  0E01               	movlw	1
  2643  00087E  6E2F               	movwf	_atualizaOdoTotal,c
  2644                           
  2645                           ;main.c: 29: bordaTotal = 0;
  2646  000880  0E00               	movlw	0
  2647  000882  6E34               	movwf	_bordaTotal+1,c
  2648  000884  0E00               	movlw	0
  2649  000886  6E33               	movwf	_bordaTotal,c
  2650  000888                     i2l1446:
  2651                           
  2652                           ;main.c: 30: }
  2653                           ;main.c: 31: PIR1bits.CCP1IF = 0;
  2654  000888  949E               	bcf	3998,2,c	;volatile
  2655  00088A                     i2l305:
  2656  00088A  C00E  FFF5         	movff	??_isr+13,tablat
  2657  00088E  C00D  FFF8         	movff	??_isr+12,tblptru
  2658  000892  C00C  FFF7         	movff	??_isr+11,tblptrh
  2659  000896  C00B  FFF6         	movff	??_isr+10,tblptrl
  2660  00089A  C00A  FFF4         	movff	??_isr+9,prodh
  2661  00089E  C009  FFF3         	movff	??_isr+8,prodl
  2662  0008A2  C008  FFDA         	movff	??_isr+7,fsr2h
  2663  0008A6  C007  FFD9         	movff	??_isr+6,fsr2l
  2664  0008AA  C006  FFE2         	movff	??_isr+5,fsr1h
  2665  0008AE  C005  FFE1         	movff	??_isr+4,fsr1l
  2666  0008B2  C004  FFEA         	movff	??_isr+3,fsr0h
  2667  0008B6  C003  FFE9         	movff	??_isr+2,fsr0l
  2668  0008BA  C002  FFFB         	movff	??_isr+1,pclatu
  2669  0008BE  C001  FFFA         	movff	??_isr,pclath
  2670  0008C2  9236               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2671  0008C4  0011               	retfie		f
  2672  0008C6                     __end_of_isr:
  2673                           	opt stack 0
  2674                           pclatu	equ	0xFFB
  2675                           pclath	equ	0xFFA
  2676                           tblptru	equ	0xFF8
  2677                           tblptrh	equ	0xFF7
  2678                           tblptrl	equ	0xFF6
  2679                           tablat	equ	0xFF5
  2680                           prodh	equ	0xFF4
  2681                           prodl	equ	0xFF3
  2682                           intcon	equ	0xFF2
  2683                           intcon2	equ	0xFF1
  2684                           intcon3	equ	0xFF0
  2685                           indf0	equ	0xFEF
  2686                           postinc0	equ	0xFEE
  2687                           fsr0h	equ	0xFEA
  2688                           fsr0l	equ	0xFE9
  2689                           wreg	equ	0xFE8
  2690                           postdec1	equ	0xFE5
  2691                           fsr1h	equ	0xFE2
  2692                           fsr1l	equ	0xFE1
  2693                           indf2	equ	0xFDF
  2694                           fsr2h	equ	0xFDA
  2695                           fsr2l	equ	0xFD9
  2696                           status	equ	0xFD8
  2697                           pclatu	equ	0xFFB
  2698                           pclath	equ	0xFFA
  2699                           tblptru	equ	0xFF8
  2700                           tblptrh	equ	0xFF7
  2701                           tblptrl	equ	0xFF6
  2702                           tablat	equ	0xFF5
  2703                           prodh	equ	0xFF4
  2704                           prodl	equ	0xFF3
  2705                           intcon	equ	0xFF2
  2706                           intcon2	equ	0xFF1
  2707                           intcon3	equ	0xFF0
  2708                           indf0	equ	0xFEF
  2709                           postinc0	equ	0xFEE
  2710                           fsr0h	equ	0xFEA
  2711                           fsr0l	equ	0xFE9
  2712                           wreg	equ	0xFE8
  2713                           postdec1	equ	0xFE5
  2714                           fsr1h	equ	0xFE2
  2715                           fsr1l	equ	0xFE1
  2716                           indf2	equ	0xFDF
  2717                           fsr2h	equ	0xFDA
  2718                           fsr2l	equ	0xFD9
  2719                           status	equ	0xFD8
  2720                           
  2721                           	psect	rparam
  2722  0000                     pclatu	equ	0xFFB
  2723                           pclath	equ	0xFFA
  2724                           tblptru	equ	0xFF8
  2725                           tblptrh	equ	0xFF7
  2726                           tblptrl	equ	0xFF6
  2727                           tablat	equ	0xFF5
  2728                           prodh	equ	0xFF4
  2729                           prodl	equ	0xFF3
  2730                           intcon	equ	0xFF2
  2731                           intcon2	equ	0xFF1
  2732                           intcon3	equ	0xFF0
  2733                           indf0	equ	0xFEF
  2734                           postinc0	equ	0xFEE
  2735                           fsr0h	equ	0xFEA
  2736                           fsr0l	equ	0xFE9
  2737                           wreg	equ	0xFE8
  2738                           postdec1	equ	0xFE5
  2739                           fsr1h	equ	0xFE2
  2740                           fsr1l	equ	0xFE1
  2741                           indf2	equ	0xFDF
  2742                           fsr2h	equ	0xFDA
  2743                           fsr2l	equ	0xFD9
  2744                           status	equ	0xFD8
  2745                           
  2746                           	psect	temp
  2747  000036                     btemp:
  2748                           	opt stack 0
  2749  000036                     	ds	1
  2750  0000                     int$flags	set	btemp
  2751                           pclatu	equ	0xFFB
  2752                           pclath	equ	0xFFA
  2753                           tblptru	equ	0xFF8
  2754                           tblptrh	equ	0xFF7
  2755                           tblptrl	equ	0xFF6
  2756                           tablat	equ	0xFF5
  2757                           prodh	equ	0xFF4
  2758                           prodl	equ	0xFF3
  2759                           intcon	equ	0xFF2
  2760                           intcon2	equ	0xFF1
  2761                           intcon3	equ	0xFF0
  2762                           indf0	equ	0xFEF
  2763                           postinc0	equ	0xFEE
  2764                           fsr0h	equ	0xFEA
  2765                           fsr0l	equ	0xFE9
  2766                           wreg	equ	0xFE8
  2767                           postdec1	equ	0xFE5
  2768                           fsr1h	equ	0xFE2
  2769                           fsr1l	equ	0xFE1
  2770                           indf2	equ	0xFDF
  2771                           fsr2h	equ	0xFDA
  2772                           fsr2l	equ	0xFD9
  2773                           status	equ	0xFD8


Data Sizes:
    Strings     3
    Constant    0
    Data        21
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     23      53
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    EscreveFraseRamLCD@buffer	PTR unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[3]), STR_1(CODE[3]), odoParcial(COMRAM[7]), odoTotal(COMRAM[7]), 
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->_odometroTotal
    _odometroTotal->_PosicaoCursorLCD
    _odometroParcial->_PosicaoCursorLCD
    _display->_PosicaoCursorLCD
    _PosicaoCursorLCD->_EnderecoCursor
    _EnderecoCursor->_Delay
    _EscreveFraseRamLCD->_EscreveCaractereLCD
    _EscreveCaractereLCD->_Delay
    _ConfiguraLCD->_EscreveComandoLCD
    _EscreveComandoLCD->_Delay

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4918
                       _ConfiguraLCD
                        _Init_EEPROM
                            _display
                             _initHw
                      _initInterrupt
                    _odometroParcial
                      _odometroTotal
 ---------------------------------------------------------------------------------
 (1) _odometroTotal                                        3     3      0    1733
                                             20 COMRAM     3     3      0
                    _EEPROM_ReadByte
                   _EEPROM_WriteByte
                 _EscreveFraseRamLCD
                   _PosicaoCursorLCD
 ---------------------------------------------------------------------------------
 (2) _EEPROM_WriteByte                                     2     1      1     108
                                             14 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_ReadByte                                      1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _odometroParcial                                      0     0      0    1450
                 _EscreveFraseRamLCD
                   _PosicaoCursorLCD
 ---------------------------------------------------------------------------------
 (1) _initInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initHw                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              0     0      0    1450
                 _EscreveFraseRamLCD
                   _PosicaoCursorLCD
 ---------------------------------------------------------------------------------
 (2) _PosicaoCursorLCD                                     3     2      1     777
                                             17 COMRAM     3     2      1
                     _EnderecoCursor
 ---------------------------------------------------------------------------------
 (3) _EnderecoCursor                                       1     1      0     165
                                             16 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (2) _EscreveFraseRamLCD                                   2     0      2     673
                                             17 COMRAM     2     0      2
                _EscreveCaractereLCD
 ---------------------------------------------------------------------------------
 (3) _EscreveCaractereLCD                                  1     1      0     180
                                             16 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _Init_EEPROM                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0     285
                                             17 COMRAM     1     1      0
                              _Delay
                  _EscreveComandoLCD
 ---------------------------------------------------------------------------------
 (2) _EscreveComandoLCD                                    1     1      0     225
                                             16 COMRAM     1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (4) _Delay                                                2     2      0      60
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiguraLCD
     _Delay
     _EscreveComandoLCD
       _Delay
   _Init_EEPROM
   _display
     _EscreveFraseRamLCD
       _EscreveCaractereLCD
         _Delay
     _PosicaoCursorLCD
       _EnderecoCursor
         _Delay
   _initHw
   _initInterrupt
   _odometroParcial
     _EscreveFraseRamLCD
       _EscreveCaractereLCD
         _Delay
     _PosicaoCursorLCD
       _EnderecoCursor
         _Delay
   _odometroTotal
     _EEPROM_ReadByte
     _EEPROM_WriteByte
     _EscreveFraseRamLCD
       _EscreveCaractereLCD
         _Delay
     _PosicaoCursorLCD
       _EnderecoCursor
         _Delay

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     17      35       1       56.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      35      20        0.0%
DATA                 0      0      35       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Tue Nov 12 18:55:36 2019

                                l21 0E0A                                  l31 0A2C  
                                l40 0A62                                  l41 0A6A  
                                l33 0A36                                  l42 0A6C  
                                l19 0DFC                                  l43 0A74  
                                l35 0A40                                  l51 0C1A  
                                l44 0A76                                  l36 0A42  
                                l60 0C50                                  l37 0A56  
                                l29 0A22                                  l61 0C58  
                                l53 0C24                                  l38 0A58  
                                l62 0C5A                                  l70 0BA6  
                                l39 0A60                                  l63 0C62  
                                l55 0C2E                                  l80 0B36  
                                l64 0C64                                  l56 0C30  
                                l57 0C44                                  l90 0B74  
                                l82 0B40                                  l58 0C46  
                                l91 0B76                                  l59 0C4E  
                                l92 0B7E                                  l84 0B4A  
                                l93 0B80                                  l94 0B88  
                                l86 0B54                                  l95 0B8A  
                                l87 0B56                                  l88 0B6A  
                                l89 0B6C                                 l159 0DE6  
                               l960 0E02                                 l954 0DF4  
                               l982 0C26                                 l968 0E10  
                               l978 0C1C                                 u670 0CEE  
                               u680 0D16                                 u677 0CE4  
                               u687 0D0C                                 u947 0996  
                               u957 09B2                                 u967 09CE  
                               _isr 0008                                 prod 000FF3  
                               wreg 000FE8                                l1010 0B38  
                              l1014 0B42                                l1050 0A2E  
                              l1018 0B4C                                l1054 0A38  
                              l1046 0A24                                l1082 0A98  
                              l1532 08DA                                l1470 0BB2  
                              l1630 0AEA                                l1528 08D2  
                              l1482 0BDC                                l1474 0BC0  
                              l1490 0C02                                l1626 0AE2  
                              l1538 08E6                                l1572 0924  
                              l1494 0CCE                                l1478 0BCE  
                              l1486 0BE2                                l1638 0B06  
                              l1582 094A                                l1488 0BFE  
                              l1498 0CF6                                l1586 0952  
                              l1578 0942                                l1692 0E28  
                              ?_isr 0001                                STR_1 0801  
                              STR_2 0801                                _LATA 000F89  
                              _LATB 000F8A                                _LATD 000F8C  
                              _IPR1 000F9F                                _IPR2 000FA2  
                              _PIE1 000F9D                                _PIE2 000FA0  
                              _PIR1 000F9E                                _PIR2 000FA1  
                              _RCON 000FD0                       ??_Init_EEPROM 000F  
                              _main 0E14                                fsr0h 000FEA  
                              fsr1h 000FE2                                indf0 000FEF  
                              fsr2h 000FDA                                fsr0l 000FE9  
                              indf2 000FDF                                fsr1l 000FE1  
                              fsr2l 000FD9                                btemp 0036  
                              prodh 000FF4                                prodl 000FF3  
                              start 000E            __size_of_EEPROM_ReadByte 000E  
                      ___param_bank 000000          __end_of_EscreveFraseRamLCD 0D1E  
                             ??_isr 0001                               ?_main 0001  
                             _EEADR 000FA9                               _T0CON 000FD5  
                             _T1CON 000FCD                               i2l305 088A  
                             _TRISA 000F92                               _TRISB 000F93  
                             _TRISC 000F94                               _TRISD 000F95  
                             _TRISE 000F96                               _Delay 0DF0  
                   __end_of_display 0CCC                EscreveComandoLCD@cmd 0011  
                             pclath 000FFA                               tablat 000FF5  
                             status 000FD8                    ?_odometroParcial 0001  
               __end_of_Init_EEPROM 0E5C                     __initialization 0D62  
            __size_of_initInterrupt 002E                        __end_of_main 0E32  
                            ??_main 0018                __end_of_ConfiguraLCD 0A12  
                     __activetblptr 000002                   _EscreveComandoLCD 0A12  
                            ?_Delay 0001                  ?_EscreveComandoLCD 0001  
                            _ADCON0 000FC2                              _ADCON1 000FC1  
                            _ADCON2 000FC0                              _EEDATA 000FA8  
                            _EECON1 000FA6                              _EECON2 000FA7  
                            i2l1442 086A                              i2l1446 0888  
                            _INTCON 000FF2                 ??_EscreveComandoLCD 0011  
                _atualizaOdoParcial 002D                   ?_PosicaoCursorLCD 0012  
      __size_of_EscreveCaractereLCD 0072                  ??_PosicaoCursorLCD 0013  
                            _initHw 0D1E                   ??_EEPROM_ReadByte 000F  
                            clear_0 0D88           __end_of_EscreveComandoLCD 0A9E  
          __end_of_EEPROM_WriteByte 0DF0                           ??_display 0015  
                      __pdataCOMRAM 0018                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8             __size_of_EnderecoCursor 006A  
                     _initInterrupt 0D9C                         _Init_EEPROM 0E56  
                        __accesstop 0060             __end_of__initialization 0D8E  
                     ___rparam_used 000001                       __end_of_Delay 0E14  
                    __pcstackCOMRAM 0001                             ??_Delay 000F  
                    ?_initInterrupt 0001           EEPROM_WriteByte@WriteData 000F  
             __size_of_ConfiguraLCD 009E                             _CCP1CON 000FBD  
                           ?_initHw 0001          __size_of_EscreveComandoLCD 008C  
                        _bordaTotal 0033                             _INTCON2 000FF1  
                           _INTCON3 000FF0                  _EscreveFraseRamLCD 0CCC  
            __size_of_odometroTotal 00AE                 ?_EscreveFraseRamLCD 0012  
                      _ConfiguraLCD 0974                             __Hparam 0000  
                           __Lparam 0000                          _odoParcial 001F  
              ??_EscreveFraseRamLCD 0014                        __psmallconst 0800  
                   __size_of_initHw 0044                             __pcinit 0D62  
                      _bordaParcial 0031                             __ramtop 0800  
                           __ptext0 0E14                             __ptext1 08C6  
                           __ptext2 0DCA                             __ptext3 0E48  
                           __ptext4 0A9E                             __ptext5 0D9C  
                           __ptext6 0D1E                             __ptext7 0C72  
                           __ptext8 0B98                             __ptext9 0C08  
                           _display 0C72                      odometroTotal@i 0016  
                    odometroTotal@j 0015                     ??_initInterrupt 000F  
                      __size_of_isr 08BE                           _T3CONbits 000FB1  
                    _EnderecoCursor 0C08                           Delay@Cnt1 000F  
                         Delay@Cnt2 0010                      __pintcode_body 0806  
               _EscreveCaractereLCD 0B26                end_of_initialization 0D8E  
                     __Lmediumconst 0000                             int_func 0806  
                   _EEPROM_ReadByte 0E48                       _odometroTotal 08C6  
                           postdec1 000FE5                             postinc0 000FEE  
              ?_EscreveCaractereLCD 0001            __size_of_odometroParcial 0088  
       PosicaoCursorLCD@EnderecoLCD 0014                           _PORTDbits 000F83  
                         _PORTEbits 000F84                   ?_EEPROM_WriteByte 000F  
            __end_of_EnderecoCursor 0C72                  ??_EEPROM_WriteByte 0010  
                         _TRISCbits 000F94                           _TRISDbits 000F95  
         __size_of_PosicaoCursorLCD 0070                        ?_Init_EEPROM 0001  
                    ?_odometroTotal 0001               ??_EscreveCaractereLCD 0011  
                     __pidataCOMRAM 0E32                    _atualizaOdoTotal 002F  
                    __end_of_initHw 0D62                     ?_EnderecoCursor 0001  
               start_initialization 0D62                         __end_of_isr 08C6  
          EscreveFraseRamLCD@buffer 0012             __end_of_EEPROM_ReadByte 0E56  
                          ??_initHw 000F                   ??_odometroParcial 0015  
                       __pbssCOMRAM 002D                    odometroParcial@i 0035  
                   ??_odometroTotal 0015                           __pintcode 0008  
      EEPROM_ReadByte@MemoryAddress 000F              EscreveInteiroLCD@F3948 0018  
                          ?_display 0001                         __smallconst 0800  
                    __size_of_Delay 0024                    _PosicaoCursorLCD 0B98  
                  ?_EEPROM_ReadByte 0001              EnderecoCursor@endereco 0011  
              __size_of_Init_EEPROM 0006                            _PIE1bits 000F9D  
                          _PIR1bits 000F9E             EscreveCaractereLCD@data 0011  
       __size_of_EscreveFraseRamLCD 0052               __end_of_initInterrupt 0DCA  
                         copy_data0 0D76                  odometroTotal@i_310 0017  
         __size_of_EEPROM_WriteByte 0026                          _EECON1bits 000FA6  
                          __Hrparam 0000                            __Lrparam 0000  
                  ??_EnderecoCursor 0011                    __size_of_display 005A  
                          __ptext10 0CCC                            __ptext11 0B26  
                          __ptext12 0E56                            __ptext13 0974  
                          __ptext14 0A12                            __ptext15 0DF0  
                          _odoTotal 0026                       __size_of_main 001E  
       __end_of_EscreveCaractereLCD 0B98                     _odometroParcial 0A9E  
                          int$flags 0036                          _INTCONbits 000FF2  
                          intlevel2 0000  EEPROM_WriteByte@WriteMemoryAddress 0010  
                     ?_ConfiguraLCD 0001            __end_of_PosicaoCursorLCD 0C08  
            PosicaoCursorLCD@coluna 0012               PosicaoCursorLCD@linha 0013  
                    ??_ConfiguraLCD 0012                    _EEPROM_WriteByte 0DCA  
           __end_of_odometroParcial 0B26               __end_of_odometroTotal 0974  
