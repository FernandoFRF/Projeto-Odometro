

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Sun Nov 24 18:08:31 2019

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           ; Version 1.40
    33                           ; Generated 01/12/2016 GMT
    34                           ; 
    35                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4550 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	idataCOMRAM
    68  000EA0                     __pidataCOMRAM:
    69                           	opt stack 0
    70                           
    71                           ;initializer for EscreveInteiroLCD@F3948
    72  000EA0  30                 	db	48
    73  000EA1  30                 	db	48
    74  000EA2  30                 	db	48
    75  000EA3  30                 	db	48
    76  000EA4  30                 	db	48
    77  000EA5  30                 	db	48
    78  000EA6  00                 	db	0
    79                           
    80                           ;initializer for _odoParcial
    81  000EA7  30                 	db	48
    82  000EA8  30                 	db	48
    83  000EA9  30                 	db	48
    84  000EAA  30                 	db	48
    85  000EAB  2C                 	db	44
    86  000EAC  30                 	db	48
    87  000EAD  00                 	db	0
    88                           
    89                           ;initializer for _odoTotal
    90  000EAE  30                 	db	48
    91  000EAF  30                 	db	48
    92  000EB0  30                 	db	48
    93  000EB1  30                 	db	48
    94  000EB2  30                 	db	48
    95  000EB3  30                 	db	48
    96  000EB4  00                 	db	0
    97  0000                     _ADCON0	set	4034
    98  0000                     _ADCON0bits	set	4034
    99  0000                     _ADCON1	set	4033
   100  0000                     _ADCON2	set	4032
   101  0000                     _ADRESH	set	4036
   102  0000                     _ADRESL	set	4035
   103  0000                     _CCP1CON	set	4029
   104  0000                     _EEADR	set	4009
   105  0000                     _EECON1	set	4006
   106  0000                     _EECON1bits	set	4006
   107  0000                     _EECON2	set	4007
   108  0000                     _EEDATA	set	4008
   109  0000                     _INTCON	set	4082
   110  0000                     _INTCON2	set	4081
   111  0000                     _INTCON3	set	4080
   112  0000                     _INTCONbits	set	4082
   113  0000                     _IPR1	set	3999
   114  0000                     _IPR2	set	4002
   115  0000                     _LATA	set	3977
   116  0000                     _LATB	set	3978
   117  0000                     _LATD	set	3980
   118  0000                     _PIE1	set	3997
   119  0000                     _PIE1bits	set	3997
   120  0000                     _PIE2	set	4000
   121  0000                     _PIR1	set	3998
   122  0000                     _PIR1bits	set	3998
   123  0000                     _PIR2	set	4001
   124  0000                     _PORTB	set	3969
   125  0000                     _PORTCbits	set	3970
   126  0000                     _PORTDbits	set	3971
   127  0000                     _PORTEbits	set	3972
   128  0000                     _RCON	set	4048
   129  0000                     _T0CON	set	4053
   130  0000                     _T1CON	set	4045
   131  0000                     _T3CONbits	set	4017
   132  0000                     _TRISA	set	3986
   133  0000                     _TRISB	set	3987
   134  0000                     _TRISC	set	3988
   135  0000                     _TRISCbits	set	3988
   136  0000                     _TRISD	set	3989
   137  0000                     _TRISDbits	set	3989
   138  0000                     _TRISE	set	3990
   139                           
   140                           	psect	smallconst
   141  000800                     __psmallconst:
   142                           	opt stack 0
   143  000800  00                 	db	0
   144  000801                     STR_1:
   145  000801  4B                 	db	75	;'K'
   146  000802  6D                 	db	109	;'m'
   147  000803  00                 	db	0
   148  000804  00                 	db	0	; dummy byte at the end
   149  0000                     
   150                           ; #config settings
   151                           
   152                           	psect	cinit
   153  000DEA                     __pcinit:
   154                           	opt stack 0
   155  000DEA                     start_initialization:
   156                           	opt stack 0
   157  000DEA                     __initialization:
   158                           	opt stack 0
   159                           
   160                           ; Initialize objects allocated to COMRAM (21 bytes)
   161                           ; load TBLPTR registers with __pidataCOMRAM
   162  000DEA  0EA0               	movlw	low __pidataCOMRAM
   163  000DEC  6EF6               	movwf	tblptrl,c
   164  000DEE  0E0E               	movlw	high __pidataCOMRAM
   165  000DF0  6EF7               	movwf	tblptrh,c
   166  000DF2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   167  000DF4  6EF8               	movwf	tblptru,c
   168  000DF6  EE00  F031         	lfsr	0,__pdataCOMRAM
   169  000DFA  EE10 F015          	lfsr	1,21
   170  000DFE                     copy_data0:
   171  000DFE  0009               	tblrd		*+
   172  000E00  CFF5 FFEE          	movff	tablat,postinc0
   173  000E04  50E5               	movf	postdec1,w,c
   174  000E06  50E1               	movf	fsr1l,w,c
   175  000E08  E1FA               	bnz	copy_data0
   176                           
   177                           ; Clear objects allocated to COMRAM (48 bytes)
   178  000E0A  EE00  F001         	lfsr	0,__pbssCOMRAM
   179  000E0E  0E30               	movlw	48
   180  000E10                     clear_0:
   181  000E10  6AEE               	clrf	postinc0,c
   182  000E12  06E8               	decf	wreg,f,c
   183  000E14  E1FD               	bnz	clear_0
   184  000E16                     end_of_initialization:
   185                           	opt stack 0
   186  000E16                     __end_of__initialization:
   187                           	opt stack 0
   188  000E16  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   189  000E18  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   190  000E1A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   191  000E1C  6EF8               	movwf	tblptru,c
   192  000E1E  0100               	movlb	0
   193  000E20  EF41  F007         	goto	_main	;jump to C main() function
   194                           tblptru	equ	0xFF8
   195                           tblptrh	equ	0xFF7
   196                           tblptrl	equ	0xFF6
   197                           tablat	equ	0xFF5
   198                           postinc0	equ	0xFEE
   199                           wreg	equ	0xFE8
   200                           postdec1	equ	0xFE5
   201                           fsr1l	equ	0xFE1
   202                           
   203                           	psect	bssCOMRAM
   204  000001                     __pbssCOMRAM:
   205                           	opt stack 0
   206  000001                     _combArray:
   207                           	opt stack 0
   208  000001                     	ds	20
   209  000015                     _porcentagemTensao:
   210                           	opt stack 0
   211  000015                     	ds	4
   212  000019                     _atualizaOdoParcial:
   213                           	opt stack 0
   214  000019                     	ds	2
   215  00001B                     _atualizaOdoTotal:
   216                           	opt stack 0
   217  00001B                     	ds	2
   218  00001D                     _bordaParcial:
   219                           	opt stack 0
   220  00001D                     	ds	2
   221  00001F                     _bordaTotal:
   222                           	opt stack 0
   223  00001F                     	ds	2
   224  000021                     _countLed:
   225                           	opt stack 0
   226  000021                     	ds	2
   227  000023                     _tempoCombustivel:
   228                           	opt stack 0
   229  000023                     	ds	2
   230  000025                     _valorADCMedia:
   231                           	opt stack 0
   232  000025                     	ds	2
   233  000027                     _valorTensao:
   234                           	opt stack 0
   235  000027                     	ds	2
   236  000029                     _numeroC:
   237                           	opt stack 0
   238  000029                     	ds	1
   239  00002A                     _primeiroFiltro:
   240                           	opt stack 0
   241  00002A                     	ds	1
   242  00002B                     _reserva:
   243                           	opt stack 0
   244  00002B                     	ds	1
   245  00002C                     odometroParcial@i:
   246                           	opt stack 0
   247  00002C                     	ds	1
   248  00002D                     _valorADC:
   249                           	opt stack 0
   250  00002D                     	ds	4
   251                           tblptru	equ	0xFF8
   252                           tblptrh	equ	0xFF7
   253                           tblptrl	equ	0xFF6
   254                           tablat	equ	0xFF5
   255                           postinc0	equ	0xFEE
   256                           wreg	equ	0xFE8
   257                           postdec1	equ	0xFE5
   258                           fsr1l	equ	0xFE1
   259                           
   260                           	psect	dataCOMRAM
   261  000031                     __pdataCOMRAM:
   262                           	opt stack 0
   263  000031                     EscreveInteiroLCD@F3948:
   264                           	opt stack 0
   265  000031                     	ds	7
   266  000038                     _odoParcial:
   267                           	opt stack 0
   268  000038                     	ds	7
   269  00003F                     _odoTotal:
   270                           	opt stack 0
   271  00003F                     	ds	7
   272                           tblptru	equ	0xFF8
   273                           tblptrh	equ	0xFF7
   274                           tblptrl	equ	0xFF6
   275                           tablat	equ	0xFF5
   276                           postinc0	equ	0xFEE
   277                           wreg	equ	0xFE8
   278                           postdec1	equ	0xFE5
   279                           fsr1l	equ	0xFE1
   280                           
   281                           	psect	cstackBANK0
   282  000060                     __pcstackBANK0:
   283                           	opt stack 0
   284  000060                     Delay@Cnt1:
   285                           	opt stack 0
   286                           
   287                           ; 1 bytes @ 0x0
   288  000060                     	ds	1
   289  000061                     Delay@Cnt2:
   290                           	opt stack 0
   291                           
   292                           ; 1 bytes @ 0x1
   293  000061                     	ds	1
   294  000062                     EscreveComandoLCD@cmd:
   295                           	opt stack 0
   296  000062                     EnderecoCursor@endereco:
   297                           	opt stack 0
   298  000062                     EscreveCaractereLCD@data:
   299                           	opt stack 0
   300                           
   301                           ; 1 bytes @ 0x2
   302  000062                     	ds	1
   303  000063                     ??_ConfiguraLCD:
   304  000063                     PosicaoCursorLCD@coluna:
   305                           	opt stack 0
   306  000063                     EscreveFraseRamLCD@buffer:
   307                           	opt stack 0
   308                           
   309                           ; 2 bytes @ 0x3
   310  000063                     	ds	1
   311  000064                     PosicaoCursorLCD@linha:
   312                           	opt stack 0
   313                           
   314                           ; 1 bytes @ 0x4
   315  000064                     	ds	1
   316  000065                     PosicaoCursorLCD@EnderecoLCD:
   317                           	opt stack 0
   318                           
   319                           ; 1 bytes @ 0x5
   320  000065                     	ds	1
   321  000066                     odometroParcial@position:
   322                           	opt stack 0
   323                           
   324                           ; 1 bytes @ 0x6
   325  000066                     	ds	1
   326  000067                     odometroParcial@trava:
   327                           	opt stack 0
   328                           
   329                           ; 1 bytes @ 0x7
   330  000067                     	ds	1
   331  000068                     tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           postinc0	equ	0xFEE
   336                           wreg	equ	0xFE8
   337                           postdec1	equ	0xFE5
   338                           fsr1l	equ	0xFE1
   339                           
   340                           ; 1 bytes @ 0x8
   341                           
   342                           	psect	cstackCOMRAM
   343  000046                     __pcstackCOMRAM:
   344                           	opt stack 0
   345  000046                     ??_isr:
   346  000046                     
   347                           ; 1 bytes @ 0x0
   348  000046                     	ds	14
   349                           tblptru	equ	0xFF8
   350                           tblptrh	equ	0xFF7
   351                           tblptrl	equ	0xFF6
   352                           tablat	equ	0xFF5
   353                           postinc0	equ	0xFEE
   354                           wreg	equ	0xFE8
   355                           postdec1	equ	0xFE5
   356                           fsr1l	equ	0xFE1
   357                           
   358 ;;
   359 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   360 ;;
   361 ;; *************** function _main *****************
   362 ;; Defined at:
   363 ;;		line 36 in file "main.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;		None
   366 ;; Auto vars:     Size  Location     Type
   367 ;;		None
   368 ;; Return value:  Size  Location     Type
   369 ;;                  1    wreg      void 
   370 ;; Registers used:
   371 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   372 ;; Tracked objects:
   373 ;;		On entry : 0/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   377 ;;      Params:         0       0       0       0       0       0       0       0       0
   378 ;;      Locals:         0       0       0       0       0       0       0       0       0
   379 ;;      Temps:          0       0       0       0       0       0       0       0       0
   380 ;;      Totals:         0       0       0       0       0       0       0       0       0
   381 ;;Total ram usage:        0 bytes
   382 ;; Hardware stack levels required when called:    5
   383 ;; This function calls:
   384 ;;		_ConfiguraLCD
   385 ;;		_Init_EEPROM
   386 ;;		_display
   387 ;;		_initHw
   388 ;;		_initInterrupt
   389 ;;		_odometroParcial
   390 ;;		_odometroTotal
   391 ;; This function is called by:
   392 ;;		Startup code after reset
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396                           	psect	text0
   397  000E82                     __ptext0:
   398                           	opt stack 0
   399  000E82                     _main:
   400                           	opt stack 26
   401                           
   402                           ;main.c: 37: ConfiguraLCD();
   403                           
   404                           ;incstack = 0
   405  000E82  EC23  F005         	call	_ConfiguraLCD	;wreg free
   406                           
   407                           ;main.c: 38: initInterrupt();
   408  000E86  EC2A  F007         	call	_initInterrupt	;wreg free
   409                           
   410                           ;main.c: 39: initHw();
   411  000E8A  ECD3  F006         	call	_initHw	;wreg free
   412                           
   413                           ;main.c: 40: Init_EEPROM();
   414  000E8E  EC5B  F007         	call	_Init_EEPROM	;wreg free
   415                           
   416                           ;main.c: 41: display();
   417  000E92  EC3A  F006         	call	_display	;wreg free
   418  000E96                     l2323:
   419                           
   420                           ;main.c: 44: {
   421                           ;main.c: 45: odometroTotal();
   422  000E96  EC73  F006         	call	_odometroTotal	;wreg free
   423                           
   424                           ;main.c: 46: odometroParcial();
   425  000E9A  EC03  F004         	call	_odometroParcial	;wreg free
   426  000E9E  D7FB               	goto	l2323
   427  000EA0                     __end_of_main:
   428                           	opt stack 0
   429                           tblptru	equ	0xFF8
   430                           tblptrh	equ	0xFF7
   431                           tblptrl	equ	0xFF6
   432                           tablat	equ	0xFF5
   433                           postinc0	equ	0xFEE
   434                           wreg	equ	0xFE8
   435                           postdec1	equ	0xFE5
   436                           fsr1l	equ	0xFE1
   437                           
   438 ;; *************** function _odometroTotal *****************
   439 ;; Defined at:
   440 ;;		line 17 in file "Odometro_Total_Parcial.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   454 ;;      Params:         0       0       0       0       0       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0       0       0       0       0
   456 ;;      Temps:          0       0       0       0       0       0       0       0       0
   457 ;;      Totals:         0       0       0       0       0       0       0       0       0
   458 ;;Total ram usage:        0 bytes
   459 ;; Hardware stack levels used:    1
   460 ;; Hardware stack levels required when called:    4
   461 ;; This function calls:
   462 ;;		_EscreveFraseRamLCD
   463 ;;		_PosicaoCursorLCD
   464 ;; This function is called by:
   465 ;;		_main
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469                           	psect	text1
   470  000CE6                     __ptext1:
   471                           	opt stack 0
   472  000CE6                     _odometroTotal:
   473                           	opt stack 26
   474                           
   475                           ;Odometro_Total_Parcial.c: 19: if (atualizaOdoTotal)
   476                           
   477                           ;incstack = 0
   478  000CE6  501B               	movf	_atualizaOdoTotal,w,c
   479  000CE8  101C               	iorwf	_atualizaOdoTotal+1,w,c
   480  000CEA  B4D8               	btfsc	status,2,c
   481  000CEC  0012               	return	
   482                           
   483                           ;Odometro_Total_Parcial.c: 20: {
   484                           ;Odometro_Total_Parcial.c: 21: odoTotal[5]++;
   485  000CEE  2A44               	incf	_odoTotal+5,f,c
   486                           
   487                           ;Odometro_Total_Parcial.c: 22: if (odoTotal[5] > 0x39)
   488  000CF0  0E39               	movlw	57
   489  000CF2  6444               	cpfsgt	_odoTotal+5,c
   490  000CF4  D01B               	goto	l2133
   491                           
   492                           ;Odometro_Total_Parcial.c: 23: {
   493                           ;Odometro_Total_Parcial.c: 24: odoTotal[5] = 0x30;
   494  000CF6  0E30               	movlw	48
   495  000CF8  6E44               	movwf	_odoTotal+5,c
   496                           
   497                           ;Odometro_Total_Parcial.c: 25: odoTotal[4]++;
   498  000CFA  2A43               	incf	_odoTotal+4,f,c
   499                           
   500                           ;Odometro_Total_Parcial.c: 26: if (odoTotal[4] > 0x39)
   501  000CFC  0E39               	movlw	57
   502  000CFE  6443               	cpfsgt	_odoTotal+4,c
   503  000D00  D015               	goto	l2133
   504                           
   505                           ;Odometro_Total_Parcial.c: 27: {
   506                           ;Odometro_Total_Parcial.c: 28: odoTotal[4] = 0x30;
   507  000D02  0E30               	movlw	48
   508  000D04  6E43               	movwf	_odoTotal+4,c
   509                           
   510                           ;Odometro_Total_Parcial.c: 29: odoTotal[3]++;
   511  000D06  2A42               	incf	_odoTotal+3,f,c
   512                           
   513                           ;Odometro_Total_Parcial.c: 30: if (odoTotal[3] > 0x39)
   514  000D08  0E39               	movlw	57
   515  000D0A  6442               	cpfsgt	_odoTotal+3,c
   516  000D0C  D00F               	goto	l2133
   517                           
   518                           ;Odometro_Total_Parcial.c: 31: {
   519                           ;Odometro_Total_Parcial.c: 32: odoTotal[3] = 0x30;
   520  000D0E  0E30               	movlw	48
   521  000D10  6E42               	movwf	_odoTotal+3,c
   522                           
   523                           ;Odometro_Total_Parcial.c: 33: odoTotal[2]++;
   524  000D12  2A41               	incf	_odoTotal+2,f,c
   525                           
   526                           ;Odometro_Total_Parcial.c: 34: if (odoTotal[2] > 0x39)
   527  000D14  0E39               	movlw	57
   528  000D16  6441               	cpfsgt	_odoTotal+2,c
   529  000D18  D009               	goto	l2133
   530                           
   531                           ;Odometro_Total_Parcial.c: 35: {
   532                           ;Odometro_Total_Parcial.c: 36: odoTotal[2] = 0x30;
   533  000D1A  0E30               	movlw	48
   534  000D1C  6E41               	movwf	_odoTotal+2,c
   535                           
   536                           ;Odometro_Total_Parcial.c: 37: odoTotal[1]++;
   537  000D1E  2A40               	incf	_odoTotal+1,f,c
   538                           
   539                           ;Odometro_Total_Parcial.c: 38: if (odoTotal[1] > 0x39)
   540  000D20  0E39               	movlw	57
   541  000D22  6440               	cpfsgt	_odoTotal+1,c
   542  000D24  D003               	goto	l2133
   543                           
   544                           ;Odometro_Total_Parcial.c: 39: {
   545                           ;Odometro_Total_Parcial.c: 40: odoTotal[1] = 0x30;
   546  000D26  0E30               	movlw	48
   547  000D28  6E40               	movwf	_odoTotal+1,c
   548                           
   549                           ;Odometro_Total_Parcial.c: 41: odoTotal[0]++;
   550  000D2A  2A3F               	incf	_odoTotal,f,c
   551  000D2C                     l2133:
   552                           
   553                           ;Odometro_Total_Parcial.c: 45: }
   554                           ;Odometro_Total_Parcial.c: 46: }
   555                           ;Odometro_Total_Parcial.c: 47: }
   556                           ;Odometro_Total_Parcial.c: 48: }
   557                           ;Odometro_Total_Parcial.c: 49: }
   558                           ;Odometro_Total_Parcial.c: 50: }
   559                           ;Odometro_Total_Parcial.c: 51: PosicaoCursorLCD(1, 7);
   560  000D2C  0E07               	movlw	7
   561  000D2E  0100               	movlb	0	; () banked
   562  000D30  6F63               	movwf	PosicaoCursorLCD@coluna& (0+255),b
   563  000D32  0E01               	movlw	1
   564  000D34  EC72  F005         	call	_PosicaoCursorLCD
   565                           
   566                           ;Odometro_Total_Parcial.c: 52: EscreveFraseRamLCD(odoTotal);
   567  000D38  0E3F               	movlw	low _odoTotal
   568  000D3A  0100               	movlb	0	; () banked
   569  000D3C  6F63               	movwf	EscreveFraseRamLCD@buffer& (0+255),b
   570  000D3E  0E00               	movlw	high _odoTotal
   571  000D40  0100               	movlb	0	; () banked
   572  000D42  6F64               	movwf	(EscreveFraseRamLCD@buffer+1)& (0+255),b
   573  000D44  ECA9  F006         	call	_EscreveFraseRamLCD	;wreg free
   574                           
   575                           ;Odometro_Total_Parcial.c: 53: atualizaOdoTotal = 0;
   576  000D48  0E00               	movlw	0
   577  000D4A  6E1C               	movwf	_atualizaOdoTotal+1,c
   578  000D4C  0E00               	movlw	0
   579  000D4E  6E1B               	movwf	_atualizaOdoTotal,c
   580  000D50  0012               	return	
   581  000D52                     __end_of_odometroTotal:
   582                           	opt stack 0
   583                           tblptru	equ	0xFF8
   584                           tblptrh	equ	0xFF7
   585                           tblptrl	equ	0xFF6
   586                           tablat	equ	0xFF5
   587                           postinc0	equ	0xFEE
   588                           wreg	equ	0xFE8
   589                           postdec1	equ	0xFE5
   590                           fsr1l	equ	0xFE1
   591                           status	equ	0xFD8
   592                           
   593 ;; *************** function _odometroParcial *****************
   594 ;; Defined at:
   595 ;;		line 57 in file "Odometro_Total_Parcial.c"
   596 ;; Parameters:    Size  Location     Type
   597 ;;		None
   598 ;; Auto vars:     Size  Location     Type
   599 ;;  trava           1    7[BANK0 ] unsigned char 
   600 ;;  position        1    6[BANK0 ] unsigned char 
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      void 
   603 ;; Registers used:
   604 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   610 ;;      Params:         0       0       0       0       0       0       0       0       0
   611 ;;      Locals:         0       2       0       0       0       0       0       0       0
   612 ;;      Temps:          0       0       0       0       0       0       0       0       0
   613 ;;      Totals:         0       2       0       0       0       0       0       0       0
   614 ;;Total ram usage:        2 bytes
   615 ;; Hardware stack levels used:    1
   616 ;; Hardware stack levels required when called:    4
   617 ;; This function calls:
   618 ;;		_EscreveFraseRamLCD
   619 ;;		_PosicaoCursorLCD
   620 ;; This function is called by:
   621 ;;		_main
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           	psect	text2
   626  000806                     __ptext2:
   627                           	opt stack 0
   628  000806                     _odometroParcial:
   629                           	opt stack 26
   630                           
   631                           ;Odometro_Total_Parcial.c: 58: unsigned char trava = 0;
   632                           
   633                           ;incstack = 0
   634  000806  0E00               	movlw	0
   635  000808  0100               	movlb	0	; () banked
   636  00080A  6F67               	movwf	odometroParcial@trava& (0+255),b
   637                           
   638                           ;Odometro_Total_Parcial.c: 59: static unsigned char i;
   639                           ;Odometro_Total_Parcial.c: 60: char position = 0;
   640  00080C  0E00               	movlw	0
   641  00080E  0100               	movlb	0	; () banked
   642  000810  6F66               	movwf	odometroParcial@position& (0+255),b
   643                           
   644                           ; BSR set to: 0
   645                           ;Odometro_Total_Parcial.c: 62: if (atualizaOdoParcial){
   646  000812  5019               	movf	_atualizaOdoParcial,w,c
   647  000814  101A               	iorwf	_atualizaOdoParcial+1,w,c
   648  000816  B4D8               	btfsc	status,2,c
   649  000818  0012               	return	
   650                           
   651                           ; BSR set to: 0
   652                           ;Odometro_Total_Parcial.c: 63: odoParcial[5]++;
   653  00081A  2A3D               	incf	_odoParcial+5,f,c
   654                           
   655                           ; BSR set to: 0
   656                           ;Odometro_Total_Parcial.c: 65: if (odoParcial[5] > 0x39){
   657  00081C  0E39               	movlw	57
   658  00081E  643D               	cpfsgt	_odoParcial+5,c
   659  000820  0012               	return	
   660                           
   661                           ; BSR set to: 0
   662                           ;Odometro_Total_Parcial.c: 66: odoParcial[5] = 0x30;
   663  000822  0E30               	movlw	48
   664  000824  6E3D               	movwf	_odoParcial+5,c
   665                           
   666                           ; BSR set to: 0
   667                           ;Odometro_Total_Parcial.c: 67: odoParcial[3]++;
   668  000826  2A3B               	incf	_odoParcial+3,f,c
   669                           
   670                           ; BSR set to: 0
   671                           ;Odometro_Total_Parcial.c: 69: if (odoParcial[3] > 0x39){
   672  000828  0E39               	movlw	57
   673  00082A  643B               	cpfsgt	_odoParcial+3,c
   674  00082C  D026               	goto	l2185
   675                           
   676                           ; BSR set to: 0
   677                           ;Odometro_Total_Parcial.c: 70: odoParcial[3] = 0x30;
   678  00082E  0E30               	movlw	48
   679  000830  6E3B               	movwf	_odoParcial+3,c
   680                           
   681                           ; BSR set to: 0
   682                           ;Odometro_Total_Parcial.c: 71: odoParcial[2]++;
   683  000832  2A3A               	incf	_odoParcial+2,f,c
   684                           
   685                           ; BSR set to: 0
   686                           ;Odometro_Total_Parcial.c: 73: if (odoParcial[2] > 0x39){
   687  000834  0E39               	movlw	57
   688  000836  643A               	cpfsgt	_odoParcial+2,c
   689  000838  D020               	goto	l2185
   690                           
   691                           ; BSR set to: 0
   692                           ;Odometro_Total_Parcial.c: 74: odoParcial[2] = 0x30;
   693  00083A  0E30               	movlw	48
   694  00083C  6E3A               	movwf	_odoParcial+2,c
   695                           
   696                           ; BSR set to: 0
   697                           ;Odometro_Total_Parcial.c: 75: odoParcial[1]++;
   698  00083E  2A39               	incf	_odoParcial+1,f,c
   699                           
   700                           ; BSR set to: 0
   701                           ;Odometro_Total_Parcial.c: 77: if (odoParcial[1] > 0x39){
   702  000840  0E39               	movlw	57
   703  000842  6439               	cpfsgt	_odoParcial+1,c
   704  000844  D01A               	goto	l2185
   705                           
   706                           ; BSR set to: 0
   707                           ;Odometro_Total_Parcial.c: 78: odoParcial[1] = 0x30;
   708  000846  0E30               	movlw	48
   709  000848  6E39               	movwf	_odoParcial+1,c
   710                           
   711                           ; BSR set to: 0
   712                           ;Odometro_Total_Parcial.c: 79: odoParcial[0]++;
   713  00084A  2A38               	incf	_odoParcial,f,c
   714                           
   715                           ; BSR set to: 0
   716                           ;Odometro_Total_Parcial.c: 81: if (odoParcial[0] > 0x39){
   717  00084C  0E39               	movlw	57
   718  00084E  6438               	cpfsgt	_odoParcial,c
   719  000850  D014               	goto	l2185
   720                           
   721                           ; BSR set to: 0
   722                           ;Odometro_Total_Parcial.c: 82: for (i = 0; i <= 3; i++){
   723  000852  0E00               	movlw	0
   724  000854  6E2C               	movwf	odometroParcial@i,c
   725  000856                     l2173:
   726                           
   727                           ; BSR set to: 0
   728  000856  0E03               	movlw	3
   729  000858  642C               	cpfsgt	odometroParcial@i,c
   730  00085A  D001               	goto	l2177
   731  00085C  D00E               	goto	l2185
   732  00085E                     l2177:
   733                           
   734                           ;Odometro_Total_Parcial.c: 83: odoParcial[i] = '0';
   735  00085E  502C               	movf	odometroParcial@i,w,c
   736  000860  0D01               	mullw	1
   737  000862  0E38               	movlw	low _odoParcial
   738  000864  24F3               	addwf	prodl,w,c
   739  000866  6ED9               	movwf	fsr2l,c
   740  000868  0E00               	movlw	high _odoParcial
   741  00086A  20F4               	addwfc	prodh,w,c
   742  00086C  6EDA               	movwf	fsr2h,c
   743  00086E  0E30               	movlw	48
   744  000870  6EDF               	movwf	indf2,c
   745                           
   746                           ;Odometro_Total_Parcial.c: 84: odoParcial[5] = '0';
   747  000872  0E30               	movlw	48
   748  000874  6E3D               	movwf	_odoParcial+5,c
   749  000876  2A2C               	incf	odometroParcial@i,f,c
   750  000878  D7EE               	goto	l2173
   751  00087A                     l2185:
   752                           
   753                           ;Odometro_Total_Parcial.c: 85: }
   754                           ;Odometro_Total_Parcial.c: 86: }
   755                           ;Odometro_Total_Parcial.c: 87: }
   756                           ;Odometro_Total_Parcial.c: 88: }
   757                           ;Odometro_Total_Parcial.c: 89: }
   758                           ;Odometro_Total_Parcial.c: 90: PosicaoCursorLCD(2, 7);
   759  00087A  0E07               	movlw	7
   760  00087C  0100               	movlb	0	; () banked
   761  00087E  6F63               	movwf	PosicaoCursorLCD@coluna& (0+255),b
   762  000880  0E02               	movlw	2
   763  000882  EC72  F005         	call	_PosicaoCursorLCD
   764                           
   765                           ;Odometro_Total_Parcial.c: 91: EscreveFraseRamLCD(odoParcial);
   766  000886  0E38               	movlw	low _odoParcial
   767  000888  0100               	movlb	0	; () banked
   768  00088A  6F63               	movwf	EscreveFraseRamLCD@buffer& (0+255),b
   769  00088C  0E00               	movlw	high _odoParcial
   770  00088E  0100               	movlb	0	; () banked
   771  000890  6F64               	movwf	(EscreveFraseRamLCD@buffer+1)& (0+255),b
   772  000892  ECA9  F006         	call	_EscreveFraseRamLCD	;wreg free
   773                           
   774                           ;Odometro_Total_Parcial.c: 92: atualizaOdoParcial = 0;
   775  000896  0E00               	movlw	0
   776  000898  6E1A               	movwf	_atualizaOdoParcial+1,c
   777  00089A  0E00               	movlw	0
   778  00089C  6E19               	movwf	_atualizaOdoParcial,c
   779                           
   780                           ;Odometro_Total_Parcial.c: 94: if((PORTEbits.RE0 == 0)&&(trava == 0)) {
   781  00089E  B084               	btfsc	3972,0,c	;volatile
   782  0008A0  D016               	goto	l203
   783  0008A2  0100               	movlb	0	; () banked
   784  0008A4  5167               	movf	odometroParcial@trava& (0+255),w,b
   785  0008A6  0100               	movlb	0	; () banked
   786  0008A8  A4D8               	btfss	status,2,c
   787  0008AA  D011               	goto	l203
   788                           
   789                           ; BSR set to: 0
   790                           ;Odometro_Total_Parcial.c: 95: for(position = 5; position >= 0; position--){
   791  0008AC  0E05               	movlw	5
   792  0008AE  0100               	movlb	0	; () banked
   793  0008B0  6F66               	movwf	odometroParcial@position& (0+255),b
   794  0008B2                     l2199:
   795                           
   796                           ; BSR set to: 0
   797                           ;Odometro_Total_Parcial.c: 96: odoParcial[position] = 0x30;
   798  0008B2  0100               	movlb	0	; () banked
   799  0008B4  5166               	movf	odometroParcial@position& (0+255),w,b
   800  0008B6  0D01               	mullw	1
   801  0008B8  0E38               	movlw	low _odoParcial
   802  0008BA  24F3               	addwf	prodl,w,c
   803  0008BC  6ED9               	movwf	fsr2l,c
   804  0008BE  0E00               	movlw	high _odoParcial
   805  0008C0  20F4               	addwfc	prodh,w,c
   806  0008C2  6EDA               	movwf	fsr2h,c
   807  0008C4  0E30               	movlw	48
   808  0008C6  6EDF               	movwf	indf2,c
   809                           
   810                           ; BSR set to: 0
   811  0008C8  0100               	movlb	0	; () banked
   812  0008CA  0766               	decf	odometroParcial@position& (0+255),f,b
   813  0008CC  D7F2               	goto	l2199
   814  0008CE                     l203:
   815  0008CE  A084               	btfss	3972,0,c	;volatile
   816  0008D0  0012               	return	
   817  0008D2  0100               	movlb	0	; () banked
   818  0008D4  0567               	decf	odometroParcial@trava& (0+255),w,b
   819  0008D6  A4D8               	btfss	status,2,c
   820  0008D8  0012               	return	
   821                           
   822                           ; BSR set to: 0
   823                           ;Odometro_Total_Parcial.c: 102: trava = 0;
   824  0008DA  0E00               	movlw	0
   825  0008DC  0100               	movlb	0	; () banked
   826  0008DE  6F67               	movwf	odometroParcial@trava& (0+255),b
   827                           
   828                           ; BSR set to: 0
   829                           
   830                           ; BSR set to: 0
   831                           
   832                           ; BSR set to: 0
   833  0008E0  0012               	return	
   834  0008E2                     __end_of_odometroParcial:
   835                           	opt stack 0
   836                           tblptru	equ	0xFF8
   837                           tblptrh	equ	0xFF7
   838                           tblptrl	equ	0xFF6
   839                           tablat	equ	0xFF5
   840                           prodh	equ	0xFF4
   841                           prodl	equ	0xFF3
   842                           postinc0	equ	0xFEE
   843                           wreg	equ	0xFE8
   844                           postdec1	equ	0xFE5
   845                           fsr1l	equ	0xFE1
   846                           indf2	equ	0xFDF
   847                           fsr2h	equ	0xFDA
   848                           fsr2l	equ	0xFD9
   849                           status	equ	0xFD8
   850                           
   851 ;; *************** function _initInterrupt *****************
   852 ;; Defined at:
   853 ;;		line 52 in file "main.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;		None
   856 ;; Auto vars:     Size  Location     Type
   857 ;;		None
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      void 
   860 ;; Registers used:
   861 ;;		wreg, status,2
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   867 ;;      Params:         0       0       0       0       0       0       0       0       0
   868 ;;      Locals:         0       0       0       0       0       0       0       0       0
   869 ;;      Temps:          0       0       0       0       0       0       0       0       0
   870 ;;      Totals:         0       0       0       0       0       0       0       0       0
   871 ;;Total ram usage:        0 bytes
   872 ;; Hardware stack levels used:    1
   873 ;; Hardware stack levels required when called:    1
   874 ;; This function calls:
   875 ;;		Nothing
   876 ;; This function is called by:
   877 ;;		_main
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           	psect	text3
   882  000E54                     __ptext3:
   883                           	opt stack 0
   884  000E54                     _initInterrupt:
   885                           	opt stack 29
   886                           
   887                           ;main.c: 53: INTCON = 0b11100000;
   888                           
   889                           ;incstack = 0
   890  000E54  0EE0               	movlw	224
   891  000E56  6EF2               	movwf	intcon,c	;volatile
   892                           
   893                           ;main.c: 54: INTCON2 = 0b10000000;
   894  000E58  0E80               	movlw	128
   895  000E5A  6EF1               	movwf	intcon2,c	;volatile
   896                           
   897                           ;main.c: 55: INTCON3 = 0b00000000;
   898  000E5C  0E00               	movlw	0
   899  000E5E  6EF0               	movwf	intcon3,c	;volatile
   900                           
   901                           ;main.c: 56: CCP1CON = 0b00000101;
   902  000E60  0E05               	movlw	5
   903  000E62  6EBD               	movwf	4029,c	;volatile
   904                           
   905                           ;main.c: 57: PIR1 = 0b00000000;
   906  000E64  0E00               	movlw	0
   907  000E66  6E9E               	movwf	3998,c	;volatile
   908                           
   909                           ;main.c: 58: PIR2 = 0b00000000;
   910  000E68  0E00               	movlw	0
   911  000E6A  6EA1               	movwf	4001,c	;volatile
   912                           
   913                           ;main.c: 59: PIE1 = 0b00000100;
   914  000E6C  0E04               	movlw	4
   915  000E6E  6E9D               	movwf	3997,c	;volatile
   916                           
   917                           ;main.c: 60: PIE2 = 0b00000000;
   918  000E70  0E00               	movlw	0
   919  000E72  6EA0               	movwf	4000,c	;volatile
   920                           
   921                           ;main.c: 61: IPR1 = 0b00000000;
   922  000E74  0E00               	movlw	0
   923  000E76  6E9F               	movwf	3999,c	;volatile
   924                           
   925                           ;main.c: 62: IPR2 = 0b00000000;
   926  000E78  0E00               	movlw	0
   927  000E7A  6EA2               	movwf	4002,c	;volatile
   928                           
   929                           ;main.c: 63: RCON = 0b00000000;
   930  000E7C  0E00               	movlw	0
   931  000E7E  6ED0               	movwf	4048,c	;volatile
   932  000E80  0012               	return		;funcret
   933  000E82                     __end_of_initInterrupt:
   934                           	opt stack 0
   935                           tblptru	equ	0xFF8
   936                           tblptrh	equ	0xFF7
   937                           tblptrl	equ	0xFF6
   938                           tablat	equ	0xFF5
   939                           prodh	equ	0xFF4
   940                           prodl	equ	0xFF3
   941                           intcon	equ	0xFF2
   942                           intcon2	equ	0xFF1
   943                           intcon3	equ	0xFF0
   944                           postinc0	equ	0xFEE
   945                           wreg	equ	0xFE8
   946                           postdec1	equ	0xFE5
   947                           fsr1l	equ	0xFE1
   948                           indf2	equ	0xFDF
   949                           fsr2h	equ	0xFDA
   950                           fsr2l	equ	0xFD9
   951                           status	equ	0xFD8
   952                           
   953 ;; *************** function _initHw *****************
   954 ;; Defined at:
   955 ;;		line 65 in file "main.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;		None
   958 ;; Auto vars:     Size  Location     Type
   959 ;;		None
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      void 
   962 ;; Registers used:
   963 ;;		wreg, status,2
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   969 ;;      Params:         0       0       0       0       0       0       0       0       0
   970 ;;      Locals:         0       0       0       0       0       0       0       0       0
   971 ;;      Temps:          0       0       0       0       0       0       0       0       0
   972 ;;      Totals:         0       0       0       0       0       0       0       0       0
   973 ;;Total ram usage:        0 bytes
   974 ;; Hardware stack levels used:    1
   975 ;; Hardware stack levels required when called:    1
   976 ;; This function calls:
   977 ;;		Nothing
   978 ;; This function is called by:
   979 ;;		_main
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text4
   984  000DA6                     __ptext4:
   985                           	opt stack 0
   986  000DA6                     _initHw:
   987                           	opt stack 29
   988                           
   989                           ;main.c: 67: TRISA = 0x00;
   990                           
   991                           ;incstack = 0
   992  000DA6  0E00               	movlw	0
   993  000DA8  6E92               	movwf	3986,c	;volatile
   994                           
   995                           ;main.c: 68: TRISB = 0x00;
   996  000DAA  0E00               	movlw	0
   997  000DAC  6E93               	movwf	3987,c	;volatile
   998                           
   999                           ;main.c: 69: TRISC = 0x00;
  1000  000DAE  0E00               	movlw	0
  1001  000DB0  6E94               	movwf	3988,c	;volatile
  1002                           
  1003                           ;main.c: 70: TRISCbits.RC2 = 1;
  1004  000DB2  8494               	bsf	3988,2,c	;volatile
  1005                           
  1006                           ;main.c: 71: TRISD = 0x00;
  1007  000DB4  0E00               	movlw	0
  1008  000DB6  6E95               	movwf	3989,c	;volatile
  1009                           
  1010                           ;main.c: 72: TRISE = 0x0F;
  1011  000DB8  0E0F               	movlw	15
  1012  000DBA  6E96               	movwf	3990,c	;volatile
  1013                           
  1014                           ;main.c: 74: ADCON0 = 0b00000001;
  1015  000DBC  0E01               	movlw	1
  1016  000DBE  6EC2               	movwf	4034,c	;volatile
  1017                           
  1018                           ;main.c: 75: ADCON1 = 0b00001101;
  1019  000DC0  0E0D               	movlw	13
  1020  000DC2  6EC1               	movwf	4033,c	;volatile
  1021                           
  1022                           ;main.c: 76: ADCON2 = 0b10000100;
  1023  000DC4  0E84               	movlw	132
  1024  000DC6  6EC0               	movwf	4032,c	;volatile
  1025                           
  1026                           ;main.c: 78: PORTEbits.RE0 = 0;
  1027  000DC8  9084               	bcf	3972,0,c	;volatile
  1028                           
  1029                           ;main.c: 81: LATA = 0x00;
  1030  000DCA  0E00               	movlw	0
  1031  000DCC  6E89               	movwf	3977,c	;volatile
  1032                           
  1033                           ;main.c: 82: LATB = 0x00;
  1034  000DCE  0E00               	movlw	0
  1035  000DD0  6E8A               	movwf	3978,c	;volatile
  1036                           
  1037                           ;main.c: 83: LATD = 0x00;
  1038  000DD2  0E00               	movlw	0
  1039  000DD4  6E8C               	movwf	3980,c	;volatile
  1040                           
  1041                           ;main.c: 85: T0CON = 0b01000101;
  1042  000DD6  0E45               	movlw	69
  1043  000DD8  6ED5               	movwf	4053,c	;volatile
  1044                           
  1045                           ;main.c: 86: CCP1CON = 0b00000101;
  1046  000DDA  0E05               	movlw	5
  1047  000DDC  6EBD               	movwf	4029,c	;volatile
  1048                           
  1049                           ;main.c: 87: T1CON = 0b01000100;
  1050  000DDE  0E44               	movlw	68
  1051  000DE0  6ECD               	movwf	4045,c	;volatile
  1052                           
  1053                           ;main.c: 88: T3CONbits.T3CCP1 = 0;
  1054  000DE2  96B1               	bcf	4017,3,c	;volatile
  1055                           
  1056                           ;main.c: 89: INTCONbits.GIE = 1;
  1057  000DE4  8EF2               	bsf	intcon,7,c	;volatile
  1058                           
  1059                           ;main.c: 90: INTCONbits.PEIE = 1;
  1060  000DE6  8CF2               	bsf	intcon,6,c	;volatile
  1061  000DE8  0012               	return		;funcret
  1062  000DEA                     __end_of_initHw:
  1063                           	opt stack 0
  1064                           tblptru	equ	0xFF8
  1065                           tblptrh	equ	0xFF7
  1066                           tblptrl	equ	0xFF6
  1067                           tablat	equ	0xFF5
  1068                           prodh	equ	0xFF4
  1069                           prodl	equ	0xFF3
  1070                           intcon	equ	0xFF2
  1071                           intcon2	equ	0xFF1
  1072                           intcon3	equ	0xFF0
  1073                           postinc0	equ	0xFEE
  1074                           wreg	equ	0xFE8
  1075                           postdec1	equ	0xFE5
  1076                           fsr1l	equ	0xFE1
  1077                           indf2	equ	0xFDF
  1078                           fsr2h	equ	0xFDA
  1079                           fsr2l	equ	0xFD9
  1080                           status	equ	0xFD8
  1081                           
  1082 ;; *************** function _display *****************
  1083 ;; Defined at:
  1084 ;;		line 93 in file "main.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;		None
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;		None
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      void 
  1091 ;; Registers used:
  1092 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1098 ;;      Params:         0       0       0       0       0       0       0       0       0
  1099 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1100 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1101 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1102 ;;Total ram usage:        0 bytes
  1103 ;; Hardware stack levels used:    1
  1104 ;; Hardware stack levels required when called:    4
  1105 ;; This function calls:
  1106 ;;		_EscreveFraseRamLCD
  1107 ;;		_PosicaoCursorLCD
  1108 ;; This function is called by:
  1109 ;;		_main
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text5
  1114  000C74                     __ptext5:
  1115                           	opt stack 0
  1116  000C74                     _display:
  1117                           	opt stack 26
  1118                           
  1119                           ;main.c: 94: PosicaoCursorLCD(1, 7);
  1120                           
  1121                           ;incstack = 0
  1122  000C74  0E07               	movlw	7
  1123  000C76  0100               	movlb	0	; () banked
  1124  000C78  6F63               	movwf	PosicaoCursorLCD@coluna& (0+255),b
  1125  000C7A  0E01               	movlw	1
  1126  000C7C  EC72  F005         	call	_PosicaoCursorLCD
  1127                           
  1128                           ;main.c: 95: EscreveFraseRamLCD(odoTotal);
  1129  000C80  0E3F               	movlw	low _odoTotal
  1130  000C82  0100               	movlb	0	; () banked
  1131  000C84  6F63               	movwf	EscreveFraseRamLCD@buffer& (0+255),b
  1132  000C86  0E00               	movlw	high _odoTotal
  1133  000C88  0100               	movlb	0	; () banked
  1134  000C8A  6F64               	movwf	(EscreveFraseRamLCD@buffer+1)& (0+255),b
  1135  000C8C  ECA9  F006         	call	_EscreveFraseRamLCD	;wreg free
  1136                           
  1137                           ;main.c: 96: PosicaoCursorLCD(2, 7);
  1138  000C90  0E07               	movlw	7
  1139  000C92  0100               	movlb	0	; () banked
  1140  000C94  6F63               	movwf	PosicaoCursorLCD@coluna& (0+255),b
  1141  000C96  0E02               	movlw	2
  1142  000C98  EC72  F005         	call	_PosicaoCursorLCD
  1143                           
  1144                           ;main.c: 97: EscreveFraseRamLCD(odoParcial);
  1145  000C9C  0E38               	movlw	low _odoParcial
  1146  000C9E  0100               	movlb	0	; () banked
  1147  000CA0  6F63               	movwf	EscreveFraseRamLCD@buffer& (0+255),b
  1148  000CA2  0E00               	movlw	high _odoParcial
  1149  000CA4  0100               	movlb	0	; () banked
  1150  000CA6  6F64               	movwf	(EscreveFraseRamLCD@buffer+1)& (0+255),b
  1151  000CA8  ECA9  F006         	call	_EscreveFraseRamLCD	;wreg free
  1152                           
  1153                           ;main.c: 98: PosicaoCursorLCD(1, 14);
  1154  000CAC  0E0E               	movlw	14
  1155  000CAE  0100               	movlb	0	; () banked
  1156  000CB0  6F63               	movwf	PosicaoCursorLCD@coluna& (0+255),b
  1157  000CB2  0E01               	movlw	1
  1158  000CB4  EC72  F005         	call	_PosicaoCursorLCD
  1159                           
  1160                           ;main.c: 99: EscreveFraseRamLCD("Km");
  1161  000CB8  0E01               	movlw	low STR_1
  1162  000CBA  0100               	movlb	0	; () banked
  1163  000CBC  6F63               	movwf	EscreveFraseRamLCD@buffer& (0+255),b
  1164  000CBE  0E08               	movlw	high STR_1
  1165  000CC0  0100               	movlb	0	; () banked
  1166  000CC2  6F64               	movwf	(EscreveFraseRamLCD@buffer+1)& (0+255),b
  1167  000CC4  ECA9  F006         	call	_EscreveFraseRamLCD	;wreg free
  1168                           
  1169                           ;main.c: 100: PosicaoCursorLCD(2, 14);
  1170  000CC8  0E0E               	movlw	14
  1171  000CCA  0100               	movlb	0	; () banked
  1172  000CCC  6F63               	movwf	PosicaoCursorLCD@coluna& (0+255),b
  1173  000CCE  0E02               	movlw	2
  1174  000CD0  EC72  F005         	call	_PosicaoCursorLCD
  1175                           
  1176                           ;main.c: 101: EscreveFraseRamLCD("Km");
  1177  000CD4  0E01               	movlw	low STR_1
  1178  000CD6  0100               	movlb	0	; () banked
  1179  000CD8  6F63               	movwf	EscreveFraseRamLCD@buffer& (0+255),b
  1180  000CDA  0E08               	movlw	high STR_1
  1181  000CDC  0100               	movlb	0	; () banked
  1182  000CDE  6F64               	movwf	(EscreveFraseRamLCD@buffer+1)& (0+255),b
  1183  000CE0  ECA9  F006         	call	_EscreveFraseRamLCD	;wreg free
  1184  000CE4  0012               	return		;funcret
  1185  000CE6                     __end_of_display:
  1186                           	opt stack 0
  1187                           tblptru	equ	0xFF8
  1188                           tblptrh	equ	0xFF7
  1189                           tblptrl	equ	0xFF6
  1190                           tablat	equ	0xFF5
  1191                           prodh	equ	0xFF4
  1192                           prodl	equ	0xFF3
  1193                           intcon	equ	0xFF2
  1194                           intcon2	equ	0xFF1
  1195                           intcon3	equ	0xFF0
  1196                           postinc0	equ	0xFEE
  1197                           wreg	equ	0xFE8
  1198                           postdec1	equ	0xFE5
  1199                           fsr1l	equ	0xFE1
  1200                           indf2	equ	0xFDF
  1201                           fsr2h	equ	0xFDA
  1202                           fsr2l	equ	0xFD9
  1203                           status	equ	0xFD8
  1204                           
  1205 ;; *************** function _PosicaoCursorLCD *****************
  1206 ;; Defined at:
  1207 ;;		line 287 in file "displayLCD.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;  linha           1    wreg     unsigned char 
  1210 ;;  coluna          1    3[BANK0 ] unsigned char 
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;  linha           1    4[BANK0 ] unsigned char 
  1213 ;;  EnderecoLCD     1    5[BANK0 ] unsigned char 
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		wreg, status,2, status,0, cstack
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1223 ;;      Params:         0       1       0       0       0       0       0       0       0
  1224 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1225 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1226 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1227 ;;Total ram usage:        3 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; Hardware stack levels required when called:    3
  1230 ;; This function calls:
  1231 ;;		_EnderecoCursor
  1232 ;; This function is called by:
  1233 ;;		_odometroTotal
  1234 ;;		_odometroParcial
  1235 ;;		_display
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           	psect	text6
  1240  000AE4                     __ptext6:
  1241                           	opt stack 0
  1242  000AE4                     _PosicaoCursorLCD:
  1243                           	opt stack 26
  1244                           
  1245                           ;incstack = 0
  1246                           ;PosicaoCursorLCD@linha stored from wreg
  1247  000AE4  0100               	movlb	0	; () banked
  1248  000AE6  6F64               	movwf	PosicaoCursorLCD@linha& (0+255),b
  1249                           
  1250                           ;displayLCD.c: 295: unsigned char EnderecoLCD = 0x00;
  1251  000AE8  0E00               	movlw	0
  1252  000AEA  0100               	movlb	0	; () banked
  1253  000AEC  6F65               	movwf	PosicaoCursorLCD@EnderecoLCD& (0+255),b
  1254                           
  1255                           ; BSR set to: 0
  1256                           ;displayLCD.c: 299: if(coluna <= 16)
  1257  000AEE  0E11               	movlw	17
  1258  000AF0  0100               	movlb	0	; () banked
  1259  000AF2  6163               	cpfslt	PosicaoCursorLCD@coluna& (0+255),b
  1260  000AF4  D03C               	goto	l2027
  1261  000AF6  D029               	goto	l2023
  1262  000AF8                     l70:
  1263                           
  1264                           ; BSR set to: 0
  1265                           ;displayLCD.c: 306: EnderecoLCD = 0x00 + coluna;
  1266  000AF8  C063  F065         	movff	PosicaoCursorLCD@coluna,PosicaoCursorLCD@EnderecoLCD
  1267                           
  1268                           ; BSR set to: 0
  1269                           ;displayLCD.c: 307: EnderecoCursor(EnderecoLCD);
  1270  000AFC  0100               	movlb	0	; () banked
  1271  000AFE  5165               	movf	PosicaoCursorLCD@EnderecoLCD& (0+255),w,b
  1272  000B00  ECFD  F005         	call	_EnderecoCursor
  1273                           
  1274                           ;displayLCD.c: 308: break;
  1275  000B04  D031               	goto	l2025
  1276  000B06                     l2007:
  1277                           
  1278                           ;displayLCD.c: 311: EnderecoLCD = 0x40 + coluna;
  1279  000B06  0100               	movlb	0	; () banked
  1280  000B08  5163               	movf	PosicaoCursorLCD@coluna& (0+255),w,b
  1281  000B0A  0F40               	addlw	64
  1282  000B0C  0100               	movlb	0	; () banked
  1283  000B0E  6F65               	movwf	PosicaoCursorLCD@EnderecoLCD& (0+255),b
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;displayLCD.c: 312: EnderecoCursor(EnderecoLCD);
  1287  000B10  0100               	movlb	0	; () banked
  1288  000B12  5165               	movf	PosicaoCursorLCD@EnderecoLCD& (0+255),w,b
  1289  000B14  ECFD  F005         	call	_EnderecoCursor
  1290                           
  1291                           ;displayLCD.c: 313: break;
  1292  000B18  D027               	goto	l2025
  1293  000B1A                     l2011:
  1294                           
  1295                           ;displayLCD.c: 316: EnderecoLCD = 0x14 + coluna;
  1296  000B1A  0100               	movlb	0	; () banked
  1297  000B1C  5163               	movf	PosicaoCursorLCD@coluna& (0+255),w,b
  1298  000B1E  0F14               	addlw	20
  1299  000B20  0100               	movlb	0	; () banked
  1300  000B22  6F65               	movwf	PosicaoCursorLCD@EnderecoLCD& (0+255),b
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;displayLCD.c: 317: EnderecoCursor(EnderecoLCD);
  1304  000B24  0100               	movlb	0	; () banked
  1305  000B26  5165               	movf	PosicaoCursorLCD@EnderecoLCD& (0+255),w,b
  1306  000B28  ECFD  F005         	call	_EnderecoCursor
  1307                           
  1308                           ;displayLCD.c: 318: break;
  1309  000B2C  D01D               	goto	l2025
  1310  000B2E                     l2015:
  1311                           
  1312                           ;displayLCD.c: 321: EnderecoLCD = 0x54 + coluna;
  1313  000B2E  0100               	movlb	0	; () banked
  1314  000B30  5163               	movf	PosicaoCursorLCD@coluna& (0+255),w,b
  1315  000B32  0F54               	addlw	84
  1316  000B34  0100               	movlb	0	; () banked
  1317  000B36  6F65               	movwf	PosicaoCursorLCD@EnderecoLCD& (0+255),b
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;displayLCD.c: 322: EnderecoCursor(EnderecoLCD);
  1321  000B38  0100               	movlb	0	; () banked
  1322  000B3A  5165               	movf	PosicaoCursorLCD@EnderecoLCD& (0+255),w,b
  1323  000B3C  ECFD  F005         	call	_EnderecoCursor
  1324                           
  1325                           ;displayLCD.c: 323: break;
  1326  000B40  D013               	goto	l2025
  1327  000B42                     l2019:
  1328                           
  1329                           ;displayLCD.c: 326: EnderecoLCD = 0x00;
  1330  000B42  0E00               	movlw	0
  1331  000B44  0100               	movlb	0	; () banked
  1332  000B46  6F65               	movwf	PosicaoCursorLCD@EnderecoLCD& (0+255),b
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;displayLCD.c: 328: }
  1336                           
  1337                           ;displayLCD.c: 327: break;
  1338  000B48  D00F               	goto	l2025
  1339  000B4A                     l2023:
  1340                           
  1341                           ; BSR set to: 0
  1342  000B4A  0100               	movlb	0	; () banked
  1343  000B4C  5164               	movf	PosicaoCursorLCD@linha& (0+255),w,b
  1344                           
  1345                           ; Switch size 1, requested type "space"
  1346                           ; Number of cases is 4, Range of values is 1 to 4
  1347                           ; switch strategies available:
  1348                           ; Name         Instructions Cycles
  1349                           ; simple_byte           13     7 (average)
  1350                           ;	Chosen strategy is simple_byte
  1351  000B4E  0A01               	xorlw	1	; case 1
  1352  000B50  B4D8               	btfsc	status,2,c
  1353  000B52  D7D2               	goto	l70
  1354  000B54  0A03               	xorlw	3	; case 2
  1355  000B56  B4D8               	btfsc	status,2,c
  1356  000B58  D7D6               	goto	l2007
  1357  000B5A  0A01               	xorlw	1	; case 3
  1358  000B5C  B4D8               	btfsc	status,2,c
  1359  000B5E  D7DD               	goto	l2011
  1360  000B60  0A07               	xorlw	7	; case 4
  1361  000B62  B4D8               	btfsc	status,2,c
  1362  000B64  D7E4               	goto	l2015
  1363  000B66  D7ED               	goto	l2019
  1364  000B68                     l2025:
  1365                           
  1366                           ;displayLCD.c: 330: coluna++;
  1367  000B68  0100               	movlb	0	; () banked
  1368  000B6A  2B63               	incf	PosicaoCursorLCD@coluna& (0+255),f,b
  1369                           
  1370                           ;displayLCD.c: 331: }
  1371  000B6C  0012               	return	
  1372  000B6E                     l2027:
  1373                           
  1374                           ; BSR set to: 0
  1375                           ;displayLCD.c: 332: else
  1376                           ;displayLCD.c: 333: {
  1377                           ;displayLCD.c: 334: EnderecoLCD = 0x00;
  1378  000B6E  0E00               	movlw	0
  1379  000B70  0100               	movlb	0	; () banked
  1380  000B72  6F65               	movwf	PosicaoCursorLCD@EnderecoLCD& (0+255),b
  1381  000B74  0012               	return	
  1382  000B76                     __end_of_PosicaoCursorLCD:
  1383                           	opt stack 0
  1384                           tblptru	equ	0xFF8
  1385                           tblptrh	equ	0xFF7
  1386                           tblptrl	equ	0xFF6
  1387                           tablat	equ	0xFF5
  1388                           prodh	equ	0xFF4
  1389                           prodl	equ	0xFF3
  1390                           intcon	equ	0xFF2
  1391                           intcon2	equ	0xFF1
  1392                           intcon3	equ	0xFF0
  1393                           postinc0	equ	0xFEE
  1394                           wreg	equ	0xFE8
  1395                           postdec1	equ	0xFE5
  1396                           fsr1l	equ	0xFE1
  1397                           indf2	equ	0xFDF
  1398                           fsr2h	equ	0xFDA
  1399                           fsr2l	equ	0xFD9
  1400                           status	equ	0xFD8
  1401                           
  1402 ;; *************** function _EnderecoCursor *****************
  1403 ;; Defined at:
  1404 ;;		line 236 in file "displayLCD.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  endereco        1    wreg     unsigned char 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  endereco        1    2[BANK0 ] unsigned char 
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      void 
  1411 ;; Registers used:
  1412 ;;		wreg, status,2, status,0, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1418 ;;      Params:         0       0       0       0       0       0       0       0       0
  1419 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1420 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1421 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1422 ;;Total ram usage:        1 bytes
  1423 ;; Hardware stack levels used:    1
  1424 ;; Hardware stack levels required when called:    2
  1425 ;; This function calls:
  1426 ;;		_Delay
  1427 ;; This function is called by:
  1428 ;;		_PosicaoCursorLCD
  1429 ;;		_CriaCaractereLCD
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text7
  1434  000BFA                     __ptext7:
  1435                           	opt stack 0
  1436  000BFA                     _EnderecoCursor:
  1437                           	opt stack 26
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;incstack = 0
  1441                           ;EnderecoCursor@endereco stored from wreg
  1442  000BFA  0100               	movlb	0	; () banked
  1443  000BFC  6F62               	movwf	EnderecoCursor@endereco& (0+255),b
  1444                           
  1445                           ;displayLCD.c: 239: PORTDbits.RD2 = 0;
  1446  000BFE  9483               	bcf	3971,2,c	;volatile
  1447                           
  1448                           ;displayLCD.c: 240: PORTDbits.RD1 = 0;
  1449  000C00  9283               	bcf	3971,1,c	;volatile
  1450                           
  1451                           ;displayLCD.c: 241: PORTDbits.RD0 = 0;
  1452  000C02  9083               	bcf	3971,0,c	;volatile
  1453                           
  1454                           ;displayLCD.c: 244: PORTDbits.RD7 = 1;
  1455  000C04  8E83               	bsf	3971,7,c	;volatile
  1456                           
  1457                           ;displayLCD.c: 245: if(endereco&0b00010000){PORTDbits.RD4=1;}
  1458  000C06  0100               	movlb	0	; () banked
  1459  000C08  A962               	btfss	EnderecoCursor@endereco& (0+255),4,b
  1460  000C0A  D002               	goto	l51
  1461                           
  1462                           ; BSR set to: 0
  1463  000C0C  8883               	bsf	3971,4,c	;volatile
  1464  000C0E  D001               	goto	l1893
  1465  000C10                     l51:
  1466                           
  1467                           ; BSR set to: 0
  1468                           ;displayLCD.c: 246: else {PORTDbits.RD4=0;}
  1469  000C10  9883               	bcf	3971,4,c	;volatile
  1470  000C12                     l1893:
  1471                           
  1472                           ; BSR set to: 0
  1473                           ;displayLCD.c: 247: if(endereco&0b00100000){PORTDbits.RD5=1;}
  1474  000C12  0100               	movlb	0	; () banked
  1475  000C14  AB62               	btfss	EnderecoCursor@endereco& (0+255),5,b
  1476  000C16  D002               	goto	l53
  1477                           
  1478                           ; BSR set to: 0
  1479  000C18  8A83               	bsf	3971,5,c	;volatile
  1480  000C1A  D001               	goto	l1897
  1481  000C1C                     l53:
  1482                           
  1483                           ; BSR set to: 0
  1484                           ;displayLCD.c: 248: else {PORTDbits.RD5=0;}
  1485  000C1C  9A83               	bcf	3971,5,c	;volatile
  1486  000C1E                     l1897:
  1487                           
  1488                           ; BSR set to: 0
  1489                           ;displayLCD.c: 249: if(endereco&0b01000000){PORTDbits.RD6=1;}
  1490  000C1E  0100               	movlb	0	; () banked
  1491  000C20  AD62               	btfss	EnderecoCursor@endereco& (0+255),6,b
  1492  000C22  D002               	goto	l55
  1493                           
  1494                           ; BSR set to: 0
  1495  000C24  8C83               	bsf	3971,6,c	;volatile
  1496  000C26  D001               	goto	l56
  1497  000C28                     l55:
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;displayLCD.c: 250: else {PORTDbits.RD6=0;}
  1501  000C28  9C83               	bcf	3971,6,c	;volatile
  1502  000C2A                     l56:
  1503                           
  1504                           ; BSR set to: 0
  1505                           ;displayLCD.c: 253: PORTDbits.RD0 = 1;
  1506  000C2A  8083               	bsf	3971,0,c	;volatile
  1507                           
  1508                           ; BSR set to: 0
  1509                           ;displayLCD.c: 254: Delay();
  1510  000C2C  EC12  F007         	call	_Delay	;wreg free
  1511                           
  1512                           ;displayLCD.c: 255: PORTDbits.RD0 = 0;
  1513  000C30  9083               	bcf	3971,0,c	;volatile
  1514                           
  1515                           ;displayLCD.c: 256: Delay();
  1516  000C32  EC12  F007         	call	_Delay	;wreg free
  1517                           
  1518                           ;displayLCD.c: 259: if(endereco&0b00000001){PORTDbits.RD4=1;}
  1519  000C36  0100               	movlb	0	; () banked
  1520  000C38  A162               	btfss	EnderecoCursor@endereco& (0+255),0,b
  1521  000C3A  D002               	goto	l57
  1522                           
  1523                           ; BSR set to: 0
  1524  000C3C  8883               	bsf	3971,4,c	;volatile
  1525  000C3E  D001               	goto	l58
  1526  000C40                     l57:
  1527                           
  1528                           ; BSR set to: 0
  1529                           ;displayLCD.c: 260: else {PORTDbits.RD4=0;}
  1530  000C40  9883               	bcf	3971,4,c	;volatile
  1531  000C42                     l58:
  1532                           
  1533                           ; BSR set to: 0
  1534                           ;displayLCD.c: 261: if(endereco&0b00000010){PORTDbits.RD5=1;}
  1535  000C42  0100               	movlb	0	; () banked
  1536  000C44  A362               	btfss	EnderecoCursor@endereco& (0+255),1,b
  1537  000C46  D002               	goto	l59
  1538                           
  1539                           ; BSR set to: 0
  1540  000C48  8A83               	bsf	3971,5,c	;volatile
  1541  000C4A  D001               	goto	l60
  1542  000C4C                     l59:
  1543                           
  1544                           ; BSR set to: 0
  1545                           ;displayLCD.c: 262: else {PORTDbits.RD5=0;}
  1546  000C4C  9A83               	bcf	3971,5,c	;volatile
  1547  000C4E                     l60:
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;displayLCD.c: 263: if(endereco&0b00000100){PORTDbits.RD6=1;}
  1551  000C4E  0100               	movlb	0	; () banked
  1552  000C50  A562               	btfss	EnderecoCursor@endereco& (0+255),2,b
  1553  000C52  D002               	goto	l61
  1554                           
  1555                           ; BSR set to: 0
  1556  000C54  8C83               	bsf	3971,6,c	;volatile
  1557  000C56  D001               	goto	l62
  1558  000C58                     l61:
  1559                           
  1560                           ; BSR set to: 0
  1561                           ;displayLCD.c: 264: else {PORTDbits.RD6=0;}
  1562  000C58  9C83               	bcf	3971,6,c	;volatile
  1563  000C5A                     l62:
  1564                           
  1565                           ; BSR set to: 0
  1566                           ;displayLCD.c: 265: if(endereco&0b00001000){PORTDbits.RD7=1;}
  1567  000C5A  0100               	movlb	0	; () banked
  1568  000C5C  A762               	btfss	EnderecoCursor@endereco& (0+255),3,b
  1569  000C5E  D002               	goto	l63
  1570                           
  1571                           ; BSR set to: 0
  1572  000C60  8E83               	bsf	3971,7,c	;volatile
  1573  000C62  D001               	goto	l64
  1574  000C64                     l63:
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;displayLCD.c: 266: else {PORTDbits.RD7=0;}
  1578  000C64  9E83               	bcf	3971,7,c	;volatile
  1579  000C66                     l64:
  1580                           
  1581                           ; BSR set to: 0
  1582                           ;displayLCD.c: 269: PORTDbits.RD0 = 1;
  1583  000C66  8083               	bsf	3971,0,c	;volatile
  1584                           
  1585                           ; BSR set to: 0
  1586                           ;displayLCD.c: 270: Delay();
  1587  000C68  EC12  F007         	call	_Delay	;wreg free
  1588                           
  1589                           ;displayLCD.c: 271: PORTDbits.RD0 = 0;
  1590  000C6C  9083               	bcf	3971,0,c	;volatile
  1591                           
  1592                           ;displayLCD.c: 272: Delay();
  1593  000C6E  EC12  F007         	call	_Delay	;wreg free
  1594  000C72  0012               	return		;funcret
  1595  000C74                     __end_of_EnderecoCursor:
  1596                           	opt stack 0
  1597                           tblptru	equ	0xFF8
  1598                           tblptrh	equ	0xFF7
  1599                           tblptrl	equ	0xFF6
  1600                           tablat	equ	0xFF5
  1601                           prodh	equ	0xFF4
  1602                           prodl	equ	0xFF3
  1603                           intcon	equ	0xFF2
  1604                           intcon2	equ	0xFF1
  1605                           intcon3	equ	0xFF0
  1606                           postinc0	equ	0xFEE
  1607                           wreg	equ	0xFE8
  1608                           postdec1	equ	0xFE5
  1609                           fsr1l	equ	0xFE1
  1610                           indf2	equ	0xFDF
  1611                           fsr2h	equ	0xFDA
  1612                           fsr2l	equ	0xFD9
  1613                           status	equ	0xFD8
  1614                           
  1615 ;; *************** function _EscreveFraseRamLCD *****************
  1616 ;; Defined at:
  1617 ;;		line 470 in file "displayLCD.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  buffer          2    3[BANK0 ] PTR unsigned char 
  1620 ;;		 -> STR_2(3), STR_1(3), odoParcial(7), odoTotal(7), 
  1621 ;;		 -> EscreveInteiroLCD@texto(7), 
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;		None
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      void 
  1626 ;; Registers used:
  1627 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1633 ;;      Params:         0       2       0       0       0       0       0       0       0
  1634 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1636 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1637 ;;Total ram usage:        2 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; Hardware stack levels required when called:    3
  1640 ;; This function calls:
  1641 ;;		_EscreveCaractereLCD
  1642 ;; This function is called by:
  1643 ;;		_odometroTotal
  1644 ;;		_odometroParcial
  1645 ;;		_display
  1646 ;;		_EscreveInteiroLCD
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text8
  1651  000D52                     __ptext8:
  1652                           	opt stack 0
  1653  000D52                     _EscreveFraseRamLCD:
  1654                           	opt stack 26
  1655                           
  1656                           ;displayLCD.c: 472: while(*buffer)
  1657                           
  1658                           ;incstack = 0
  1659  000D52  D015               	goto	l2035
  1660  000D54                     l2031:
  1661                           
  1662                           ;displayLCD.c: 473: {
  1663                           ;displayLCD.c: 474: EscreveCaractereLCD(*buffer);
  1664  000D54  C063  FFF6         	movff	EscreveFraseRamLCD@buffer,tblptrl
  1665  000D58  C064  FFF7         	movff	EscreveFraseRamLCD@buffer+1,tblptrh
  1666  000D5C  6AF8               	clrf	tblptru,c
  1667  000D5E  0E07               	movlw	(high __ramtop+-1)
  1668  000D60  64F7               	cpfsgt	tblptrh,c
  1669  000D62  D003               	bra	u1507
  1670  000D64  0008               	tblrd		*
  1671  000D66  50F5               	movf	tablat,w,c
  1672  000D68  D005               	bra	u1500
  1673  000D6A                     u1507:
  1674  000D6A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1675  000D6E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1676  000D72  50EF               	movf	indf0,w,c
  1677  000D74                     u1500:
  1678  000D74  ECBB  F005         	call	_EscreveCaractereLCD
  1679                           
  1680                           ;displayLCD.c: 475: buffer++;
  1681  000D78  0100               	movlb	0	; () banked
  1682  000D7A  4B63               	infsnz	EscreveFraseRamLCD@buffer& (0+255),f,b
  1683  000D7C  2B64               	incf	(EscreveFraseRamLCD@buffer+1)& (0+255),f,b
  1684  000D7E                     l2035:
  1685  000D7E  C063  FFF6         	movff	EscreveFraseRamLCD@buffer,tblptrl
  1686  000D82  C064  FFF7         	movff	EscreveFraseRamLCD@buffer+1,tblptrh
  1687  000D86  6AF8               	clrf	tblptru,c
  1688  000D88  0E07               	movlw	(high __ramtop+-1)
  1689  000D8A  64F7               	cpfsgt	tblptrh,c
  1690  000D8C  D003               	bra	u1517
  1691  000D8E  0008               	tblrd		*
  1692  000D90  50F5               	movf	tablat,w,c
  1693  000D92  D005               	bra	u1510
  1694  000D94                     u1517:
  1695  000D94  CFF6 FFE9          	movff	tblptrl,fsr0l
  1696  000D98  CFF7 FFEA          	movff	tblptrh,fsr0h
  1697  000D9C  50EF               	movf	indf0,w,c
  1698  000D9E                     u1510:
  1699  000D9E  0900               	iorlw	0
  1700  000DA0  B4D8               	btfsc	status,2,c
  1701  000DA2  0012               	return	
  1702  000DA4  D7D7               	goto	l2031
  1703  000DA6                     __end_of_EscreveFraseRamLCD:
  1704                           	opt stack 0
  1705                           tblptru	equ	0xFF8
  1706                           tblptrh	equ	0xFF7
  1707                           tblptrl	equ	0xFF6
  1708                           tablat	equ	0xFF5
  1709                           prodh	equ	0xFF4
  1710                           prodl	equ	0xFF3
  1711                           intcon	equ	0xFF2
  1712                           intcon2	equ	0xFF1
  1713                           intcon3	equ	0xFF0
  1714                           indf0	equ	0xFEF
  1715                           postinc0	equ	0xFEE
  1716                           fsr0h	equ	0xFEA
  1717                           fsr0l	equ	0xFE9
  1718                           wreg	equ	0xFE8
  1719                           postdec1	equ	0xFE5
  1720                           fsr1l	equ	0xFE1
  1721                           indf2	equ	0xFDF
  1722                           fsr2h	equ	0xFDA
  1723                           fsr2l	equ	0xFD9
  1724                           status	equ	0xFD8
  1725                           
  1726 ;; *************** function _EscreveCaractereLCD *****************
  1727 ;; Defined at:
  1728 ;;		line 348 in file "displayLCD.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  data            1    wreg     unsigned char 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  data            1    2[BANK0 ] unsigned char 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      void 
  1735 ;; Registers used:
  1736 ;;		wreg, status,2, status,0, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1742 ;;      Params:         0       0       0       0       0       0       0       0       0
  1743 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1745 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1746 ;;Total ram usage:        1 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    2
  1749 ;; This function calls:
  1750 ;;		_Delay
  1751 ;; This function is called by:
  1752 ;;		_EscreveFraseRamLCD
  1753 ;;		_EscreveFloatLCD
  1754 ;;		_EscreveFraseLCD
  1755 ;;		_CriaCaractereLCD
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text9
  1760  000B76                     __ptext9:
  1761                           	opt stack 0
  1762  000B76                     _EscreveCaractereLCD:
  1763                           	opt stack 26
  1764                           
  1765                           ;incstack = 0
  1766                           ;EscreveCaractereLCD@data stored from wreg
  1767  000B76  0100               	movlb	0	; () banked
  1768  000B78  6F62               	movwf	EscreveCaractereLCD@data& (0+255),b
  1769                           
  1770                           ;displayLCD.c: 351: PORTDbits.RD2 = 0;
  1771  000B7A  9483               	bcf	3971,2,c	;volatile
  1772                           
  1773                           ;displayLCD.c: 352: PORTDbits.RD1 = 1;
  1774  000B7C  8283               	bsf	3971,1,c	;volatile
  1775                           
  1776                           ;displayLCD.c: 353: PORTDbits.RD0 = 0;
  1777  000B7E  9083               	bcf	3971,0,c	;volatile
  1778                           
  1779                           ;displayLCD.c: 356: if(data&0b00010000){PORTDbits.RD4=1;}
  1780  000B80  0100               	movlb	0	; () banked
  1781  000B82  A962               	btfss	EscreveCaractereLCD@data& (0+255),4,b
  1782  000B84  D002               	goto	l80
  1783                           
  1784                           ; BSR set to: 0
  1785  000B86  8883               	bsf	3971,4,c	;volatile
  1786  000B88  D001               	goto	l1925
  1787  000B8A                     l80:
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;displayLCD.c: 357: else {PORTDbits.RD4=0;}
  1791  000B8A  9883               	bcf	3971,4,c	;volatile
  1792  000B8C                     l1925:
  1793                           
  1794                           ; BSR set to: 0
  1795                           ;displayLCD.c: 358: if(data&0b00100000){PORTDbits.RD5=1;}
  1796  000B8C  0100               	movlb	0	; () banked
  1797  000B8E  AB62               	btfss	EscreveCaractereLCD@data& (0+255),5,b
  1798  000B90  D002               	goto	l82
  1799                           
  1800                           ; BSR set to: 0
  1801  000B92  8A83               	bsf	3971,5,c	;volatile
  1802  000B94  D001               	goto	l1929
  1803  000B96                     l82:
  1804                           
  1805                           ; BSR set to: 0
  1806                           ;displayLCD.c: 359: else {PORTDbits.RD5=0;}
  1807  000B96  9A83               	bcf	3971,5,c	;volatile
  1808  000B98                     l1929:
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;displayLCD.c: 360: if(data&0b01000000){PORTDbits.RD6=1;}
  1812  000B98  0100               	movlb	0	; () banked
  1813  000B9A  AD62               	btfss	EscreveCaractereLCD@data& (0+255),6,b
  1814  000B9C  D002               	goto	l84
  1815                           
  1816                           ; BSR set to: 0
  1817  000B9E  8C83               	bsf	3971,6,c	;volatile
  1818  000BA0  D001               	goto	l1933
  1819  000BA2                     l84:
  1820                           
  1821                           ; BSR set to: 0
  1822                           ;displayLCD.c: 361: else {PORTDbits.RD6=0;}
  1823  000BA2  9C83               	bcf	3971,6,c	;volatile
  1824  000BA4                     l1933:
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;displayLCD.c: 362: if(data&0b10000000){PORTDbits.RD7=1;}
  1828  000BA4  0100               	movlb	0	; () banked
  1829  000BA6  AF62               	btfss	EscreveCaractereLCD@data& (0+255),7,b
  1830  000BA8  D002               	goto	l86
  1831                           
  1832                           ; BSR set to: 0
  1833  000BAA  8E83               	bsf	3971,7,c	;volatile
  1834  000BAC  D001               	goto	l87
  1835  000BAE                     l86:
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;displayLCD.c: 363: else {PORTDbits.RD7=0;}
  1839  000BAE  9E83               	bcf	3971,7,c	;volatile
  1840  000BB0                     l87:
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;displayLCD.c: 366: PORTDbits.RD0 = 1;
  1844  000BB0  8083               	bsf	3971,0,c	;volatile
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;displayLCD.c: 367: Delay();
  1848  000BB2  EC12  F007         	call	_Delay	;wreg free
  1849                           
  1850                           ;displayLCD.c: 368: PORTDbits.RD0 = 0;
  1851  000BB6  9083               	bcf	3971,0,c	;volatile
  1852                           
  1853                           ;displayLCD.c: 369: Delay();
  1854  000BB8  EC12  F007         	call	_Delay	;wreg free
  1855                           
  1856                           ;displayLCD.c: 373: if(data&0b00000001){PORTDbits.RD4=1;}
  1857  000BBC  0100               	movlb	0	; () banked
  1858  000BBE  A162               	btfss	EscreveCaractereLCD@data& (0+255),0,b
  1859  000BC0  D002               	goto	l88
  1860                           
  1861                           ; BSR set to: 0
  1862  000BC2  8883               	bsf	3971,4,c	;volatile
  1863  000BC4  D001               	goto	l89
  1864  000BC6                     l88:
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;displayLCD.c: 374: else {PORTDbits.RD4=0;}
  1868  000BC6  9883               	bcf	3971,4,c	;volatile
  1869  000BC8                     l89:
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;displayLCD.c: 375: if(data&0b00000010){PORTDbits.RD5=1;}
  1873  000BC8  0100               	movlb	0	; () banked
  1874  000BCA  A362               	btfss	EscreveCaractereLCD@data& (0+255),1,b
  1875  000BCC  D002               	goto	l90
  1876                           
  1877                           ; BSR set to: 0
  1878  000BCE  8A83               	bsf	3971,5,c	;volatile
  1879  000BD0  D001               	goto	l91
  1880  000BD2                     l90:
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;displayLCD.c: 376: else {PORTDbits.RD5=0;}
  1884  000BD2  9A83               	bcf	3971,5,c	;volatile
  1885  000BD4                     l91:
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;displayLCD.c: 377: if(data&0b00000100){PORTDbits.RD6=1;}
  1889  000BD4  0100               	movlb	0	; () banked
  1890  000BD6  A562               	btfss	EscreveCaractereLCD@data& (0+255),2,b
  1891  000BD8  D002               	goto	l92
  1892                           
  1893                           ; BSR set to: 0
  1894  000BDA  8C83               	bsf	3971,6,c	;volatile
  1895  000BDC  D001               	goto	l93
  1896  000BDE                     l92:
  1897                           
  1898                           ; BSR set to: 0
  1899                           ;displayLCD.c: 378: else {PORTDbits.RD6=0;}
  1900  000BDE  9C83               	bcf	3971,6,c	;volatile
  1901  000BE0                     l93:
  1902                           
  1903                           ; BSR set to: 0
  1904                           ;displayLCD.c: 379: if(data&0b00001000){PORTDbits.RD7=1;}
  1905  000BE0  0100               	movlb	0	; () banked
  1906  000BE2  A762               	btfss	EscreveCaractereLCD@data& (0+255),3,b
  1907  000BE4  D002               	goto	l94
  1908                           
  1909                           ; BSR set to: 0
  1910  000BE6  8E83               	bsf	3971,7,c	;volatile
  1911  000BE8  D001               	goto	l95
  1912  000BEA                     l94:
  1913                           
  1914                           ; BSR set to: 0
  1915                           ;displayLCD.c: 380: else {PORTDbits.RD7=0;}
  1916  000BEA  9E83               	bcf	3971,7,c	;volatile
  1917  000BEC                     l95:
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;displayLCD.c: 383: PORTDbits.RD0 = 1;
  1921  000BEC  8083               	bsf	3971,0,c	;volatile
  1922                           
  1923                           ; BSR set to: 0
  1924                           ;displayLCD.c: 384: Delay();
  1925  000BEE  EC12  F007         	call	_Delay	;wreg free
  1926                           
  1927                           ;displayLCD.c: 385: PORTDbits.RD0 = 0;
  1928  000BF2  9083               	bcf	3971,0,c	;volatile
  1929                           
  1930                           ;displayLCD.c: 386: Delay();
  1931  000BF4  EC12  F007         	call	_Delay	;wreg free
  1932  000BF8  0012               	return		;funcret
  1933  000BFA                     __end_of_EscreveCaractereLCD:
  1934                           	opt stack 0
  1935                           tblptru	equ	0xFF8
  1936                           tblptrh	equ	0xFF7
  1937                           tblptrl	equ	0xFF6
  1938                           tablat	equ	0xFF5
  1939                           prodh	equ	0xFF4
  1940                           prodl	equ	0xFF3
  1941                           intcon	equ	0xFF2
  1942                           intcon2	equ	0xFF1
  1943                           intcon3	equ	0xFF0
  1944                           indf0	equ	0xFEF
  1945                           postinc0	equ	0xFEE
  1946                           fsr0h	equ	0xFEA
  1947                           fsr0l	equ	0xFE9
  1948                           wreg	equ	0xFE8
  1949                           postdec1	equ	0xFE5
  1950                           fsr1l	equ	0xFE1
  1951                           indf2	equ	0xFDF
  1952                           fsr2h	equ	0xFDA
  1953                           fsr2l	equ	0xFD9
  1954                           status	equ	0xFD8
  1955                           
  1956 ;; *************** function _Init_EEPROM *****************
  1957 ;; Defined at:
  1958 ;;		line 5 in file "EEPROM.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;		None
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;		None
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  1    wreg      void 
  1965 ;; Registers used:
  1966 ;;		wreg, status,2
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1972 ;;      Params:         0       0       0       0       0       0       0       0       0
  1973 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1974 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1975 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1976 ;;Total ram usage:        0 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; Hardware stack levels required when called:    1
  1979 ;; This function calls:
  1980 ;;		Nothing
  1981 ;; This function is called by:
  1982 ;;		_main
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           	psect	text10
  1987  000EB6                     __ptext10:
  1988                           	opt stack 0
  1989  000EB6                     _Init_EEPROM:
  1990                           	opt stack 29
  1991                           
  1992                           ;EEPROM.c: 7: EECON1 = 0b00000100;
  1993                           
  1994                           ;incstack = 0
  1995  000EB6  0E04               	movlw	4
  1996  000EB8  6EA6               	movwf	4006,c	;volatile
  1997  000EBA  0012               	return		;funcret
  1998  000EBC                     __end_of_Init_EEPROM:
  1999                           	opt stack 0
  2000                           tblptru	equ	0xFF8
  2001                           tblptrh	equ	0xFF7
  2002                           tblptrl	equ	0xFF6
  2003                           tablat	equ	0xFF5
  2004                           prodh	equ	0xFF4
  2005                           prodl	equ	0xFF3
  2006                           intcon	equ	0xFF2
  2007                           intcon2	equ	0xFF1
  2008                           intcon3	equ	0xFF0
  2009                           indf0	equ	0xFEF
  2010                           postinc0	equ	0xFEE
  2011                           fsr0h	equ	0xFEA
  2012                           fsr0l	equ	0xFE9
  2013                           wreg	equ	0xFE8
  2014                           postdec1	equ	0xFE5
  2015                           fsr1l	equ	0xFE1
  2016                           indf2	equ	0xFDF
  2017                           fsr2h	equ	0xFDA
  2018                           fsr2l	equ	0xFD9
  2019                           status	equ	0xFD8
  2020                           
  2021 ;; *************** function _ConfiguraLCD *****************
  2022 ;; Defined at:
  2023 ;;		line 87 in file "displayLCD.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;		None
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;		None
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      void 
  2030 ;; Registers used:
  2031 ;;		wreg, status,2, status,0, cstack
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2037 ;;      Params:         0       0       0       0       0       0       0       0       0
  2038 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2039 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2040 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2041 ;;Total ram usage:        1 bytes
  2042 ;; Hardware stack levels used:    1
  2043 ;; Hardware stack levels required when called:    3
  2044 ;; This function calls:
  2045 ;;		_Delay
  2046 ;;		_EscreveComandoLCD
  2047 ;; This function is called by:
  2048 ;;		_main
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text11
  2053  000A46                     __ptext11:
  2054                           	opt stack 0
  2055  000A46                     _ConfiguraLCD:
  2056                           	opt stack 27
  2057                           
  2058                           ;displayLCD.c: 90: TRISDbits.RD2 = 0;
  2059                           
  2060                           ;incstack = 0
  2061  000A46  9495               	bcf	3989,2,c	;volatile
  2062                           
  2063                           ;displayLCD.c: 91: TRISDbits.RD1 = 0;
  2064  000A48  9295               	bcf	3989,1,c	;volatile
  2065                           
  2066                           ;displayLCD.c: 92: TRISDbits.RD0 = 0;
  2067  000A4A  9095               	bcf	3989,0,c	;volatile
  2068                           
  2069                           ;displayLCD.c: 95: TRISDbits.RD4=0;
  2070  000A4C  9895               	bcf	3989,4,c	;volatile
  2071                           
  2072                           ;displayLCD.c: 96: TRISDbits.RD5=0;
  2073  000A4E  9A95               	bcf	3989,5,c	;volatile
  2074                           
  2075                           ;displayLCD.c: 97: TRISDbits.RD6=0;
  2076  000A50  9C95               	bcf	3989,6,c	;volatile
  2077                           
  2078                           ;displayLCD.c: 98: TRISDbits.RD7=0;
  2079  000A52  9E95               	bcf	3989,7,c	;volatile
  2080                           
  2081                           ;displayLCD.c: 105: PORTDbits.RD2 = 0;
  2082  000A54  9483               	bcf	3971,2,c	;volatile
  2083                           
  2084                           ;displayLCD.c: 106: PORTDbits.RD1 = 0;
  2085  000A56  9283               	bcf	3971,1,c	;volatile
  2086                           
  2087                           ;displayLCD.c: 107: PORTDbits.RD0 = 0;
  2088  000A58  9083               	bcf	3971,0,c	;volatile
  2089                           
  2090                           ;displayLCD.c: 111: PORTDbits.RD7=0;
  2091  000A5A  9E83               	bcf	3971,7,c	;volatile
  2092                           
  2093                           ;displayLCD.c: 112: PORTDbits.RD6=0;
  2094  000A5C  9C83               	bcf	3971,6,c	;volatile
  2095                           
  2096                           ;displayLCD.c: 113: PORTDbits.RD5=1;
  2097  000A5E  8A83               	bsf	3971,5,c	;volatile
  2098                           
  2099                           ;displayLCD.c: 114: PORTDbits.RD4=1;
  2100  000A60  8883               	bsf	3971,4,c	;volatile
  2101                           
  2102                           ;displayLCD.c: 119: _delay((unsigned long)((15)*(48000000/4000.0)));
  2103  000A62  0EEA               	movlw	234
  2104  000A64  0100               	movlb	0	; () banked
  2105  000A66  6F63               	movwf	??_ConfiguraLCD& (0+255),b
  2106  000A68  0EC3               	movlw	195
  2107  000A6A                     u1797:
  2108  000A6A  2EE8               	decfsz	wreg,f,c
  2109  000A6C  D7FE               	bra	u1797
  2110  000A6E  2F63               	decfsz	??_ConfiguraLCD& (0+255),f,b
  2111  000A70  D7FC               	bra	u1797
  2112                           
  2113                           ;displayLCD.c: 123: PORTDbits.RD0 = 1;
  2114  000A72  8083               	bsf	3971,0,c	;volatile
  2115                           
  2116                           ;displayLCD.c: 124: Delay();
  2117  000A74  EC12  F007         	call	_Delay	;wreg free
  2118                           
  2119                           ;displayLCD.c: 125: PORTDbits.RD0 = 0;
  2120  000A78  9083               	bcf	3971,0,c	;volatile
  2121                           
  2122                           ;displayLCD.c: 126: Delay();
  2123  000A7A  EC12  F007         	call	_Delay	;wreg free
  2124                           
  2125                           ;displayLCD.c: 131: _delay((unsigned long)((5)*(48000000/4000.0)));
  2126  000A7E  0E4E               	movlw	78
  2127  000A80  0100               	movlb	0	; () banked
  2128  000A82  6F63               	movwf	??_ConfiguraLCD& (0+255),b
  2129  000A84  0EEB               	movlw	235
  2130  000A86                     u1807:
  2131  000A86  2EE8               	decfsz	wreg,f,c
  2132  000A88  D7FE               	bra	u1807
  2133  000A8A  2F63               	decfsz	??_ConfiguraLCD& (0+255),f,b
  2134  000A8C  D7FC               	bra	u1807
  2135                           
  2136                           ;displayLCD.c: 134: PORTDbits.RD0 = 1;
  2137  000A8E  8083               	bsf	3971,0,c	;volatile
  2138                           
  2139                           ;displayLCD.c: 135: Delay();
  2140  000A90  EC12  F007         	call	_Delay	;wreg free
  2141                           
  2142                           ;displayLCD.c: 136: PORTDbits.RD0 = 0;
  2143  000A94  9083               	bcf	3971,0,c	;volatile
  2144                           
  2145                           ;displayLCD.c: 137: Delay();
  2146  000A96  EC12  F007         	call	_Delay	;wreg free
  2147                           
  2148                           ;displayLCD.c: 142: _delay((unsigned long)((5)*(48000000/4000.0)));
  2149  000A9A  0E4E               	movlw	78
  2150  000A9C  0100               	movlb	0	; () banked
  2151  000A9E  6F63               	movwf	??_ConfiguraLCD& (0+255),b
  2152  000AA0  0EEB               	movlw	235
  2153  000AA2                     u1817:
  2154  000AA2  2EE8               	decfsz	wreg,f,c
  2155  000AA4  D7FE               	bra	u1817
  2156  000AA6  2F63               	decfsz	??_ConfiguraLCD& (0+255),f,b
  2157  000AA8  D7FC               	bra	u1817
  2158                           
  2159                           ;displayLCD.c: 145: PORTDbits.RD0 = 1;
  2160  000AAA  8083               	bsf	3971,0,c	;volatile
  2161                           
  2162                           ;displayLCD.c: 146: Delay();
  2163  000AAC  EC12  F007         	call	_Delay	;wreg free
  2164                           
  2165                           ;displayLCD.c: 147: PORTDbits.RD0 = 0;
  2166  000AB0  9083               	bcf	3971,0,c	;volatile
  2167                           
  2168                           ;displayLCD.c: 148: Delay();
  2169  000AB2  EC12  F007         	call	_Delay	;wreg free
  2170                           
  2171                           ;displayLCD.c: 151: PORTDbits.RD7=0;
  2172  000AB6  9E83               	bcf	3971,7,c	;volatile
  2173                           
  2174                           ;displayLCD.c: 152: PORTDbits.RD6=0;
  2175  000AB8  9C83               	bcf	3971,6,c	;volatile
  2176                           
  2177                           ;displayLCD.c: 153: PORTDbits.RD5=1;
  2178  000ABA  8A83               	bsf	3971,5,c	;volatile
  2179                           
  2180                           ;displayLCD.c: 154: PORTDbits.RD4=0;
  2181  000ABC  9883               	bcf	3971,4,c	;volatile
  2182                           
  2183                           ;displayLCD.c: 158: PORTDbits.RD0 = 1;
  2184  000ABE  8083               	bsf	3971,0,c	;volatile
  2185                           
  2186                           ;displayLCD.c: 159: Delay();
  2187  000AC0  EC12  F007         	call	_Delay	;wreg free
  2188                           
  2189                           ;displayLCD.c: 160: PORTDbits.RD0 = 0;
  2190  000AC4  9083               	bcf	3971,0,c	;volatile
  2191                           
  2192                           ;displayLCD.c: 161: Delay();
  2193  000AC6  EC12  F007         	call	_Delay	;wreg free
  2194                           
  2195                           ;displayLCD.c: 165: EscreveComandoLCD(0b00101000);
  2196  000ACA  0E28               	movlw	40
  2197  000ACC  ECD1  F004         	call	_EscreveComandoLCD
  2198                           
  2199                           ;displayLCD.c: 166: EscreveComandoLCD(0b00000110);
  2200  000AD0  0E06               	movlw	6
  2201  000AD2  ECD1  F004         	call	_EscreveComandoLCD
  2202                           
  2203                           ;displayLCD.c: 167: EscreveComandoLCD(0b00001110);
  2204  000AD6  0E0E               	movlw	14
  2205  000AD8  ECD1  F004         	call	_EscreveComandoLCD
  2206                           
  2207                           ;displayLCD.c: 168: EscreveComandoLCD(0b00000001);
  2208  000ADC  0E01               	movlw	1
  2209  000ADE  ECD1  F004         	call	_EscreveComandoLCD
  2210  000AE2  0012               	return		;funcret
  2211  000AE4                     __end_of_ConfiguraLCD:
  2212                           	opt stack 0
  2213                           tblptru	equ	0xFF8
  2214                           tblptrh	equ	0xFF7
  2215                           tblptrl	equ	0xFF6
  2216                           tablat	equ	0xFF5
  2217                           prodh	equ	0xFF4
  2218                           prodl	equ	0xFF3
  2219                           intcon	equ	0xFF2
  2220                           intcon2	equ	0xFF1
  2221                           intcon3	equ	0xFF0
  2222                           indf0	equ	0xFEF
  2223                           postinc0	equ	0xFEE
  2224                           fsr0h	equ	0xFEA
  2225                           fsr0l	equ	0xFE9
  2226                           wreg	equ	0xFE8
  2227                           postdec1	equ	0xFE5
  2228                           fsr1l	equ	0xFE1
  2229                           indf2	equ	0xFDF
  2230                           fsr2h	equ	0xFDA
  2231                           fsr2l	equ	0xFD9
  2232                           status	equ	0xFD8
  2233                           
  2234 ;; *************** function _EscreveComandoLCD *****************
  2235 ;; Defined at:
  2236 ;;		line 179 in file "displayLCD.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  cmd             1    wreg     unsigned char 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  cmd             1    2[BANK0 ] unsigned char 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      void 
  2243 ;; Registers used:
  2244 ;;		wreg, status,2, status,0, cstack
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2250 ;;      Params:         0       0       0       0       0       0       0       0       0
  2251 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2252 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2253 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2254 ;;Total ram usage:        1 bytes
  2255 ;; Hardware stack levels used:    1
  2256 ;; Hardware stack levels required when called:    2
  2257 ;; This function calls:
  2258 ;;		_Delay
  2259 ;; This function is called by:
  2260 ;;		_ConfiguraLCD
  2261 ;;		_CriaCaractereLCD
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           	psect	text12
  2266  0009A2                     __ptext12:
  2267                           	opt stack 0
  2268  0009A2                     _EscreveComandoLCD:
  2269                           	opt stack 27
  2270                           
  2271                           ;incstack = 0
  2272                           ;EscreveComandoLCD@cmd stored from wreg
  2273  0009A2  0100               	movlb	0	; () banked
  2274  0009A4  6F62               	movwf	EscreveComandoLCD@cmd& (0+255),b
  2275                           
  2276                           ;displayLCD.c: 182: PORTDbits.RD2 = 0;
  2277  0009A6  9483               	bcf	3971,2,c	;volatile
  2278                           
  2279                           ;displayLCD.c: 183: PORTDbits.RD1 = 0;
  2280  0009A8  9283               	bcf	3971,1,c	;volatile
  2281                           
  2282                           ;displayLCD.c: 184: PORTDbits.RD0 = 0;
  2283  0009AA  9083               	bcf	3971,0,c	;volatile
  2284                           
  2285                           ;displayLCD.c: 187: if(cmd&0b00010000){PORTDbits.RD4=1;}
  2286  0009AC  0100               	movlb	0	; () banked
  2287  0009AE  A962               	btfss	EscreveComandoLCD@cmd& (0+255),4,b
  2288  0009B0  D002               	goto	l29
  2289                           
  2290                           ; BSR set to: 0
  2291  0009B2  8883               	bsf	3971,4,c	;volatile
  2292  0009B4  D001               	goto	l1961
  2293  0009B6                     l29:
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;displayLCD.c: 188: else {PORTDbits.RD4=0;}
  2297  0009B6  9883               	bcf	3971,4,c	;volatile
  2298  0009B8                     l1961:
  2299                           
  2300                           ; BSR set to: 0
  2301                           ;displayLCD.c: 189: if(cmd&0b00100000){PORTDbits.RD5=1;}
  2302  0009B8  0100               	movlb	0	; () banked
  2303  0009BA  AB62               	btfss	EscreveComandoLCD@cmd& (0+255),5,b
  2304  0009BC  D002               	goto	l31
  2305                           
  2306                           ; BSR set to: 0
  2307  0009BE  8A83               	bsf	3971,5,c	;volatile
  2308  0009C0  D001               	goto	l1965
  2309  0009C2                     l31:
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;displayLCD.c: 190: else {PORTDbits.RD5=0;}
  2313  0009C2  9A83               	bcf	3971,5,c	;volatile
  2314  0009C4                     l1965:
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;displayLCD.c: 191: if(cmd&0b01000000){PORTDbits.RD6=1;}
  2318  0009C4  0100               	movlb	0	; () banked
  2319  0009C6  AD62               	btfss	EscreveComandoLCD@cmd& (0+255),6,b
  2320  0009C8  D002               	goto	l33
  2321                           
  2322                           ; BSR set to: 0
  2323  0009CA  8C83               	bsf	3971,6,c	;volatile
  2324  0009CC  D001               	goto	l1969
  2325  0009CE                     l33:
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;displayLCD.c: 192: else {PORTDbits.RD6=0;}
  2329  0009CE  9C83               	bcf	3971,6,c	;volatile
  2330  0009D0                     l1969:
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;displayLCD.c: 193: if(cmd&0b10000000){PORTDbits.RD7=1;}
  2334  0009D0  0100               	movlb	0	; () banked
  2335  0009D2  AF62               	btfss	EscreveComandoLCD@cmd& (0+255),7,b
  2336  0009D4  D002               	goto	l35
  2337                           
  2338                           ; BSR set to: 0
  2339  0009D6  8E83               	bsf	3971,7,c	;volatile
  2340  0009D8  D001               	goto	l36
  2341  0009DA                     l35:
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;displayLCD.c: 194: else {PORTDbits.RD7=0;}
  2345  0009DA  9E83               	bcf	3971,7,c	;volatile
  2346  0009DC                     l36:
  2347                           
  2348                           ; BSR set to: 0
  2349                           ;displayLCD.c: 197: PORTDbits.RD0 = 1;
  2350  0009DC  8083               	bsf	3971,0,c	;volatile
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;displayLCD.c: 198: Delay();
  2354  0009DE  EC12  F007         	call	_Delay	;wreg free
  2355                           
  2356                           ;displayLCD.c: 199: PORTDbits.RD0 = 0;
  2357  0009E2  9083               	bcf	3971,0,c	;volatile
  2358                           
  2359                           ;displayLCD.c: 200: Delay();
  2360  0009E4  EC12  F007         	call	_Delay	;wreg free
  2361                           
  2362                           ;displayLCD.c: 203: if(cmd&0b00000001){PORTDbits.RD4=1;}
  2363  0009E8  0100               	movlb	0	; () banked
  2364  0009EA  A162               	btfss	EscreveComandoLCD@cmd& (0+255),0,b
  2365  0009EC  D002               	goto	l37
  2366                           
  2367                           ; BSR set to: 0
  2368  0009EE  8883               	bsf	3971,4,c	;volatile
  2369  0009F0  D001               	goto	l38
  2370  0009F2                     l37:
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;displayLCD.c: 204: else {PORTDbits.RD4=0;}
  2374  0009F2  9883               	bcf	3971,4,c	;volatile
  2375  0009F4                     l38:
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;displayLCD.c: 205: if(cmd&0b00000010){PORTDbits.RD5=1;}
  2379  0009F4  0100               	movlb	0	; () banked
  2380  0009F6  A362               	btfss	EscreveComandoLCD@cmd& (0+255),1,b
  2381  0009F8  D002               	goto	l39
  2382                           
  2383                           ; BSR set to: 0
  2384  0009FA  8A83               	bsf	3971,5,c	;volatile
  2385  0009FC  D001               	goto	l40
  2386  0009FE                     l39:
  2387                           
  2388                           ; BSR set to: 0
  2389                           ;displayLCD.c: 206: else {PORTDbits.RD5=0;}
  2390  0009FE  9A83               	bcf	3971,5,c	;volatile
  2391  000A00                     l40:
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;displayLCD.c: 207: if(cmd&0b00000100){PORTDbits.RD6=1;}
  2395  000A00  0100               	movlb	0	; () banked
  2396  000A02  A562               	btfss	EscreveComandoLCD@cmd& (0+255),2,b
  2397  000A04  D002               	goto	l41
  2398                           
  2399                           ; BSR set to: 0
  2400  000A06  8C83               	bsf	3971,6,c	;volatile
  2401  000A08  D001               	goto	l42
  2402  000A0A                     l41:
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;displayLCD.c: 208: else {PORTDbits.RD6=0;}
  2406  000A0A  9C83               	bcf	3971,6,c	;volatile
  2407  000A0C                     l42:
  2408                           
  2409                           ; BSR set to: 0
  2410                           ;displayLCD.c: 209: if(cmd&0b00001000){PORTDbits.RD7=1;}
  2411  000A0C  0100               	movlb	0	; () banked
  2412  000A0E  A762               	btfss	EscreveComandoLCD@cmd& (0+255),3,b
  2413  000A10  D002               	goto	l43
  2414                           
  2415                           ; BSR set to: 0
  2416  000A12  8E83               	bsf	3971,7,c	;volatile
  2417  000A14  D001               	goto	l44
  2418  000A16                     l43:
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;displayLCD.c: 210: else {PORTDbits.RD7=0;}
  2422  000A16  9E83               	bcf	3971,7,c	;volatile
  2423  000A18                     l44:
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;displayLCD.c: 213: PORTDbits.RD0 = 1;
  2427  000A18  8083               	bsf	3971,0,c	;volatile
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;displayLCD.c: 214: Delay();
  2431  000A1A  EC12  F007         	call	_Delay	;wreg free
  2432                           
  2433                           ;displayLCD.c: 215: PORTDbits.RD0 = 0;
  2434  000A1E  9083               	bcf	3971,0,c	;volatile
  2435                           
  2436                           ;displayLCD.c: 216: Delay();
  2437  000A20  EC12  F007         	call	_Delay	;wreg free
  2438                           
  2439                           ;displayLCD.c: 221: if (cmd==0x01 || cmd==0x02 || cmd==0x03)
  2440  000A24  0100               	movlb	0	; () banked
  2441  000A26  0562               	decf	EscreveComandoLCD@cmd& (0+255),w,b
  2442  000A28  B4D8               	btfsc	status,2,c
  2443  000A2A  D00A               	goto	l1997
  2444                           
  2445                           ; BSR set to: 0
  2446  000A2C  0E02               	movlw	2
  2447  000A2E  0100               	movlb	0	; () banked
  2448  000A30  1962               	xorwf	EscreveComandoLCD@cmd& (0+255),w,b
  2449  000A32  B4D8               	btfsc	status,2,c
  2450  000A34  D005               	goto	l1997
  2451                           
  2452                           ; BSR set to: 0
  2453  000A36  0E03               	movlw	3
  2454  000A38  0100               	movlb	0	; () banked
  2455  000A3A  1962               	xorwf	EscreveComandoLCD@cmd& (0+255),w,b
  2456  000A3C  A4D8               	btfss	status,2,c
  2457  000A3E  0012               	return	
  2458  000A40                     l1997:
  2459                           
  2460                           ; BSR set to: 0
  2461                           ;displayLCD.c: 222: { Delay(); }
  2462  000A40  EC12  F007         	call	_Delay	;wreg free
  2463  000A44  0012               	return	
  2464  000A46                     __end_of_EscreveComandoLCD:
  2465                           	opt stack 0
  2466                           tblptru	equ	0xFF8
  2467                           tblptrh	equ	0xFF7
  2468                           tblptrl	equ	0xFF6
  2469                           tablat	equ	0xFF5
  2470                           prodh	equ	0xFF4
  2471                           prodl	equ	0xFF3
  2472                           intcon	equ	0xFF2
  2473                           intcon2	equ	0xFF1
  2474                           intcon3	equ	0xFF0
  2475                           indf0	equ	0xFEF
  2476                           postinc0	equ	0xFEE
  2477                           fsr0h	equ	0xFEA
  2478                           fsr0l	equ	0xFE9
  2479                           wreg	equ	0xFE8
  2480                           postdec1	equ	0xFE5
  2481                           fsr1l	equ	0xFE1
  2482                           indf2	equ	0xFDF
  2483                           fsr2h	equ	0xFDA
  2484                           fsr2l	equ	0xFD9
  2485                           status	equ	0xFD8
  2486                           
  2487 ;; *************** function _Delay *****************
  2488 ;; Defined at:
  2489 ;;		line 61 in file "displayLCD.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;		None
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;  Cnt2            1    1[BANK0 ] unsigned char 
  2494 ;;  Cnt1            1    0[BANK0 ] unsigned char 
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      void 
  2497 ;; Registers used:
  2498 ;;		wreg, status,2, status,0
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2504 ;;      Params:         0       0       0       0       0       0       0       0       0
  2505 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2506 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2507 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2508 ;;Total ram usage:        2 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; Hardware stack levels required when called:    1
  2511 ;; This function calls:
  2512 ;;		Nothing
  2513 ;; This function is called by:
  2514 ;;		_ConfiguraLCD
  2515 ;;		_EscreveComandoLCD
  2516 ;;		_EnderecoCursor
  2517 ;;		_EscreveCaractereLCD
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text13
  2522  000E24                     __ptext13:
  2523                           	opt stack 0
  2524  000E24                     _Delay:
  2525                           	opt stack 26
  2526                           
  2527                           ;displayLCD.c: 63: unsigned char Cnt1, Cnt2;
  2528                           ;displayLCD.c: 65: for(Cnt1 = 0; Cnt1<100; Cnt1++)
  2529                           
  2530                           ;incstack = 0
  2531  000E24  0E00               	movlw	0
  2532  000E26  0100               	movlb	0	; () banked
  2533  000E28  6F60               	movwf	Delay@Cnt1& (0+255),b
  2534  000E2A                     l1869:
  2535                           
  2536                           ; BSR set to: 0
  2537  000E2A  0E63               	movlw	99
  2538  000E2C  0100               	movlb	0	; () banked
  2539  000E2E  6560               	cpfsgt	Delay@Cnt1& (0+255),b
  2540  000E30  D001               	goto	l19
  2541  000E32  0012               	return	
  2542  000E34                     l19:
  2543                           
  2544                           ; BSR set to: 0
  2545                           ;displayLCD.c: 66: {
  2546                           ;displayLCD.c: 67: __nop();
  2547  000E34  F000               	nop	
  2548                           
  2549                           ;displayLCD.c: 68: for(Cnt2 = 0; Cnt2<50; Cnt2++)
  2550  000E36  0E00               	movlw	0
  2551  000E38  0100               	movlb	0	; () banked
  2552  000E3A  6F61               	movwf	Delay@Cnt2& (0+255),b
  2553  000E3C                     l1875:
  2554                           
  2555                           ; BSR set to: 0
  2556  000E3C  0E31               	movlw	49
  2557  000E3E  0100               	movlb	0	; () banked
  2558  000E40  6561               	cpfsgt	Delay@Cnt2& (0+255),b
  2559  000E42  D001               	goto	l21
  2560  000E44  D004               	goto	l1883
  2561  000E46                     l21:
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;displayLCD.c: 69: {
  2565                           ;displayLCD.c: 70: __nop();
  2566  000E46  F000               	nop	
  2567  000E48  0100               	movlb	0	; () banked
  2568  000E4A  2B61               	incf	Delay@Cnt2& (0+255),f,b
  2569  000E4C  D7F7               	goto	l1875
  2570  000E4E                     l1883:
  2571                           
  2572                           ; BSR set to: 0
  2573  000E4E  0100               	movlb	0	; () banked
  2574  000E50  2B60               	incf	Delay@Cnt1& (0+255),f,b
  2575  000E52  D7EB               	goto	l1869
  2576  000E54                     __end_of_Delay:
  2577                           	opt stack 0
  2578                           tblptru	equ	0xFF8
  2579                           tblptrh	equ	0xFF7
  2580                           tblptrl	equ	0xFF6
  2581                           tablat	equ	0xFF5
  2582                           prodh	equ	0xFF4
  2583                           prodl	equ	0xFF3
  2584                           intcon	equ	0xFF2
  2585                           intcon2	equ	0xFF1
  2586                           intcon3	equ	0xFF0
  2587                           indf0	equ	0xFEF
  2588                           postinc0	equ	0xFEE
  2589                           fsr0h	equ	0xFEA
  2590                           fsr0l	equ	0xFE9
  2591                           wreg	equ	0xFE8
  2592                           postdec1	equ	0xFE5
  2593                           fsr1l	equ	0xFE1
  2594                           indf2	equ	0xFDF
  2595                           fsr2h	equ	0xFDA
  2596                           fsr2l	equ	0xFD9
  2597                           status	equ	0xFD8
  2598                           
  2599 ;; *************** function _isr *****************
  2600 ;; Defined at:
  2601 ;;		line 19 in file "main.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;		None
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;		None
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      void 
  2608 ;; Registers used:
  2609 ;;		wreg, status,2, status,0
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2615 ;;      Params:         0       0       0       0       0       0       0       0       0
  2616 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2617 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2618 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2619 ;;Total ram usage:       14 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; This function calls:
  2622 ;;		Nothing
  2623 ;; This function is called by:
  2624 ;;		Interrupt level 2
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	intcode
  2629  000008                     __pintcode:
  2630                           	opt stack 0
  2631  000008                     _isr:
  2632                           	opt stack 26
  2633                           
  2634                           ; BSR set to: 0
  2635                           ;incstack = 0
  2636  000008  8254               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2637  00000A  ED71  F004         	call	int_func,f	;refresh shadow registers
  2638                           tblptru	equ	0xFF8
  2639                           tblptrh	equ	0xFF7
  2640                           tblptrl	equ	0xFF6
  2641                           tablat	equ	0xFF5
  2642                           prodh	equ	0xFF4
  2643                           prodl	equ	0xFF3
  2644                           intcon	equ	0xFF2
  2645                           intcon2	equ	0xFF1
  2646                           intcon3	equ	0xFF0
  2647                           indf0	equ	0xFEF
  2648                           postinc0	equ	0xFEE
  2649                           fsr0h	equ	0xFEA
  2650                           fsr0l	equ	0xFE9
  2651                           wreg	equ	0xFE8
  2652                           postdec1	equ	0xFE5
  2653                           fsr1l	equ	0xFE1
  2654                           indf2	equ	0xFDF
  2655                           fsr2h	equ	0xFDA
  2656                           fsr2l	equ	0xFD9
  2657                           status	equ	0xFD8
  2658                           
  2659                           	psect	intcode_body
  2660  0008E2                     __pintcode_body:
  2661                           	opt stack 26
  2662  0008E2                     int_func:
  2663                           	opt stack 26
  2664  0008E2  0006               	pop		; remove dummy address from shadow register refresh
  2665  0008E4  CFFA F046          	movff	pclath,??_isr
  2666  0008E8  CFFB F047          	movff	pclatu,??_isr+1
  2667  0008EC  CFE9 F048          	movff	fsr0l,??_isr+2
  2668  0008F0  CFEA F049          	movff	fsr0h,??_isr+3
  2669  0008F4  CFE1 F04A          	movff	fsr1l,??_isr+4
  2670  0008F8  CFE2 F04B          	movff	fsr1h,??_isr+5
  2671  0008FC  CFD9 F04C          	movff	fsr2l,??_isr+6
  2672  000900  CFDA F04D          	movff	fsr2h,??_isr+7
  2673  000904  CFF3 F04E          	movff	prodl,??_isr+8
  2674  000908  CFF4 F04F          	movff	prodh,??_isr+9
  2675  00090C  CFF6 F050          	movff	tblptrl,??_isr+10
  2676  000910  CFF7 F051          	movff	tblptrh,??_isr+11
  2677  000914  CFF8 F052          	movff	tblptru,??_isr+12
  2678  000918  CFF5 F053          	movff	tablat,??_isr+13
  2679                           
  2680                           ;main.c: 20: if ((PIR1bits.CCP1IF) && (PIE1bits.CCP1IE)){
  2681  00091C  B49E               	btfsc	3998,2,c	;volatile
  2682  00091E  A49D               	btfss	3997,2,c	;volatile
  2683  000920  D022               	goto	i2l304
  2684                           
  2685                           ;main.c: 21: bordaParcial++;
  2686  000922  4A1D               	infsnz	_bordaParcial,f,c
  2687  000924  2A1E               	incf	_bordaParcial+1,f,c
  2688                           
  2689                           ;main.c: 22: bordaTotal++;
  2690  000926  4A1F               	infsnz	_bordaTotal,f,c
  2691  000928  2A20               	incf	_bordaTotal+1,f,c
  2692                           
  2693                           ;main.c: 23: if (bordaParcial == 500){
  2694  00092A  0EF4               	movlw	244
  2695  00092C  181D               	xorwf	_bordaParcial,w,c
  2696  00092E  E10B               	bnz	i2l1525
  2697  000930  041E               	decf	_bordaParcial+1,w,c
  2698  000932  A4D8               	btfss	status,2,c
  2699  000934  D008               	goto	i2l1525
  2700                           
  2701                           ;main.c: 24: atualizaOdoParcial = 1;
  2702  000936  0E00               	movlw	0
  2703  000938  6E1A               	movwf	_atualizaOdoParcial+1,c
  2704  00093A  0E01               	movlw	1
  2705  00093C  6E19               	movwf	_atualizaOdoParcial,c
  2706                           
  2707                           ;main.c: 25: bordaParcial = 0;
  2708  00093E  0E00               	movlw	0
  2709  000940  6E1E               	movwf	_bordaParcial+1,c
  2710  000942  0E00               	movlw	0
  2711  000944  6E1D               	movwf	_bordaParcial,c
  2712  000946                     i2l1525:
  2713                           
  2714                           ;main.c: 26: }
  2715                           ;main.c: 27: if (bordaTotal == 5000){
  2716  000946  0E88               	movlw	136
  2717  000948  181F               	xorwf	_bordaTotal,w,c
  2718  00094A  E10C               	bnz	i2l1529
  2719  00094C  0E13               	movlw	19
  2720  00094E  1820               	xorwf	_bordaTotal+1,w,c
  2721  000950  A4D8               	btfss	status,2,c
  2722  000952  D008               	goto	i2l1529
  2723                           
  2724                           ;main.c: 28: atualizaOdoTotal = 1;
  2725  000954  0E00               	movlw	0
  2726  000956  6E1C               	movwf	_atualizaOdoTotal+1,c
  2727  000958  0E01               	movlw	1
  2728  00095A  6E1B               	movwf	_atualizaOdoTotal,c
  2729                           
  2730                           ;main.c: 29: bordaTotal = 0;
  2731  00095C  0E00               	movlw	0
  2732  00095E  6E20               	movwf	_bordaTotal+1,c
  2733  000960  0E00               	movlw	0
  2734  000962  6E1F               	movwf	_bordaTotal,c
  2735  000964                     i2l1529:
  2736                           
  2737                           ;main.c: 30: }
  2738                           ;main.c: 31: PIR1bits.CCP1IF = 0;
  2739  000964  949E               	bcf	3998,2,c	;volatile
  2740  000966                     i2l304:
  2741  000966  C053  FFF5         	movff	??_isr+13,tablat
  2742  00096A  C052  FFF8         	movff	??_isr+12,tblptru
  2743  00096E  C051  FFF7         	movff	??_isr+11,tblptrh
  2744  000972  C050  FFF6         	movff	??_isr+10,tblptrl
  2745  000976  C04F  FFF4         	movff	??_isr+9,prodh
  2746  00097A  C04E  FFF3         	movff	??_isr+8,prodl
  2747  00097E  C04D  FFDA         	movff	??_isr+7,fsr2h
  2748  000982  C04C  FFD9         	movff	??_isr+6,fsr2l
  2749  000986  C04B  FFE2         	movff	??_isr+5,fsr1h
  2750  00098A  C04A  FFE1         	movff	??_isr+4,fsr1l
  2751  00098E  C049  FFEA         	movff	??_isr+3,fsr0h
  2752  000992  C048  FFE9         	movff	??_isr+2,fsr0l
  2753  000996  C047  FFFB         	movff	??_isr+1,pclatu
  2754  00099A  C046  FFFA         	movff	??_isr,pclath
  2755  00099E  9254               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2756  0009A0  0011               	retfie		f
  2757  0009A2                     __end_of_isr:
  2758                           	opt stack 0
  2759                           pclatu	equ	0xFFB
  2760                           pclath	equ	0xFFA
  2761                           tblptru	equ	0xFF8
  2762                           tblptrh	equ	0xFF7
  2763                           tblptrl	equ	0xFF6
  2764                           tablat	equ	0xFF5
  2765                           prodh	equ	0xFF4
  2766                           prodl	equ	0xFF3
  2767                           intcon	equ	0xFF2
  2768                           intcon2	equ	0xFF1
  2769                           intcon3	equ	0xFF0
  2770                           indf0	equ	0xFEF
  2771                           postinc0	equ	0xFEE
  2772                           fsr0h	equ	0xFEA
  2773                           fsr0l	equ	0xFE9
  2774                           wreg	equ	0xFE8
  2775                           postdec1	equ	0xFE5
  2776                           fsr1h	equ	0xFE2
  2777                           fsr1l	equ	0xFE1
  2778                           indf2	equ	0xFDF
  2779                           fsr2h	equ	0xFDA
  2780                           fsr2l	equ	0xFD9
  2781                           status	equ	0xFD8
  2782                           pclatu	equ	0xFFB
  2783                           pclath	equ	0xFFA
  2784                           tblptru	equ	0xFF8
  2785                           tblptrh	equ	0xFF7
  2786                           tblptrl	equ	0xFF6
  2787                           tablat	equ	0xFF5
  2788                           prodh	equ	0xFF4
  2789                           prodl	equ	0xFF3
  2790                           intcon	equ	0xFF2
  2791                           intcon2	equ	0xFF1
  2792                           intcon3	equ	0xFF0
  2793                           indf0	equ	0xFEF
  2794                           postinc0	equ	0xFEE
  2795                           fsr0h	equ	0xFEA
  2796                           fsr0l	equ	0xFE9
  2797                           wreg	equ	0xFE8
  2798                           postdec1	equ	0xFE5
  2799                           fsr1h	equ	0xFE2
  2800                           fsr1l	equ	0xFE1
  2801                           indf2	equ	0xFDF
  2802                           fsr2h	equ	0xFDA
  2803                           fsr2l	equ	0xFD9
  2804                           status	equ	0xFD8
  2805                           
  2806                           	psect	rparam
  2807  0000                     pclatu	equ	0xFFB
  2808                           pclath	equ	0xFFA
  2809                           tblptru	equ	0xFF8
  2810                           tblptrh	equ	0xFF7
  2811                           tblptrl	equ	0xFF6
  2812                           tablat	equ	0xFF5
  2813                           prodh	equ	0xFF4
  2814                           prodl	equ	0xFF3
  2815                           intcon	equ	0xFF2
  2816                           intcon2	equ	0xFF1
  2817                           intcon3	equ	0xFF0
  2818                           indf0	equ	0xFEF
  2819                           postinc0	equ	0xFEE
  2820                           fsr0h	equ	0xFEA
  2821                           fsr0l	equ	0xFE9
  2822                           wreg	equ	0xFE8
  2823                           postdec1	equ	0xFE5
  2824                           fsr1h	equ	0xFE2
  2825                           fsr1l	equ	0xFE1
  2826                           indf2	equ	0xFDF
  2827                           fsr2h	equ	0xFDA
  2828                           fsr2l	equ	0xFD9
  2829                           status	equ	0xFD8
  2830                           
  2831                           	psect	temp
  2832  000054                     btemp:
  2833                           	opt stack 0
  2834  000054                     	ds	1
  2835  0000                     int$flags	set	btemp
  2836                           pclatu	equ	0xFFB
  2837                           pclath	equ	0xFFA
  2838                           tblptru	equ	0xFF8
  2839                           tblptrh	equ	0xFF7
  2840                           tblptrl	equ	0xFF6
  2841                           tablat	equ	0xFF5
  2842                           prodh	equ	0xFF4
  2843                           prodl	equ	0xFF3
  2844                           intcon	equ	0xFF2
  2845                           intcon2	equ	0xFF1
  2846                           intcon3	equ	0xFF0
  2847                           indf0	equ	0xFEF
  2848                           postinc0	equ	0xFEE
  2849                           fsr0h	equ	0xFEA
  2850                           fsr0l	equ	0xFE9
  2851                           wreg	equ	0xFE8
  2852                           postdec1	equ	0xFE5
  2853                           fsr1h	equ	0xFE2
  2854                           fsr1l	equ	0xFE1
  2855                           indf2	equ	0xFDF
  2856                           fsr2h	equ	0xFDA
  2857                           fsr2l	equ	0xFD9
  2858                           status	equ	0xFD8


Data Sizes:
    Strings     3
    Constant    0
    Data        21
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     14      83
    BANK0           160      8       8
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    EscreveFraseRamLCD@buffer	PTR unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[3]), STR_1(CODE[3]), odoParcial(COMRAM[7]), odoTotal(COMRAM[7]), 
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 7
		 -> EscreveInteiroLCD@texto(COMRAM[7]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_odometroParcial
    _odometroTotal->_PosicaoCursorLCD
    _odometroParcial->_PosicaoCursorLCD
    _display->_PosicaoCursorLCD
    _PosicaoCursorLCD->_EnderecoCursor
    _EnderecoCursor->_Delay
    _EscreveFraseRamLCD->_EscreveCaractereLCD
    _EscreveCaractereLCD->_Delay
    _ConfiguraLCD->_EscreveComandoLCD
    _EscreveComandoLCD->_Delay

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6279
                       _ConfiguraLCD
                        _Init_EEPROM
                            _display
                             _initHw
                      _initInterrupt
                    _odometroParcial
                      _odometroTotal
 ---------------------------------------------------------------------------------
 (1) _odometroTotal                                        0     0      0    1914
                 _EscreveFraseRamLCD
                   _PosicaoCursorLCD
 ---------------------------------------------------------------------------------
 (1) _odometroParcial                                      2     2      0    2025
                                              6 BANK0      2     2      0
                 _EscreveFraseRamLCD
                   _PosicaoCursorLCD
 ---------------------------------------------------------------------------------
 (1) _initInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initHw                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              0     0      0    1914
                 _EscreveFraseRamLCD
                   _PosicaoCursorLCD
 ---------------------------------------------------------------------------------
 (2) _PosicaoCursorLCD                                     3     2      1    1042
                                              3 BANK0      3     2      1
                     _EnderecoCursor
 ---------------------------------------------------------------------------------
 (3) _EnderecoCursor                                       1     1      0     246
                                              2 BANK0      1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (2) _EscreveFraseRamLCD                                   2     0      2     872
                                              3 BANK0      2     0      2
                _EscreveCaractereLCD
 ---------------------------------------------------------------------------------
 (3) _EscreveCaractereLCD                                  1     1      0     268
                                              2 BANK0      1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _Init_EEPROM                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0     426
                                              3 BANK0      1     1      0
                              _Delay
                  _EscreveComandoLCD
 ---------------------------------------------------------------------------------
 (2) _EscreveComandoLCD                                    1     1      0     334
                                              2 BANK0      1     1      0
                              _Delay
 ---------------------------------------------------------------------------------
 (4) _Delay                                                2     2      0      92
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiguraLCD
     _Delay
     _EscreveComandoLCD
       _Delay
   _Init_EEPROM
   _display
     _EscreveFraseRamLCD
       _EscreveCaractereLCD
         _Delay
     _PosicaoCursorLCD
       _EnderecoCursor
         _Delay
   _initHw
   _initInterrupt
   _odometroParcial
     _EscreveFraseRamLCD
       _EscreveCaractereLCD
         _Delay
     _PosicaoCursorLCD
       _EnderecoCursor
         _Delay
   _odometroTotal
     _EscreveFraseRamLCD
       _EscreveCaractereLCD
         _Delay
     _PosicaoCursorLCD
       _EnderecoCursor
         _Delay

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8       8       5        5.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      E      53       1       88.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5B      20        0.0%
DATA                 0      0      5B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Sun Nov 24 18:08:31 2019

                          l21 0E46                            l31 09C2                            l40 0A00  
                          l41 0A0A                            l33 09CE                            l42 0A0C  
                          l19 0E34                            l43 0A16                            l35 09DA  
                          l51 0C10                            l44 0A18                            l36 09DC  
                          l60 0C4E                            l37 09F2                            l29 09B6  
                          l61 0C58                            l53 0C1C                            l38 09F4  
                          l62 0C5A                            l70 0AF8                            l39 09FE  
                          l63 0C64                            l55 0C28                            l80 0B8A  
                          l64 0C66                            l56 0C2A                            l57 0C40  
                          l90 0BD2                            l82 0B96                            l58 0C42  
                          l91 0BD4                            l59 0C4C                            l92 0BDE  
                          l84 0BA2                            l93 0BE0                            l94 0BEA  
                          l86 0BAE                            l95 0BEC                            l87 0BB0  
                          l88 0BC6                            l89 0BC8                           l203 08CE  
                         _isr 0008                           prod 000FF3                           wreg 000FE8  
                        l2011 0B1A                          l2031 0D54                          l2015 0B2E  
                        l2007 0B06                          l2023 0B4A                          l2025 0B68  
                        l2035 0D7E                          l2019 0B42                          l2027 0B6E  
                        l2133 0D2C                          l2323 0E96                          l2173 0856  
                        l2177 085E                          l2185 087A                          l2199 08B2  
                        l1933 0BA4                          l1925 0B8C                          l1961 09B8  
                        l1929 0B98                          l1883 0E4E                          l1875 0E3C  
                        l1869 0E2A                          l1965 09C4                          l1893 0C12  
                        l1969 09D0                          l1897 0C1E                          l1997 0A40  
                        ?_isr 0046                          STR_1 0801                          STR_2 0801  
                        u1500 0D74                          _LATA 000F89                          u1510 0D9E  
                        _LATB 000F8A                          _LATD 000F8C                          u1507 0D6A  
                        u1517 0D94                          _IPR1 000F9F                          _IPR2 000FA2  
                        u1807 0A86                          _PIE1 000F9D                          _PIE2 000FA0  
                        u1817 0AA2                          u1797 0A6A                          _PIR1 000F9E  
                        _PIR2 000FA1                          _RCON 000FD0                 ??_Init_EEPROM 0060  
                        _main 0E82                          fsr0h 000FEA                          fsr1h 000FE2  
                        indf0 000FEF                          fsr2h 000FDA                          fsr0l 000FE9  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        btemp 0054                          prodh 000FF4                          prodl 000FF3  
                        start 000E                  ___param_bank 000000    __end_of_EscreveFraseRamLCD 0DA6  
                       ??_isr 0046                         ?_main 0046                         _EEADR 000FA9  
                       _T0CON 000FD5                         _T1CON 000FCD                         i2l304 0966  
                       _PORTB 000F81                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISC 000F94                         _TRISD 000F95                         _TRISE 000F96  
                       _Delay 0E24               __end_of_display 0CE6          EscreveComandoLCD@cmd 0062  
                       pclath 000FFA                         tablat 000FF5                         status 000FD8  
            ?_odometroParcial 0046           __end_of_Init_EEPROM 0EBC               __initialization 0DEA  
      __size_of_initInterrupt 002E                  __end_of_main 0EA0                        ??_main 0068  
        __end_of_ConfiguraLCD 0AE4                 __activetblptr 000002             _EscreveComandoLCD 09A2  
                      ?_Delay 0046            ?_EscreveComandoLCD 0046                        _ADCON0 000FC2  
                      _ADCON1 000FC1                        _ADCON2 000FC0                        _ADRESH 000FC4  
                      _ADRESL 000FC3                        _EEDATA 000FA8                        _EECON1 000FA6  
                      _EECON2 000FA7                        i2l1525 0946                        i2l1529 0964  
                      _INTCON 000FF2           ??_EscreveComandoLCD 0062            _atualizaOdoParcial 0019  
            _tempoCombustivel 0023             ?_PosicaoCursorLCD 0063  __size_of_EscreveCaractereLCD 0084  
          ??_PosicaoCursorLCD 0064                        _initHw 0DA6                        clear_0 0E10  
   __end_of_EscreveComandoLCD 0A46                     ??_display 0066                  __pdataCOMRAM 0031  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8       __size_of_EnderecoCursor 007A                 _initInterrupt 0E54  
                 _Init_EEPROM 0EB6                    __accesstop 0060       __end_of__initialization 0E16  
               ___rparam_used 000001                 __end_of_Delay 0E54                __pcstackCOMRAM 0046  
                     ??_Delay 0060                ?_initInterrupt 0046         __size_of_ConfiguraLCD 009E  
                     _CCP1CON 000FBD                       ?_initHw 0046    __size_of_EscreveComandoLCD 00A4  
                  _bordaTotal 001F                       _INTCON2 000FF1                       _INTCON3 000FF0  
          _EscreveFraseRamLCD 0D52        __size_of_odometroTotal 006C           ?_EscreveFraseRamLCD 0063  
                _ConfiguraLCD 0A46       odometroParcial@position 0066                       __Hparam 0000  
                     __Lparam 0000                    _odoParcial 0038          ??_EscreveFraseRamLCD 0065  
                __psmallconst 0800               __size_of_initHw 0044                       __pcinit 0DEA  
                _bordaParcial 001D                       __ramtop 0800                       __ptext0 0E82  
                     __ptext1 0CE6                       __ptext2 0806                       __ptext3 0E54  
                     __ptext4 0DA6                       __ptext5 0C74                       __ptext6 0AE4  
                     __ptext7 0BFA                       __ptext8 0D52                       __ptext9 0B76  
                     _display 0C74          odometroParcial@trava 0067               ??_initInterrupt 0060  
                __size_of_isr 099A                     _T3CONbits 000FB1                _EnderecoCursor 0BFA  
                     _reserva 002B                       _numeroC 0029                     Delay@Cnt1 0060  
                   Delay@Cnt2 0061                __pintcode_body 08E2           _EscreveCaractereLCD 0B76  
        end_of_initialization 0E16                 __Lmediumconst 0000                       int_func 08E2  
               _odometroTotal 0CE6                       postdec1 000FE5                       postinc0 000FEE  
        ?_EscreveCaractereLCD 0046      __size_of_odometroParcial 00DC   PosicaoCursorLCD@EnderecoLCD 0065  
                   _PORTCbits 000F82                     _PORTDbits 000F83                     _PORTEbits 000F84  
      __end_of_EnderecoCursor 0C74                     _TRISCbits 000F94                     _TRISDbits 000F95  
   __size_of_PosicaoCursorLCD 0092                  ?_Init_EEPROM 0046                ?_odometroTotal 0046  
       ??_EscreveCaractereLCD 0062                 __pidataCOMRAM 0EA0              _atualizaOdoTotal 001B  
              __end_of_initHw 0DEA               ?_EnderecoCursor 0046           start_initialization 0DEA  
                 __end_of_isr 09A2      EscreveFraseRamLCD@buffer 0063                      ??_initHw 0060  
           ??_odometroParcial 0066                   __pbssCOMRAM 0001                 __pcstackBANK0 0060  
            odometroParcial@i 002C               ??_odometroTotal 0066                     __pintcode 0008  
                   _combArray 0001                 _valorADCMedia 0025        EscreveInteiroLCD@F3948 0031  
                    ?_display 0046                   __smallconst 0800                __size_of_Delay 0030  
            _PosicaoCursorLCD 0AE4        EnderecoCursor@endereco 0062          __size_of_Init_EEPROM 0006  
                    _PIE1bits 000F9D                      _PIR1bits 000F9E       EscreveCaractereLCD@data 0062  
 __size_of_EscreveFraseRamLCD 0054                    _ADCON0bits 000FC2         __end_of_initInterrupt 0E82  
              _primeiroFiltro 002A                     copy_data0 0DFE                    _EECON1bits 000FA6  
                    __Hrparam 0000             _porcentagemTensao 0015                      __Lrparam 0000  
            ??_EnderecoCursor 0062              __size_of_display 0072                      __ptext10 0EB6  
                    __ptext11 0A46                      __ptext12 09A2                      __ptext13 0E24  
                    _countLed 0021                      _odoTotal 003F                 __size_of_main 001E  
 __end_of_EscreveCaractereLCD 0BFA                      _valorADC 002D               _odometroParcial 0806  
                    int$flags 0054                    _INTCONbits 000FF2                      intlevel2 0000  
               ?_ConfiguraLCD 0046      __end_of_PosicaoCursorLCD 0B76        PosicaoCursorLCD@coluna 0063  
                 _valorTensao 0027         PosicaoCursorLCD@linha 0064                ??_ConfiguraLCD 0063  
     __end_of_odometroParcial 08E2         __end_of_odometroTotal 0D52  
